{"version":3,"sources":["components/UI/starParallax/starsParallax.module.scss","components/crawl.module.css","components/header/header.module.scss","components/UI/loader/loader.module.scss","components/neonButon.module.scss","components/UI/flipCard/flipCard.module.scss","reportWebVitals.js","store/actions/types.js","store/reducers/characters-reducer.js","store/reducers/toasts-reducer.js","store/reducers/starships-reducer.js","store/reducers/films-reducer.js","store/reducers/vehicles-reducer.js","store/reducers/species-reducer.js","store/reducers/planets-reducer.js","store/reducers/index.js","store/index.js","store/StoreProvider.js","components/UI/starParallax/starParallax.js","store/actions/toast-actions.js","components/UI/toasts.js","components/UI/loader/loader.js","utils/swapi.js","components/UI/flipCard/flipCard.js","assets/images/jedi.svg","components/cloudImage.js","components/neonButton.js","components/basicCard.js","components/featuredBox.js","api/swAPI.js","store/actions/common.js","store/actions/films-actions.js","store/actions/characters-actions.js","store/actions/planets-actions.js","store/actions/starships-actions.js","store/actions/vehicles-actions.js","store/actions/species-actions.js","components/layout.js","components/Home/home.js","hooks/useVisible.js","components/pageTitle.js","components/categoryPage.js","components/page404.js","components/crawl.js","components/dataBox.js","components/Films/filmPage.js","assets/images/star_wars_logo.svg","components/header/header.js","components/landingPage.js","components/Characters/characterPage.js","components/Planets/planetPage.js","components/Starships/starshipPage.js","components/Species/speciesPage.js","components/footer.js","components/Vehicles/vehiclePage.js","app.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_CHARACTER_PAGE","GET_CHARACTERS","GET_STARSHIP_PAGE","GET_STARSHIPS","GET_VEHICLE_PAGE","GET_VEHICLES","GET_SPECIES_PAGE","GET_SPECIES","GET_PLANET_PAGE","GET_PLANETS","GET_FILM_PAGE","GET_FILMS","GLOBAL_SUCCESS","GLOBAL_ERROR","CLEAR_TOAST","INIT_STATE","total","next","items","Map","error","success","msg","rootReducer","combineReducers","films","state","action","type","payload","characters","planets","species","starships","toasts","vehicles","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","StoreProvider","children","StarParallax","className","classes","sky","stars","stars2","stars3","globalError","clearToast","dispatch","Toasts","useSelector","useDispatch","useEffect","showToast","toast","position","POSITION","BOTTOM_RIGHT","theme","Loader","loader","content","starWarsAPIModel","average_height","String","label","suffix","average_lifespan","birth_year","cargo_capacity","classification","Array","consumables","cost_in_credits","climate","crew","designation","diameter","director","episode_id","eye_color","eye_colors","gender","gravity","hair_color","hair_colors","height","homeworld","link","hyperdrive_rating","language","length","max_atmosphering_speed","manufacturer","mass","MGLT","model","opening_crawl","orbital_period","passengers","people","pilots","population","producer","release_date","residents","rotation_period","skin_color","skin_colors","surface_water","starship_class","terrain","vehicle_class","formatSWAPIDataTable","data","skipArrays","skipFields","rows","key","undefined","push","skipProp","includes","toString","e","console","log","FlipCard","flipCard","CloudImage","src","title","onError","target","onerror","style","width","opacity","transform","jediLogo","NeonButton","clsx","container","button","BasicCard","category","item","itemDataTable","name","id","to","FeaturedBox","stateSlice","getDataAction","itemsMap","useState","loading","setLoading","finally","maxWidth","size","values","slice","map","minWidth","getSWAPIDataPage","url","a","axios","get","response","results","forEach","substring","lastIndexOf","set","count","stateSliceToSWAPIResource","getSWAPIDataItem","resource","getSWAPIResourceDataPage","options","defaultURL","resourceType","oldState","newState","newItems","actionType","message","getSWAPIResourceSelectedItems","newItemList","selectedItems","filter","has","newItemId","getFilmPage","getState","getFilms","filmIds","getCharacterPage","getCharacters","charactersIds","getPlanetPage","getPlanets","planetIds","getStarshipPage","getStarships","starshipIds","getVehiclePage","getVehicles","vehicleIds","getSpeciesPage","getSpecies","speciesIds","Layout","Home","useVisible","ref","defIntersecting","updateOnlyIfIntersecting","rootMargin","isIntersecting","setIntersecting","refCopy","observer","IntersectionObserver","entry","value","Number","current","observe","unobserve","PageTitle","CategoryPage","pageTitle","loadMore","useRef","isVisible","Page404","Crawl","body","fade","starWars","crawl","DataBox","loadedItems","itemsIds","path","extractSWAPIId","neededIds","foundItems","FilmPage","parseInt","useParams","film","Header","header","logo","alt","logoTitle","React","memo","dataLoader","LandingPage","pageTarget","caption","CharacterPage","PlanetPage","StarshipPage","SpeciesPage","Footer","VehiclePage","App","basename","process","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,IAAM,2BAA2B,MAAQ,6BAA6B,SAAW,gCAAgC,OAAS,8BAA8B,OAAS,gC,mBCAnLD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,SAAW,wBAAwB,MAAQ,qBAAqB,MAAQ,uB,mBCAhJD,EAAOC,QAAU,CAAC,iBAAiB,+BAA+B,YAAY,0BAA0B,cAAc,4BAA4B,OAAS,uBAAuB,UAAY,0BAA0B,KAAO,qBAAqB,UAAY,4B,mBCAhQD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,QAAU,0B,mBCA1GD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,4B,mBCApED,EAAOC,QAAU,CAAC,SAAW,6B,iGCWdC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCPDQ,EAAqB,qBACrBC,EAAiB,iBAGjBC,EAAoB,oBACpBC,EAAgB,gBAGhBC,EAAmB,mBACnBC,EAAe,eAGfC,EAAmB,mBACnBC,EAAc,cAGdC,EAAkB,kBAClBC,EAAc,cAGdC,EAAgB,gBAChBC,EAAY,YAEZC,EAAiB,iBACjBC,EAAe,eACfC,EAAc,cCvBrBC,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,KCHf,IAAMJ,EAAa,CACfK,OAAO,EACPC,SAAS,EACTC,IAAK,ICHT,IAAMP,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,KCHf,IAAMJ,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,KCHf,IAAMJ,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,KCHf,IAAMJ,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,KCHf,IAAMJ,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,KCIf,IAAMI,EAAcC,0BAAgB,CAChCC,MJFW,WAAmD,IAA7BC,EAA4B,uDAApBX,EAAYY,EAAQ,uCAC7D,OAAQA,EAAOC,MACX,KAAKlB,EACD,OAAO,2BAAIgB,GAAUC,EAAOE,SAChC,KAAKlB,EACD,OAAO,2BAAIe,GAAX,IAAkBR,MAAOS,EAAOE,UACpC,QACI,OAAOH,IIJfI,WPHW,WAAwD,IAA7BJ,EAA4B,uDAApBX,EAAYY,EAAQ,uCAClE,OAAQA,EAAOC,MACX,KAAK5B,EACD,OAAO,2BAAI0B,GAAUC,EAAOE,SAChC,KAAK5B,EACD,OAAO,2BAAIyB,GAAX,IAAkBR,MAAOS,EAAOE,UACpC,QACI,OAAOH,IOHfK,QDJW,WAAqD,IAA7BL,EAA4B,uDAApBX,EAAYY,EAAQ,uCAC/D,OAAQA,EAAOC,MACX,KAAKpB,EACD,OAAO,2BAAIkB,GAAUC,EAAOE,SAChC,KAAKpB,EACD,OAAO,2BAAIiB,GAAX,IAAkBR,MAAOS,EAAOE,UACpC,QACI,OAAOH,ICFfM,QFLW,WAAqD,IAA7BN,EAA4B,uDAApBX,EAAYY,EAAQ,uCAC/D,OAAQA,EAAOC,MACX,KAAKtB,EACD,OAAO,2BAAIoB,GAAUC,EAAOE,SAChC,KAAKtB,EACD,OAAO,2BAAImB,GAAX,IAAkBR,MAAOS,EAAOE,UACpC,QACI,OAAOH,IEDfO,ULNW,WAAuD,IAA7BP,EAA4B,uDAApBX,EAAYY,EAAQ,uCACjE,OAAQA,EAAOC,MACX,KAAK1B,EACD,OAAO,2BAAIwB,GAAUC,EAAOE,SAChC,KAAK1B,EACD,OAAO,2BAAIuB,GAAX,IAAkBR,MAAOS,EAAOE,UACpC,QACI,OAAOH,IKAfQ,ONPW,WAAoD,IAA7BR,EAA4B,uDAApBX,EAAYY,EAAQ,uCAC9D,OAAQA,EAAOC,MACX,KAAKf,EACD,OAAO,2BAAIa,GAAX,IAAkBN,OAAO,EAAME,IAAKK,EAAOE,UAC/C,KAAKjB,EACD,OAAO,2BAAIc,GAAX,IAAkBL,SAAS,EAAMC,IAAKK,EAAOE,UACjD,KAAKf,EACD,MAAO,GACX,QACI,OAAOY,IMDfS,SHRW,WAAsD,IAA7BT,EAA4B,uDAApBX,EAAYY,EAAQ,uCAChE,OAAQA,EAAOC,MACX,KAAKxB,EACD,OAAO,2BAAIsB,GAAUC,EAAOE,SAChC,KAAKxB,EACD,OAAO,2BAAIqB,GAAX,IAAkBR,MAAOS,EAAOE,UACpC,QACI,OAAOH,MGIJH,I,gBCdTa,EAAmBC,8BAAoBC,0BAAgBC,MAG9CC,EAFDC,sBAAYlB,EAAaa,G,OCGxBM,EANO,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OAClB,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACKG,K,iBCMMC,EAVM,WACjB,OACI,sBAAKC,UAAWC,IAAQC,IAAxB,UACI,qBAAKF,UAAWC,IAAQE,QACxB,qBAAKH,UAAWC,IAAQG,SACxB,qBAAKJ,UAAWC,IAAQI,a,sBCJvBC,EAAc,SAAC7B,GAAD,MAAU,CACjCM,KAAMf,EACNgB,QAASP,IAQA8B,EAAa,WACtB,OAAO,SAACC,GACJA,EAAS,CACLzB,KAAMd,M,MCTX,SAASwC,IACZ,IAAMpB,EAASqB,aAAY,SAAA7B,GAAK,OAAIA,EAAMQ,UACpCmB,EAAWG,cAkCjB,OA/BAC,qBAAU,WACN,SAASC,EAAU9B,EAAMN,GACrB,OAAOM,GACH,IAAK,UACD+B,IAAMtC,QAAQC,EAAI,CACdsC,SAAUD,IAAME,SAASC,aACzBC,MAAO,SAEX,MACJ,IAAK,QACDJ,IAAMvC,MAAME,EAAI,CACZsC,SAAUD,IAAME,SAASC,aACzBC,MAAO,SAEX,MACJ,QACI,OAAO,GAIf7B,GAAUA,EAAOd,QAEjBsC,EAAU,QADExB,EAAOZ,IAAMY,EAAOZ,IAAM,SAEtC+B,EAASD,MAETlB,GAAUA,EAAOb,UAEjBqC,EAAU,UADExB,EAAOZ,IAAMY,EAAOZ,IAAM,OAEtC+B,EAASD,QAEd,CAAClB,EAAQmB,IAER,cAAC,IAAD,I,qCC1CD,SAASW,KACZ,OACI,qBAAKnB,UAAWC,IAAQmB,OAAxB,SACI,qBAAKpB,UAAWC,IAAQoB,QAAxB,0BCFZ,IAAMC,GAAmB,CACrBC,eAAgB,CACZxC,KAAMyC,OACNC,MAAO,iBACPC,OAAQ,MAEZC,iBAAkB,CACd5C,KAAMyC,OACNC,MAAO,mBACPC,OAAQ,KAEZE,WAAY,CACR7C,KAAMyC,OACNC,MAAO,cAEXI,eAAgB,CACZ9C,KAAMyC,OACNC,MAAO,kBAEXK,eAAgB,CACZ/C,KAAMyC,OACNC,MAAO,kBAEXxC,WAAY,CACRF,KAAMgD,MACNN,MAAO,cAEXO,YAAa,CACTjD,KAAMyC,OACNC,MAAO,eAEXQ,gBAAiB,CACblD,KAAMyC,OACNC,MAAO,mBAEXS,QAAS,CACLnD,KAAMyC,OACNC,MAAO,WAEXU,KAAM,CACFpD,KAAMyC,OACNC,MAAO,QAEXW,YAAa,CACTrD,KAAMyC,OACNC,MAAO,eAEXY,SAAU,CACNtD,KAAMyC,OACNC,MAAO,YAEXa,SAAU,CACNvD,KAAMyC,OACNC,MAAO,YAEXc,WAAY,CACRxD,KAAMyC,OACNC,MAAO,cAEXe,UAAW,CACPzD,KAAMyC,OACNC,MAAO,aAEXgB,WAAY,CACR1D,KAAMyC,OACNC,MAAO,cAEX7C,MAAO,CACHG,KAAMgD,MACNN,MAAO,SAEXiB,OAAQ,CACJ3D,KAAMyC,OACNC,MAAO,UAEXkB,QAAS,CACL5D,KAAMyC,OACNC,MAAO,WAEXmB,WAAY,CACR7D,KAAMyC,OACNC,MAAO,cAEXoB,YAAa,CACT9D,KAAMyC,OACNC,MAAO,eAEXqB,OAAQ,CACJ/D,KAAMyC,OACNC,MAAO,SACPC,OAAQ,MAEZqB,UAAW,CACPhE,KAAMyC,OACNC,MAAO,aACPuB,MAAM,GAEVC,kBAAmB,CACflE,KAAMyC,OACNC,MAAO,qBAEXyB,SAAU,CACNnE,KAAMyC,OACNC,MAAO,YAEX0B,OAAQ,CACJpE,KAAMyC,OACNC,MAAO,UAEX2B,uBAAwB,CACpBrE,KAAMyC,OACNC,MAAO,aAEX4B,aAAc,CACVtE,KAAMyC,OACNC,MAAO,gBAEX6B,KAAM,CACFvE,KAAMyC,OACNC,MAAO,OACPC,OAAQ,MAEZ6B,KAAM,CACFxE,KAAMyC,OACNC,MAAO,QAEX+B,MAAO,CACHzE,KAAMyC,OACNC,MAAO,SAEXgC,cAAe,CACX1E,KAAMyC,OACNC,MAAO,iBAEXiC,eAAgB,CACZ3E,KAAMyC,OACNC,MAAO,kBAEXkC,WAAY,CACR5E,KAAMyC,OACNC,MAAO,cAEXmC,OAAQ,CACJ7E,KAAMgD,MACNN,MAAO,UAEXoC,OAAQ,CACJ9E,KAAMgD,MACNN,MAAO,UAEXvC,QAAS,CACLH,KAAMgD,MACNN,MAAO,WAEXqC,WAAY,CACR/E,KAAMyC,OACNC,MAAO,cAEXsC,SAAU,CACNhF,KAAMyC,OACNC,MAAO,YAEXuC,aAAc,CACVjF,KAAMyC,OACNC,MAAO,gBAEXwC,UAAW,CACPlF,KAAMgD,MACNN,MAAO,aAEXyC,gBAAiB,CACbnF,KAAMyC,OACNC,MAAO,mBAEX0C,WAAY,CACRpF,KAAMyC,OACNC,MAAO,cAEX2C,YAAa,CACTrF,KAAMyC,OACNC,MAAO,eAEXtC,QAAS,CACLJ,KAAMgD,MACNN,MAAO,WAEX4C,cAAe,CACXtF,KAAMyC,OACNC,MAAO,iBAEXrC,UAAW,CACPL,KAAMgD,MACNN,MAAO,aAEX6C,eAAgB,CACZvF,KAAMyC,OACNC,MAAO,kBAEX8C,QAAS,CACLxF,KAAMyC,OACNC,MAAO,WAEX+C,cAAe,CACXzF,KAAMyC,OACNC,MAAO,iBAEXnC,SAAU,CACNP,KAAMgD,MACNN,MAAO,aAcR,SAASgD,GAAqBC,GAA0D,IAAtCC,EAAqC,wDAAjBC,EAAiB,uDAAJ,GAElFC,EAAO,GACX,IAAK,IAAMC,KAAOJ,EACd,QAA8BK,IAA1BzD,GAAiBwD,GACjB,GAAIxD,GAAiBwD,GAAK/F,OAASgD,OACzB4C,GAAgBD,EAAKI,GAAK3B,OAAS,EACrC0B,EAAKG,KACD,+BACI,6BAAK1D,GAAiBwD,GAAKrD,QAC3B,yCAFKqD,IAMRH,GACDE,EAAKG,KACD,+BACI,6BAAK1D,GAAiBwD,GAAKrD,QAC3B,yCAFKqD,QAOlB,CACH,IAAMG,EAAW,CAAC,MAAO,UAAW,MAAO,MAC3C,IACUA,EAASC,SAASR,EAAKI,KAASF,EAAWM,SAASJ,IACtDD,EAAKG,KACD,+BACI,oBAAIhF,UAAW,QAAf,SACI,qBAAKA,UAAW,sBAAhB,SAAwCsB,GAAiBwD,GAAKrD,UAElE,6BACI,qBAAKzB,UAAW,sBAAhB,SACI,oBAAGA,UAAW,oBAAd,UAAoC0E,EAAKI,GAAKK,WAAY7D,GAAiBwD,GAAKpD,gBANnFoD,IAYnB,MAAOM,GACLC,QAAQC,IAAIR,IAO5B,OACI,gCACI,gCACCD,M,wBChRAU,GAAW,SAAC,GAAgB,IAAfzF,EAAc,EAAdA,SAEtB,OACI,qBAAKE,UAAWC,KAAQuF,SAAxB,SACK1F,KCPE,OAA0B,iCCElC,SAAS2F,GAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,IAAY1F,GAAY,EAAnB2F,MAAmB,EAAZ3F,WAEpC,OAEI,aADA,CACA,OACIA,UAAWA,EACX0F,IAAKA,EACLE,QAAS,SAACR,GACNA,EAAES,OAAOC,QAAU,KAGnBV,EAAES,OAAOE,MAAMC,MAAQ,MACvBZ,EAAES,OAAOE,MAAME,QAAU,MACzBb,EAAES,OAAOE,MAAMG,UAAY,qBAC3Bd,EAAES,OAAOH,IAAMS,M,iCCHhBC,GAVI,SAAC,GAAgC,IAA/BtG,EAA8B,EAA9BA,SAA8B,IAApBE,iBAAoB,MAAR,GAAQ,EAC/C,OACI,qBAAKA,UAAWqG,aAAK,CAACpG,KAAQqG,UAAWtG,EAAU,uBAAnD,SACI,qBAAKA,UAAWC,KAAQsG,OAAxB,SACKzG,OCSJ0G,GAAY,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KAC3BC,EAAgBlC,GAAqBiC,OAAM3B,GAAW,GACxDY,OAAsBZ,IAAd2B,EAAKE,KAAqBF,EAAKE,KAAOF,EAAKf,MAEvD,OACI,eAAC,GAAD,WACI,oCACI,qBAAK3F,UAAW,4BAAhB,SACI,cAACyF,GAAD,CACIC,IAAG,wDAAmDe,EAAnD,YAA+DC,EAAKG,GAApE,QACHlB,MAAOA,MAMf,qBAAK3F,UAAW,qCAAhB,SAAuD2F,OAE3D,kCACI,sBAAK3F,UAAW,gBAAhB,UACI,sBAAKA,UAAW,8BAAhB,UACI,cAACyF,GAAD,CAAYzF,UAAW,yBAA0B0F,IAAG,wDAAmDe,EAAnD,YAA+DC,EAAKG,GAApE,UAEpD,mBAAG7G,UAAW,UAAd,SAA0B2F,OAE7BgB,EACD,cAAC,IAAD,CAAMG,GAAE,WAAML,EAAN,YAAkBC,EAAKG,IAA/B,SAAqC,cAAC,GAAD,CAAY7G,UAAW,YAAvB,6B,oBCoB1C+G,GArDK,SAAC,GAAwC,IAAvCpB,EAAsC,EAAtCA,MAAOqB,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAC/BC,EAAWxG,aAAY,SAAA7B,GAAK,OAAIA,EAAMmI,GAAY3I,SAClDmC,EAAWG,cACjB,EAA8BwG,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAzG,qBAAU,WACNJ,EAASyG,KAAiBK,QACtBD,GAAW,MAEhB,CAAC7G,EAAUyG,IAEV,mCACI,yBAASjH,UAAW,sCAApB,SACI,sBAAKA,UAAW,oBAAhB,UACI,6BAAK2F,IACL,sBAAK3F,UAAU,4BAAf,UACKoH,GAAW,cAACjG,GAAD,IACZ,cAAC,KAAD,CAAYoG,SAAU,IAAtB,SACKL,EAASM,KAAO,GAAK,YAAIN,EAASO,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACjB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUO,GAA/BN,EAAKG,SAG7B,cAAC,KAAD,CAAYU,SAAU,KAAMK,SAAU,IAAtC,SACKV,EAASM,KAAO,GAAK,YAAIN,EAASO,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACjB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUO,GAA/BN,EAAKG,SAG7B,cAAC,KAAD,CAAYU,SAAU,KAAMK,SAAU,KAAtC,SACKV,EAASM,KAAO,GAAK,YAAIN,EAASO,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACjB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUO,GAA/BN,EAAKG,SAG7B,cAAC,KAAD,CAAYe,SAAU,KAAtB,SACKV,EAASM,KAAO,GAAK,YAAIN,EAASO,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACjB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUO,GAA/BN,EAAKG,YAIjC,cAAC,IAAD,CAAMC,GAAE,WAAME,GAAchH,UAAW,yBAAvC,SACI,cAAC,GAAD,6B,wDC7CjB,SAAe6H,GAAtB,mC,gDAAO,WAAgCC,GAAhC,kBAAAC,EAAA,sEAEO1J,EAAQ,IAAIC,IAFnB,SAGwB0J,KAAMC,IAAIH,GAHlC,cAGOI,EAHP,QAIUxD,KAAKyD,QAAQC,SAAQ,SAAA1B,GAC1B,IAAMoB,EAAMpB,EAAKoB,IAAIJ,MAAM,GAAI,GACzB5C,EAAMgD,EAAIO,UAAUP,EAAIQ,YAAY,KAAO,GACjD5B,EAAKG,IAAM/B,EACXzG,EAAMkK,KAAKzD,EAAK4B,MARrB,kBAUQ,CACHvI,MAAO+J,EAASxD,KAAK8D,MACrBpK,KAAM8J,EAASxD,KAAKtG,KACpBC,MAAOA,IAbZ,qG,sBAoBP,IAAMoK,GAA4B,CAC9B7J,MAAO,QACPK,WAAY,SACZC,QAAS,UACTC,QAAS,UACTC,UAAW,YACXE,SAAU,YAGP,SAAeoJ,GAAtB,qC,gDAAO,WAAgC1B,EAAYH,GAA5C,kBAAAkB,EAAA,sEAEOY,EAAWF,GAA0BzB,GAF5C,SAGwBgB,KAAMC,IAAN,gCAAmCU,EAAnC,YAA+C9B,IAHvE,cAGOqB,EAHP,QAIUxD,KAAKmC,IAAMA,EAJrB,kBAKQqB,EAASxD,MALjB,qG,sBC7BA,SAAekE,GAAtB,mC,gDAAO,WAAwCC,GAAxC,wBAAAd,EAAA,kEAEOe,EAFP,gCAE6CD,EAAQE,aAFrD,OAIwB,KADjBC,EAAWH,EAAQG,UACZ7K,OAAe6K,EAAS3K,MAAMmJ,KAAOwB,EAAS7K,OAJ5D,iCAK4B0J,GAAmC,KAAlBmB,EAAS5K,KAAc4K,EAAS5K,KAAO0K,GALpF,cAKWG,EALX,OAMWC,EAAW,IAAI5K,IAAJ,sBAAY0K,EAAS3K,OAArB,YAA+B4K,EAAS5K,SACnDW,EAAU,CACZb,MAAO8K,EAAS9K,MAChBC,KAAM6K,EAAS7K,KACfC,MAAO6K,GAEXL,EAAQrI,SAAS,CAACzB,KAAM8J,EAAQM,WAAYnK,YAZjD,kBAaYA,GAbZ,0DAgBC6J,EAAQrI,SAASF,EAAY,KAAE8I,UAhBhC,2D,sBAoBA,SAAeC,GAAtB,mC,gDAAO,WAA6CR,GAA7C,0BAAAd,EAAA,qEAEOuB,EAAcT,EAAQU,cAAcC,QACrC,SAAA3C,GAAE,OAAKgC,EAAQG,SAAS3K,MAAMoL,IAAI5C,OAEvB1D,OAAS,GAL1B,iBAMW+F,EAAW,IAAI5K,IAN1B,eAO2BgL,GAP3B,gEAOcI,EAPd,aAQSR,EART,KAQsBQ,EARtB,UAQuChB,GAAiBG,EAAQE,aAAcW,GAR9E,yBAQkBnB,IARlB,2KAUWvJ,EAAU,IAAIV,IAAJ,sBAAYuK,EAAQG,SAAS3K,OAA7B,YAAuC6K,KACvDL,EAAQrI,SAAS,CAACzB,KAAM8J,EAAQM,WAAYnK,YAXjD,kBAYYA,GAZZ,0DAeC6J,EAAQrI,SAASF,EAAY,KAAE8I,UAfhC,wE,sBCnBA,SAASO,KACZ,gDAAO,WAAOnJ,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWhL,MACrB4B,SAAUA,EACVuI,aAAc,QACdI,WAAYtL,GALb,SAOG+K,GAAyBC,GAP5B,2CAAP,wDAWG,SAASgB,GAASC,GACrB,gDAAO,WAAOtJ,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWhL,MACrB4B,SAAUA,EACVuI,aAAc,QACdI,WAAYrL,EACZyL,cAAeO,GANhB,SASGT,GAA8BR,GATjC,2CAAP,wDCbG,SAASkB,KACZ,gDAAO,WAAOvJ,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAW3K,WACrBuB,SAAUA,EACVuI,aAAc,SACdI,WAAYhM,GALb,SAOGyL,GAAyBC,GAP5B,2CAAP,wDAYG,SAASmB,GAAcC,GAC1B,gDAAO,WAAOzJ,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAW3K,WACrBuB,SAAUA,EACVuI,aAAc,aACdI,WAAY/L,EACZmM,cAAeU,GANhB,SASGZ,GAA8BR,GATjC,2CAAP,wDCfG,SAASqB,KACZ,gDAAO,WAAO1J,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAW1K,QACrBsB,SAAUA,EACVuI,aAAc,UACdI,WAAYxL,GALb,SAOGiL,GAAyBC,GAP5B,2CAAP,wDAYG,SAASsB,GAAWC,GACvB,gDAAO,WAAO5J,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAW1K,QACrBsB,SAAUA,EACVuI,aAAc,UACdI,WAAYvL,EACZ2L,cAAea,GANhB,SASGf,GAA8BR,GATjC,2CAAP,wDCbG,SAASwB,KACZ,gDAAO,WAAO7J,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWxK,UACrBoB,SAAUA,EACVuI,aAAc,YACdI,WAAY9L,GALb,SAOGuL,GAAyBC,GAP5B,2CAAP,wDAYG,SAASyB,GAAaC,GACzB,gDAAO,WAAO/J,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWxK,UACrBoB,SAAUA,EACVuI,aAAc,YACdI,WAAY7L,EACZiM,cAAegB,GANhB,SASGlB,GAA8BR,GATjC,2CAAP,wDCdG,SAAS2B,KACZ,gDAAO,WAAOhK,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWtK,SACrBkB,SAAUA,EACVuI,aAAc,WACdI,WAAY5L,GALb,SAOGqL,GAAyBC,GAP5B,2CAAP,wDAWG,SAAS4B,GAAYC,GACxB,gDAAO,WAAOlK,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWtK,SACrBkB,SAAUA,EACVuI,aAAc,WACdI,WAAY3L,EACZ+L,cAAemB,GANhB,SASGrB,GAA8BR,GATjC,2CAAP,wDCbG,SAAS8B,KACZ,gDAAO,WAAOnK,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWzK,QACrBqB,SAAUA,EACVuI,aAAc,UACdI,WAAY1L,GALb,SAOGmL,GAAyBC,GAP5B,2CAAP,wDAYG,SAAS+B,GAAWC,GACvB,gDAAO,WAAOrK,EAAUoJ,GAAjB,gBAAA7B,EAAA,6DACGc,EAAU,CACZG,SAAUY,IAAWzK,QACrBqB,SAAUA,EACVuI,aAAc,UACdI,WAAYzL,EACZ6L,cAAesB,GANhB,SASGxB,GAA8BR,GATjC,2CAAP,wDChBG,IAAMiC,GAAS,SAAC,GAAD,IAAEhL,EAAF,EAAEA,SAAF,OAClB,sBAAME,UAAW,6BAAjB,SACKF,KCQF,SAASiL,KACZ,OACI,mCAEA,eAAC,GAAD,WACI,cAAC,GAAD,CAAapF,MAAO,QAASqB,WAAY,QAASC,cAAe0C,KACjE,cAAC,GAAD,CAAahE,MAAO,aAAcqB,WAAY,aAAcC,cAAe8C,KAC3E,cAAC,GAAD,CAAapE,MAAO,UAAWqB,WAAY,UAAWC,cAAeiD,KACrE,cAAC,GAAD,CAAavE,MAAO,YAAaqB,WAAY,YAAaC,cAAeoD,KACzE,cAAC,GAAD,CAAa1E,MAAO,WAAYqB,WAAY,WAAYC,cAAeuD,KACvE,cAAC,GAAD,CAAa7E,MAAO,UAAWqB,WAAY,UAAWC,cAAe0D,U,aCclEK,GAhCI,SAACC,GAAwF,IAAnFC,EAAkF,wDAAzDC,EAAyD,wDAAvBC,EAAuB,uDAAV,MAE7F,EAA0CjE,mBAAS+D,GAAnD,mBAAOG,EAAP,KAAuBC,EAAvB,KA2BA,OA1BA1K,qBAAU,WACN,IAAM2K,EAAUN,EACVO,EAAW,IAAIC,sBACjB,YAAc,IAAZC,EAAW,oBAELP,EACIO,EAAML,gBACNC,GAAgB,SAACK,GAAD,OAAWC,OAAOD,GAAS,KAE/CL,EAAgBI,EAAML,kBAG9B,CACID,eAOR,OAHIG,EAAQM,SACRL,EAASM,QAAQP,EAAQM,SAEtB,WACHxG,QAAQC,IAAI,cAAeiG,EAAQM,SAC/BN,EAAQM,SACRL,EAASO,UAAUR,EAAQM,YAEpC,CAACZ,EAAKE,EAA0BC,IAC5BC,GC9BEW,GAAY,SAAC,GAAD,IAAErG,EAAF,EAAEA,MAAF,OACrB,oBAAI3F,UAAW,iFAAf,SAAkG2F,K,0CCgDvFsG,GA3CM,SAAC,GAAsD,IAAD,IAApDtG,aAAoD,MAA5C,GAA4C,EAAxCqB,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,cACrCiF,GADiE,mBAC3C,KAAVvG,EAAeA,EAAQqB,GACnC3I,EAAQqC,aAAY,SAAA7B,GAAK,OAAIA,EAAMmI,GAAY3I,SAC/CmC,EAAWG,cACXwL,EAAWC,iBAAO,MACxB,EAA8BjF,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMgF,EAAYrB,GAAWmB,GAAU,GAAM,GAa7C,OAVAvL,qBAAU,WACFyL,IACAhF,GAAW,GACX7G,EAASyG,KAAiBK,QACtBD,GAAW,OAIpB,CAACgF,EAAW7L,EAAUyG,IAGrB,qCACI,cAAC,GAAD,CAAWtB,MAAOuG,IAClB,sBAAKlM,UAAW,oBAAhB,UACI,sBAAKA,UAAU,+CAAf,UACK3B,EAAMmJ,KAAO,GAAK,YAAInJ,EAAMoJ,UAAUE,KAAI,SAACjB,GAAD,OACvC,qBAAK1G,UAAW,iBAAhB,SACA,cAAC,GAAD,CAAyB0G,KAAMA,EAAMD,SAAUO,GAA/BN,EAAKG,SAGzB,qBAAKoE,IAAKkB,EAAUnM,UAAU,+BAEjCoH,GAAW,cAACjG,GAAD,WC7BbmL,GAXC,WACZ,OACI,mCACI,sBAAKtM,UAAW,sCAAhB,UACI,sBAAMA,UAAW,iDAAjB,iBACA,sBAAMA,UAAW,0BAAjB,2C,oBCSDuM,GAbD,SAAC,GAAgB,IAAfzM,EAAc,EAAdA,SACZ,OACI,sBAAKE,UAAWC,KAAQuM,KAAxB,UACG,qBAAKxM,UAAWC,KAAQwM,OACvB,yBAASzM,UAAWC,KAAQyM,SAA5B,SACI,qBAAK1M,UAAWC,KAAQ0M,MAAxB,SACK7M,UCDd,SAAS8M,GAAT,GAA6D,IAA3CjH,EAA0C,EAA1CA,MAAOtH,EAAmC,EAAnCA,MAAO2I,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,cACzC4F,EAAcnM,aAAY,SAAA7B,GAAK,OAAIA,EAAMmI,GAAY3I,SACrDmC,EAAWG,cACXmM,EAAWzO,EAAQA,EAAMsJ,KAAI,SAAAjB,GAC/B,OtB+QD,SAAwBqG,GAC3B,IAAMjF,EAAMiF,EAAKrF,MAAM,GAAI,GAC3B,OAAOI,EAAIO,UAAUP,EAAIQ,YAAY,KAAO,GsBjRjC0E,CAAetG,WACrB3B,EAELnE,qBAAU,WACN,GAAIkM,EAAU,CACV,IAAMG,EAAYH,EAAStD,QAAO,SAAA3C,GAAE,OAAKgG,EAAYpD,IAAI5C,MACzDrG,EAASyG,EAAcgG,OAE5B,CAACzM,EAAUsM,EAAUD,EAAa5F,IAErC,IAAMiG,EAAaJ,EAAWA,EAAStD,QAAO,SAAA3C,GAAE,OAAIgG,EAAYpD,IAAI5C,MAAKc,KAAI,SAAAd,GAAE,OAAIgG,EAAY5E,IAAIpB,WAAO9B,EAC1G,OAAKmI,EAGD,gCACI,mBAAGlN,UAAW,yCAAd,SAAyD2F,IACzD,qBAAK3F,UAAW,uBAAhB,SACKkN,EAAWvF,KAAI,SAAAjB,GACZ,OACI,cAAC,IAAD,CAAoBI,GAAE,WAAME,EAAN,YAAoBN,EAAKG,IAA/C,SACI,qBAAK7G,UAAW,sDAAhB,SACK0G,EAAKE,KAAOF,EAAKE,KAAOF,EAAKf,SAF3Be,EAAKG,YARZ,KCH5B,IAyCesG,GAzCE,WACb,IAAMtG,EAAKuG,SAASC,cAAYxG,IAC1ByG,EAAO5M,aAAY,SAAA7B,GAAK,OAAIA,EAAMD,MAAMP,MAAM4J,IAAIpB,MAClDrG,EAAWG,cAOjB,OAJAC,qBAAU,WACNJ,EAASqJ,GAAS,CAAChD,OACpB,CAACA,EAAIrG,IAEH8M,EAGD,gCACI,cAAC,GAAD,CAAW3H,MAAO2H,EAAK3H,QACvB,qBAAK3F,UAAW,8BAAhB,SACI,sBAAKA,UAAW,8BAAhB,UACI,cAACyF,GAAD,CACIC,IAAG,8DAAyD4H,EAAKzG,GAA9D,QACHlB,MAAO2H,EAAK3H,QAEf2H,EAAK7J,eAAiB,cAAC,GAAD,UACnB,8BAAM6J,EAAK7J,uBAKvB,qBAAKzD,UAAW,6BAAhB,SACKyE,GAAqB6I,OAAMvI,GAAW,EAAM,CAAC,oBAElD,sBAAK/E,UAAW,oBAAhB,UACI,cAAC4M,GAAD,CAASjH,MAAO,aAAcqB,WAAY,aAAc3I,MAAOiP,EAAKrO,WAAYgI,cAAe+C,KAC/F,cAAC4C,GAAD,CAASjH,MAAO,YAAaqB,WAAY,YAAa3I,MAAOiP,EAAKlO,UAAW6H,cAAeqD,KAC5F,cAACsC,GAAD,CAASjH,MAAO,WAAYqB,WAAY,WAAY3I,MAAOiP,EAAKhO,SAAU2H,cAAewD,KACzF,cAACmC,GAAD,CAASjH,MAAO,UAAWqB,WAAY,UAAW3I,MAAOiP,EAAKpO,QAAS+H,cAAekD,KACtF,cAACyC,GAAD,CAASjH,MAAO,UAAWqB,WAAY,UAAW3I,MAAOiP,EAAKnO,QAAS8H,cAAe2D,WAzBhF,cAACzJ,GAAD,K,oBC5BP,OAA0B,2CCIzC,SAASoM,KACL,OACI,wBAAQvN,UAAWC,KAAQuN,OAA3B,SACI,sBAAKxN,UAAW,yBAAhB,UACI,qBAAKA,UAAW,mBAAhB,SACI,eAAC,IAAD,CAAM8G,GAAI,IAAK9G,UAAW,GAA1B,UACI,qBAAK0F,IAAK+H,GAAMzN,UAAWC,KAAQwN,KAAMC,IAAK,oBAC9C,qBAAK1N,UAAWC,KAAQ0N,UAAxB,yBAGR,qBAAK3N,UAAW,eAChB,gCACI,cAAC,IAAD,CAAS8G,GAAI,IAAb,kBACA,cAAC,IAAD,CAASA,GAAI,SAAb,mBACA,cAAC,IAAD,CAASA,GAAI,cAAb,wBACA,cAAC,IAAD,CAASA,GAAI,aAAb,wBACA,cAAC,IAAD,CAASA,GAAI,YAAb,uBACA,cAAC,IAAD,CAASA,GAAI,WAAb,qBACA,cAAC,IAAD,CAASA,GAAI,WAAb,8BAOL8G,WAAMC,KAAKN,ICfpBO,GAAa,CACflP,MAAOiL,GACP5K,WAAY+K,GACZ9K,QAASiL,GACThL,QAASyL,GACTxL,UAAWkL,GACXhL,SAAUmL,IAGP,SAASsD,GAAT,GAAwC,IAAlBlH,EAAiB,EAAjBA,GAAIG,EAAa,EAAbA,WACvBgH,EAAatN,aAAY,SAAA7B,GAAK,OAAIA,EAAMmI,GAAY3I,MAAM4J,IAAIpB,MAC9DrG,EAAWG,cAMjB,GAJAC,qBAAU,WACNJ,EAASsN,GAAW9G,GAAY,CAACH,OAClC,CAACA,EAAIrG,EAAUwG,KAEbgH,EAAY,OAAO,cAAC7M,GAAD,IACxBkE,QAAQC,IAAI0I,GAEZ,IAAMC,EAAUD,EAAWrI,MAAQqI,EAAWrI,MAAQqI,EAAWpH,KACjE,OACI,gCACI,cAAC,GAAD,CAAWjB,MAAOsI,IAClB,qBAAKjO,UAAW,8BAAhB,SACI,qBAAKA,UAAW,8BAAhB,SACI,cAACyF,GAAD,CACIzF,UAAW,mBACX0F,IAAG,wDAAmDsB,EAAnD,YAAiEgH,EAAWnH,GAA5E,QACHlB,MAAOsI,QAKnB,qBAAKjO,UAAW,6BAAhB,SACKyE,GAAqBuJ,OAAYjJ,GAAW,EAAM,CAAC,oBAExD,sBAAK/E,UAAW,oBAAhB,UACI,cAAC4M,GAAD,CAASjH,MAAO,QAASqB,WAAY,QAAS3I,MAAO2P,EAAWpP,MAAOqI,cAAe4C,KACtF,cAAC+C,GAAD,CAASjH,MAAO,SAAUqB,WAAY,aAAc3I,MAAO2P,EAAWpK,OAC7DqD,cAAe+C,KACxB,cAAC4C,GAAD,CAASjH,MAAO,SAAUqB,WAAY,aAAc3I,MAAO2P,EAAWnK,OAC7DoD,cAAe+C,KACxB,cAAC4C,GAAD,CAASjH,MAAO,YAAaqB,WAAY,aAAc3I,MAAO2P,EAAW/J,UAChEgD,cAAe+C,KACxB,cAAC4C,GAAD,CAASjH,MAAO,YAAaqB,WAAY,YAAa3I,MAAO2P,EAAW5O,UAC/D6H,cAAeqD,KACxB,cAACsC,GAAD,CAASjH,MAAO,WAAYqB,WAAY,WAAY3I,MAAO2P,EAAW1O,SAC7D2H,cAAewD,KACxB,cAACmC,GAAD,CAASjH,MAAO,UAAWqB,WAAY,UAAW3I,MAAO2P,EAAW9O,QAC3D+H,cAAekD,KACxB,cAACyC,GAAD,CAASjH,MAAO,UAAWqB,WAAY,UAAW3I,MAAO2P,EAAW7O,QAC3D8H,cAAe2D,WC9DxC,IAKesD,GALO,WAClB,IAAMrH,EAAKuG,SAASC,cAAYxG,IAChC,OAAO,cAACkH,GAAD,CAAalH,GAAIA,EAAIG,WAAY,gBCI7BmH,GALI,WACf,IAAMtH,EAAKuG,SAASC,cAAYxG,IAChC,OAAO,cAACkH,GAAD,CAAalH,GAAIA,EAAIG,WAAY,aCG7BoH,GALM,WACjB,IAAMvH,EAAKuG,SAASC,cAAYxG,IAChC,OAAO,cAACkH,GAAD,CAAalH,GAAIA,EAAIG,WAAY,eCG7BqH,GALK,WAChB,IAAMxH,EAAKuG,SAASC,cAAYxG,IAChC,OAAO,cAACkH,GAAD,CAAalH,GAAIA,EAAIG,WAAY,aCC7BsH,GARA,WACX,OACI,wBAAQtO,UAAW,0DAAnB,SACI,+DCOGuO,GALK,WAChB,IAAM1H,EAAKuG,SAASC,cAAYxG,IAChC,OAAO,cAACkH,GAAD,CAAalH,GAAIA,EAAIG,WAAY,cC2C7BwH,GA7BH,WACR,OACI,qCACI,cAAC,EAAD,IACA,eAAC,IAAD,CAAQC,SAAUC,2CAAlB,UACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO3B,KAAM,IAAK4B,QAAS,cAAC5D,GAAD,IAAS6D,OAAK,IACzC,cAAC,IAAD,CAAO7B,KAAM,SAAU4B,QAAS,cAAC,GAAD,CAAc3H,WAAY,QAASC,cAAe0C,OAClF,cAAC,IAAD,CAAOoD,KAAM,aAAc4B,QAAS,cAAC,GAAD,MACpC,cAAC,IAAD,CAAO5B,KAAM,cAAe4B,QAAS,cAAC,GAAD,CAAc3H,WAAY,aAAcC,cAAe8C,OAC5F,cAAC,IAAD,CAAOgD,KAAM,kBAAmB4B,QAAS,cAAC,GAAD,MACzC,cAAC,IAAD,CAAO5B,KAAM,WAAY4B,QAAS,cAAC,GAAD,CAAc3H,WAAY,UAAWC,cAAeiD,OACtF,cAAC,IAAD,CAAO6C,KAAM,eAAgB4B,QAAS,cAAC,GAAD,MACtC,cAAC,IAAD,CAAO5B,KAAM,aAAc4B,QAAS,cAAC,GAAD,CAAc3H,WAAY,YAAaC,cAAeoD,OAC1F,cAAC,IAAD,CAAO0C,KAAM,iBAAkB4B,QAAS,cAAC,GAAD,MACxC,cAAC,IAAD,CAAO5B,KAAM,YAAa4B,QAAS,cAAC,GAAD,CAAc3H,WAAY,WAAYC,cAAeuD,OACxF,cAAC,IAAD,CAAOuC,KAAM,gBAAiB4B,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAO5B,KAAM,WAAY4B,QAAS,cAAC,GAAD,CAAc3H,WAAY,UAAWC,cAAe0D,OACtF,cAAC,IAAD,CAAOoC,KAAM,eAAgB4B,QAAS,cAAC,GAAD,MACtC,cAAC,IAAD,CAAO5B,KAAM,IAAK4B,QAAS,cAAC,GAAD,MAd/B,aAiBJ,cAAC,GAAD,IACA,cAAClO,EAAD,QCtCZoO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGRC,SAASC,eAAe,SAM5BvS,M","file":"static/js/main.d8287e15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sky\":\"starsParallax_sky__3quaq\",\"stars\":\"starsParallax_stars__2-gdl\",\"animStar\":\"starsParallax_animStar__l6nJ-\",\"stars2\":\"starsParallax_stars2__2X1lL\",\"stars3\":\"starsParallax_stars3__JVEtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"crawl_body__39vlD\",\"fade\":\"crawl_fade__3NjnM\",\"starWars\":\"crawl_starWars__3_hR6\",\"crawl\":\"crawl_crawl__2FyMY\",\"title\":\"crawl_title__3ASW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-star-wars\":\"header_font-star-wars__2uq16\",\"font-sans\":\"header_font-sans__2B_rw\",\"text-shadow\":\"header_text-shadow___czMq\",\"header\":\"header_header__3STq7\",\"earthSpin\":\"header_earthSpin__2LPis\",\"logo\":\"header_logo__2JJrf\",\"logoTitle\":\"header_logoTitle__2SNkV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2MnQR\",\"AnimationName\":\"loader_AnimationName__1AQ4v\",\"content\":\"loader_content__m6zY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"neonButon_container__19pph\",\"button\":\"neonButon_button__VvAEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flipCard\":\"flipCard_flipCard__3vLUo\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GET_CHARACTER_PAGE = 'GET_CHARACTER_PAGE'\r\nexport const GET_CHARACTERS = 'GET_CHARACTERS'\r\n\r\n\r\nexport const GET_STARSHIP_PAGE = 'GET_STARSHIP_PAGE'\r\nexport const GET_STARSHIPS = 'GET_STARSHIPS'\r\n\r\n\r\nexport const GET_VEHICLE_PAGE = 'GET_VEHICLE_PAGE'\r\nexport const GET_VEHICLES = 'GET_VEHICLES'\r\n\r\n\r\nexport const GET_SPECIES_PAGE = 'GET_SPECIES_PAGE'\r\nexport const GET_SPECIES = 'GET_SPECIES'\r\n\r\n\r\nexport const GET_PLANET_PAGE = 'GET_PLANET_PAGE'\r\nexport const GET_PLANETS = 'GET_PLANETS'\r\n\r\n\r\nexport const GET_FILM_PAGE = 'GET_FILM_PAGE'\r\nexport const GET_FILMS = 'GET_FILMS'\r\n\r\nexport const GLOBAL_SUCCESS = 'GLOBAL_SUCCESS'\r\nexport const GLOBAL_ERROR = 'GLOBAL_ERROR'\r\nexport const CLEAR_TOAST = 'CLEAR_TOAST'\r\n","import {GET_CHARACTER_PAGE, GET_CHARACTERS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function charactersReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_CHARACTER_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_CHARACTERS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {CLEAR_TOAST, GLOBAL_ERROR, GLOBAL_SUCCESS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    error: false,\r\n    success: false,\r\n    msg: '',\r\n}\r\n\r\nexport default function toastsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GLOBAL_ERROR:\r\n            return {...state, error: true, msg: action.payload}\r\n        case GLOBAL_SUCCESS:\r\n            return {...state, success: true, msg: action.payload}\r\n        case CLEAR_TOAST:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {GET_STARSHIP_PAGE, GET_STARSHIPS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function starshipsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_STARSHIP_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_STARSHIPS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_FILM_PAGE, GET_FILMS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function filmsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_FILM_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_FILMS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_VEHICLE_PAGE, GET_VEHICLES} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function vehiclesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_VEHICLE_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_VEHICLES:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_SPECIES, GET_SPECIES_PAGE} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function speciesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_SPECIES_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_SPECIES:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_PLANET_PAGE, GET_PLANETS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function planetsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_PLANET_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_PLANETS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport charactersReducer from \"./characters-reducer\";\r\nimport toastsReducer from \"./toasts-reducer\";\r\nimport starshipsReducer from \"./starships-reducer\";\r\nimport filmsReducer from \"./films-reducer\";\r\nimport vehiclesReducer from \"./vehicles-reducer\";\r\nimport speciesReducer from \"./species-reducer\";\r\nimport planetsReducer from \"./planets-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    films: filmsReducer,\r\n    characters: charactersReducer,\r\n    planets: planetsReducer,\r\n    species: speciesReducer,\r\n    starships: starshipsReducer,\r\n    toasts: toastsReducer,\r\n    vehicles: vehiclesReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n\r\n","import {Provider} from \"react-redux\";\r\nimport store from \"./index\";\r\n\r\nconst StoreProvider = ({children}) => (\r\n    <Provider store={store}>\r\n        {children}\r\n    </Provider>\r\n);\r\n\r\nexport default StoreProvider;\r\n","import classes from \"./starsParallax.module.scss\";\r\nconst StarParallax = () => {\r\n    return (\r\n        <div className={classes.sky}>\r\n            <div className={classes.stars}/>\r\n            <div className={classes.stars2}/>\r\n            <div className={classes.stars3}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StarParallax;\r\n","import {CLEAR_TOAST, GLOBAL_ERROR, GLOBAL_SUCCESS} from \"./types\";\r\n\r\nexport const globalError = (msg) => ({\r\n    type: GLOBAL_ERROR,\r\n    payload: msg\r\n});\r\n\r\nexport const globalSuccess = (msg) => ({\r\n    type: GLOBAL_SUCCESS,\r\n    payload: msg\r\n});\r\n\r\nexport const clearToast = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CLEAR_TOAST\r\n        })\r\n    }\r\n}\r\n","import {toast, ToastContainer} from \"react-toastify\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearToast} from \"../../store/actions/toast-actions\";\r\nimport {useEffect} from \"react\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport function Toasts() {\r\n    const toasts = useSelector(state => state.toasts)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        function showToast(type, msg) {\r\n            switch(type){\r\n                case 'SUCCESS':\r\n                    toast.success(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                case 'ERROR':\r\n                    toast.error(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                default:\r\n                    return false\r\n            }\r\n        }\r\n\r\n        if (toasts && toasts.error) {\r\n            const msg = toasts.msg ? toasts.msg : 'Error';\r\n            showToast('ERROR', msg);\r\n            dispatch(clearToast())\r\n        }\r\n        if (toasts && toasts.success) {\r\n            const msg = toasts.msg ? toasts.msg : 'OK!';\r\n            showToast('SUCCESS', msg);\r\n            dispatch(clearToast())\r\n        }\r\n    }, [toasts, dispatch])\r\n    return (\r\n        <ToastContainer/>\r\n    )\r\n}\r\n","import classes from \"./loader.module.scss\";\r\nexport function Loader() {\r\n    return (\r\n        <div className={classes.loader}>\r\n            <div className={classes.content}>\r\n            Loading...\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nLoader.propTypes = {};\r\n\r\n","import React from \"react\";\r\n\r\nconst starWarsAPIModel = {\r\n    average_height: {\r\n        type: String,\r\n        label: 'Average height',\r\n        suffix: 'cm',\r\n    },\r\n    average_lifespan: {\r\n        type: String,\r\n        label: 'Average lifespan',\r\n        suffix: 'y',\r\n    },\r\n    birth_year: {\r\n        type: String,\r\n        label: 'Birth year'\r\n    },\r\n    cargo_capacity: {\r\n        type: String,\r\n        label: \"Cargo capacity\",\r\n    },\r\n    classification: {\r\n        type: String,\r\n        label: \"Classification\",\r\n    },\r\n    characters: {\r\n        type: Array,\r\n        label: 'Characters'\r\n    },\r\n    consumables: {\r\n        type: String,\r\n        label: \"Consumables\",\r\n    },\r\n    cost_in_credits: {\r\n        type: String,\r\n        label: \"Cost in Credits\",\r\n    },\r\n    climate: {\r\n        type: String,\r\n        label: \"Climate\",\r\n    },\r\n    crew: {\r\n        type: String,\r\n        label: \"Crew\",\r\n    },\r\n    designation: {\r\n        type: String,\r\n        label: 'Designation'\r\n    },\r\n    diameter: {\r\n        type: String,\r\n        label: 'Diameter'\r\n    },\r\n    director: {\r\n        type: String,\r\n        label: 'Director'\r\n    },\r\n    episode_id: {\r\n        type: String,\r\n        label: 'Episode Id'\r\n    },\r\n    eye_color: {\r\n        type: String,\r\n        label: 'Eye color'\r\n    },\r\n    eye_colors: {\r\n        type: String,\r\n        label: 'Eye colors'\r\n    },\r\n    films: {\r\n        type: Array,\r\n        label: 'Films'\r\n    },\r\n    gender: {\r\n        type: String,\r\n        label: 'Gender'\r\n    },\r\n    gravity: {\r\n        type: String,\r\n        label: 'Gravity'\r\n    },\r\n    hair_color: {\r\n        type: String,\r\n        label: 'Hair color'\r\n    },\r\n    hair_colors: {\r\n        type: String,\r\n        label: 'Hair colors'\r\n    },\r\n    height: {\r\n        type: String,\r\n        label: 'Height',\r\n        suffix: \"cm\",\r\n    },\r\n    homeworld: {\r\n        type: String,\r\n        label: 'Home world',\r\n        link: true,\r\n    },\r\n    hyperdrive_rating: {\r\n        type: String,\r\n        label: 'Hyperdrive rating',\r\n    },\r\n    language: {\r\n        type: String,\r\n        label: 'Language',\r\n    },\r\n    length: {\r\n        type: String,\r\n        label: 'Length',\r\n    },\r\n    max_atmosphering_speed: {\r\n        type: String,\r\n        label: 'Max speed',\r\n    },\r\n    manufacturer: {\r\n        type: String,\r\n        label: 'Manufacturer',\r\n    },\r\n    mass: {\r\n        type: String,\r\n        label: 'Mass',\r\n        suffix: \"kg\",\r\n    },\r\n    MGLT: {\r\n        type: String,\r\n        label: 'MGLT',\r\n    },\r\n    model: {\r\n        type: String,\r\n        label: 'Model',\r\n    },\r\n    opening_crawl: {\r\n        type: String,\r\n        label: 'Opening Crawl'\r\n    },\r\n    orbital_period: {\r\n        type: String,\r\n        label: 'Orbital period'\r\n    },\r\n    passengers: {\r\n        type: String,\r\n        label: 'Passengers'\r\n    },\r\n    people: {\r\n        type: Array,\r\n        label: 'People'\r\n    },\r\n    pilots: {\r\n        type: Array,\r\n        label: 'Pilots'\r\n    },\r\n    planets: {\r\n        type: Array,\r\n        label: 'Planets'\r\n    },\r\n    population: {\r\n        type: String,\r\n        label: 'Population'\r\n    },\r\n    producer: {\r\n        type: String,\r\n        label: 'Producer'\r\n    },\r\n    release_date: {\r\n        type: String,\r\n        label: 'Release date'\r\n    },\r\n    residents: {\r\n        type: Array,\r\n        label: 'Residents'\r\n    },\r\n    rotation_period: {\r\n        type: String,\r\n        label: 'Rotation period',\r\n    },\r\n    skin_color: {\r\n        type: String,\r\n        label: 'Skin color',\r\n    },\r\n    skin_colors: {\r\n        type: String,\r\n        label: 'Skin colors',\r\n    },\r\n    species: {\r\n        type: Array,\r\n        label: 'Species'\r\n    },\r\n    surface_water: {\r\n        type: String,\r\n        label: 'Surface water',\r\n    },\r\n    starships: {\r\n        type: Array,\r\n        label: 'Starships'\r\n    },\r\n    starship_class: {\r\n        type: String,\r\n        label: 'Starship class',\r\n    },\r\n    terrain: {\r\n        type: String,\r\n        label: 'Terrain',\r\n    },\r\n    vehicle_class: {\r\n        type: String,\r\n        label: 'Vehicle class',\r\n    },\r\n    vehicles: {\r\n        type: Array,\r\n        label: 'Vehicles'\r\n    },\r\n\r\n}\r\n\r\n\r\n// <tr>\r\n//     <td>Characters</td>\r\n//     <td>{film.characters.length > 0 && film.characters.map(\r\n//         film => <p className={'max-w-lg'}>{film}</p>\r\n//     )}</td>\r\n// </tr>\r\n\r\n//returns table built on SWAPI data\r\nexport function formatSWAPIDataTable(data, maxRows = -1, skipArrays = false, skipFields = []) {\r\n\r\n    let rows = [];\r\n    for (const key in data) {\r\n        if (starWarsAPIModel[key] !== undefined) {\r\n            if (starWarsAPIModel[key].type === Array) {\r\n                if ((!skipArrays) && (data[key].length > 0)) {\r\n                    rows.push(\r\n                        <tr key={key}>\r\n                            <td>{starWarsAPIModel[key].label}</td>\r\n                            <td>Array</td>\r\n                        </tr>\r\n                    )\r\n                } else {\r\n                    if (!skipArrays) {\r\n                        rows.push(\r\n                            <tr key={key}>\r\n                                <td>{starWarsAPIModel[key].label}</td>\r\n                                <td>Array</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                }\r\n            } else {\r\n                const skipProp = ['n/a', 'unknown', 'N/A', null];\r\n                try {\r\n                    if (!(skipProp.includes(data[key]) || skipFields.includes(key))) {\r\n                        rows.push(\r\n                            <tr key={key}>\r\n                                <td className={'w-1/3'}>\r\n                                    <div className={'overflow-hidden h-6'}>{starWarsAPIModel[key].label}</div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className={'overflow-hidden h-6'}>\r\n                                        <p className={'overflow-ellipsis'}>{data[key].toString()}{starWarsAPIModel[key].suffix}</p>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                } catch (e) {\r\n                    console.log(key)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n            {rows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport function extractSWAPIId(path) {\r\n    const url = path.slice(0, -1);\r\n    return url.substring(url.lastIndexOf('/') + 1);\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\nimport classes from \"./flipCard.module.scss\";\r\n\r\nexport const FlipCard = ({children}) => {\r\n\r\n    return (\r\n        <div className={classes.flipCard}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nFlipCard.propTypes = {children: PropTypes.node};\r\n","export default __webpack_public_path__ + \"static/media/jedi.d534cef7.svg\";","import jediLogo from '../assets/images/jedi.svg'\r\n\r\nexport function CloudImage({src, title, className}) {\r\n\r\n    return (\r\n        // <img src={jediLogo} className={'w-1/2 h-1/2 mx-auto'}/>\r\n        <img\r\n            className={className}\r\n            src={src}\r\n            onError={(e) => {\r\n                e.target.onerror = null;\r\n                //e.target.css.width=100;\r\n\r\n                e.target.style.width = \"50%\";\r\n                e.target.style.opacity = \"0.8\";\r\n                e.target.style.transform = \"translate(50%,50%)\";\r\n                e.target.src = jediLogo;\r\n            }}\r\n        />\r\n//         <img\r\n//             alt={''}\r\n//             src={`https://robohash.org/${title}?size=310x310`}\r\n//         />\r\n    )\r\n}\r\n","import classes from './neonButon.module.scss'\r\nimport clsx from \"clsx\";\r\n\r\nconst NeonButton = ({children, className = ''}) => {\r\n    return (\r\n        <div className={clsx([classes.container, className,'transform scale-50'])}>\r\n            <div className={classes.button}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NeonButton;\r\n","import * as PropTypes from \"prop-types\";\r\nimport {formatSWAPIDataTable} from \"../utils/swapi\";\r\nimport {FlipCard} from \"./UI/flipCard/flipCard\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CloudImage} from \"./cloudImage\";\r\nimport NeonButton from \"./neonButton\";\r\n\r\n\r\n// <img\r\n//     src={src}\r\n//     onError={(e) => {\r\n//         e.target.onerror = null;\r\n//         e.target.src = `https://robohash.org/${title}?size=310x310`\r\n//     }}\r\n// />\r\n\r\nexport const BasicCard = ({category, item}) => {\r\n    const itemDataTable = formatSWAPIDataTable(item, undefined, true)\r\n    let title = item.name !== undefined ? item.name : item.title;\r\n    //console.log(`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`)\r\n    return (\r\n        <FlipCard>\r\n            <section>\r\n                <div className={'overflow-hidden flex-grow'}>\r\n                    <CloudImage\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}\r\n                        title={title}\r\n                    />\r\n                </div>\r\n                {/*<img src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}/>*/}\r\n                {/*<img alt={`${film.title}`} src={`https://robohash.org/${film.title}?size=240x240`}/>*/}\r\n                {/*https://res.cloudinary.com/di6qjuwyo/image/upload/v1636859976/starwars/heroes/1.jpg*/}\r\n                <div className={'text-2xl text-center py-4 bg-black'}>{title}</div>\r\n            </section>\r\n            <section>\r\n                <div className={'flex flex-col'}>\r\n                    <div className={'flex items-center p-2 gap-4'}>\r\n                        <CloudImage className={'w-24 h-24 rounded-full'} src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}>\r\n                        </CloudImage>\r\n                        <p className={'text-lg'}>{title}</p>\r\n                    </div>\r\n                    {itemDataTable}\r\n                    <Link to={`/${category}/${item.id}`}><NeonButton className={'font-bold'}>more</NeonButton></Link>\r\n                </div>\r\n            </section>\r\n        </FlipCard>\r\n    )\r\n}\r\n\r\nBasicCard.propTypes = {\r\n    category: PropTypes.string,\r\n    item: PropTypes.object,\r\n};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {BasicCard} from \"./basicCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NeonButton from \"./neonButton\";\r\n\r\nconst FeaturedBox = ({title, stateSlice, getDataAction}) => {\r\n    const itemsMap = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataAction()).finally(\r\n            setLoading(false)\r\n        )\r\n    }, [dispatch, getDataAction])\r\n    return (\r\n        <>\r\n            <section className={'bg-black bg-opacity-75 my-24 w-full'}>\r\n                <div className={'container mx-auto'}>\r\n                    <h2>{title}</h2>\r\n                    <div className='flex gap-8 justify-center'>\r\n                        {loading && <Loader/>}\r\n                        <MediaQuery maxWidth={814}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 1).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth={1279} minWidth={815}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 2).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth={1549} minWidth={1280}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 3).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery minWidth={1550}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 4).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                    </div>\r\n                    <Link to={`/${stateSlice}`} className={'text-center bg-red-500'}>\r\n                        <NeonButton>more</NeonButton>\r\n                    </Link>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n};\r\n\r\nFeaturedBox.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeaturedBox;\r\n","import axios from \"axios\";\r\n\r\n//return object with items or string with error message\r\nexport async function getSWAPIDataPage(url) {\r\n    try {\r\n        const items = new Map();\r\n        const response = await axios.get(url);\r\n        response.data.results.forEach(item => {\r\n            const url = item.url.slice(0, -1);\r\n            const key = url.substring(url.lastIndexOf('/') + 1);\r\n            item.id = +key;\r\n            items.set(+key, item);\r\n        });\r\n        return {\r\n            total: response.data.count,\r\n            next: response.data.next,\r\n            items: items,\r\n        };\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n\r\nconst stateSliceToSWAPIResource = {\r\n    films: 'films',\r\n    characters: 'people',\r\n    planets: 'planets',\r\n    species: 'species',\r\n    starships: 'starships',\r\n    vehicles: 'vehicles',\r\n}\r\n\r\nexport async function getSWAPIDataItem(stateSlice, id) {\r\n    try {\r\n        const resource = stateSliceToSWAPIResource[stateSlice];\r\n        const response = await axios.get(`https://swapi.dev/api/${resource}/${id}`);\r\n        response.data.id = +id;\r\n        return response.data;\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n","import {getSWAPIDataItem, getSWAPIDataPage} from \"../../api/swAPI\";\r\nimport {globalError} from \"./toast-actions\";\r\n\r\nexport async function getSWAPIResourceDataPage(options) {\r\n    try {\r\n        const defaultURL = `https://swapi.dev/api/${options.resourceType}/`;\r\n        const oldState = options.oldState;\r\n        if (oldState.total === 0 || oldState.items.size < oldState.total) {\r\n            const newState = await getSWAPIDataPage(oldState.next !== '' ? oldState.next : defaultURL)\r\n            const newItems = new Map([...oldState.items, ...newState.items])\r\n            const payload = {\r\n                total: newState.total,\r\n                next: newState.next,\r\n                items: newItems,\r\n            }\r\n            options.dispatch({type: options.actionType, payload})\r\n            return payload;\r\n        }\r\n    } catch (e) {\r\n        options.dispatch(globalError(e.message))\r\n    }\r\n}\r\n\r\nexport async function getSWAPIResourceSelectedItems(options) {\r\n    try {\r\n        const newItemList = options.selectedItems.filter(\r\n            (id => !options.oldState.items.has(id))\r\n        )\r\n        if (newItemList.length > 0) {\r\n            const newItems = new Map();\r\n            for (let newItemId of newItemList) {\r\n                newItems.set(newItemId, await getSWAPIDataItem(options.resourceType, newItemId));\r\n            }\r\n            const payload = new Map([...options.oldState.items, ...newItems])\r\n            options.dispatch({type: options.actionType, payload})\r\n            return payload;\r\n        }\r\n    } catch (e) {\r\n        options.dispatch(globalError(e.message))\r\n    }\r\n}\r\n","import {GET_FILM_PAGE, GET_FILMS} from \"./types\";\r\nimport {getSWAPIResourceDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getFilmPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            resourceType: 'films',\r\n            actionType: GET_FILM_PAGE\r\n        }\r\n        await getSWAPIResourceDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getFilms(filmIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            resourceType: 'films',\r\n            actionType: GET_FILMS,\r\n            selectedItems: filmIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_CHARACTER_PAGE, GET_CHARACTERS} from \"./types\";\r\nimport {getSWAPIResourceDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getCharacterPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().characters,\r\n            dispatch: dispatch,\r\n            resourceType: 'people',\r\n            actionType: GET_CHARACTER_PAGE\r\n        }\r\n        await getSWAPIResourceDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getCharacters(charactersIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().characters,\r\n            dispatch: dispatch,\r\n            resourceType: 'characters',\r\n            actionType: GET_CHARACTERS,\r\n            selectedItems: charactersIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {getSWAPIResourceDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\nimport {GET_PLANET_PAGE, GET_PLANETS} from \"./types\";\r\n\r\nexport function getPlanetPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().planets,\r\n            dispatch: dispatch,\r\n            resourceType: 'planets',\r\n            actionType: GET_PLANET_PAGE\r\n        }\r\n        await getSWAPIResourceDataPage(options)\r\n        // /console.log(state)\r\n    }\r\n}\r\n\r\nexport function getPlanets(planetIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().planets,\r\n            dispatch: dispatch,\r\n            resourceType: 'planets',\r\n            actionType: GET_PLANETS,\r\n            selectedItems: planetIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_STARSHIP_PAGE, GET_STARSHIPS} from \"./types\";\r\nimport {getSWAPIResourceDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getStarshipPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().starships,\r\n            dispatch: dispatch,\r\n            resourceType: 'starships',\r\n            actionType: GET_STARSHIP_PAGE\r\n        }\r\n        await getSWAPIResourceDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getStarships(starshipIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().starships,\r\n            dispatch: dispatch,\r\n            resourceType: 'starships',\r\n            actionType: GET_STARSHIPS,\r\n            selectedItems: starshipIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_VEHICLE_PAGE, GET_VEHICLES} from \"./types\";\r\nimport {getSWAPIResourceDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getVehiclePage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().vehicles,\r\n            dispatch: dispatch,\r\n            resourceType: 'vehicles',\r\n            actionType: GET_VEHICLE_PAGE\r\n        }\r\n        await getSWAPIResourceDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getVehicles(vehicleIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().vehicles,\r\n            dispatch: dispatch,\r\n            resourceType: 'vehicles',\r\n            actionType: GET_VEHICLES,\r\n            selectedItems: vehicleIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_SPECIES, GET_SPECIES_PAGE} from \"./types\";\r\nimport {getSWAPIResourceDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getSpeciesPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().species,\r\n            dispatch: dispatch,\r\n            resourceType: 'species',\r\n            actionType: GET_SPECIES_PAGE\r\n        }\r\n        await getSWAPIResourceDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getSpecies(speciesIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().species,\r\n            dispatch: dispatch,\r\n            resourceType: 'species',\r\n            actionType: GET_SPECIES,\r\n            selectedItems: speciesIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\n\r\nexport const Layout = ({children}) => (\r\n    <main className={'flex flex-col items-center'}>\r\n        {children}\r\n    </main>\r\n)\r\n\r\nLayout.propTypes = {children: PropTypes.node};\r\n","import FeaturedBox from \"../featuredBox\";\r\nimport {getFilmPage} from \"../../store/actions/films-actions\";\r\nimport {getCharacterPage} from \"../../store/actions/characters-actions\";\r\nimport {getPlanetPage} from \"../../store/actions/planets-actions\";\r\nimport {getStarshipPage} from \"../../store/actions/starships-actions\";\r\nimport {getVehiclePage} from \"../../store/actions/vehicles-actions\";\r\nimport {getSpeciesPage} from \"../../store/actions/species-actions\";\r\nimport {Layout} from \"../layout\";\r\n\r\n\r\n\r\n\r\nexport function Home() {\r\n    return (\r\n        <>\r\n\r\n        <Layout>\r\n            <FeaturedBox title={'films'} stateSlice={'films'} getDataAction={getFilmPage}/>\r\n            <FeaturedBox title={'characters'} stateSlice={'characters'} getDataAction={getCharacterPage}/>\r\n            <FeaturedBox title={'planets'} stateSlice={'planets'} getDataAction={getPlanetPage}/>\r\n            <FeaturedBox title={'starships'} stateSlice={'starships'} getDataAction={getStarshipPage}/>\r\n            <FeaturedBox title={'vehicles'} stateSlice={'vehicles'} getDataAction={getVehiclePage}/>\r\n            <FeaturedBox title={'species'} stateSlice={'species'} getDataAction={getSpeciesPage}/>\r\n        </Layout></>)\r\n\r\n}\r\n","import {useEffect, useState} from \"react\";\r\n\r\n//updateOnlyIfIntersecting - better performance - update parent component only after ref appears on screen\r\n\r\nconst useVisible = (ref, defIntersecting = false, updateOnlyIfIntersecting = false, rootMargin = \"0px\") => {\r\n    // State and setter for storing whether element is visible\r\n    const [isIntersecting, setIntersecting] = useState(defIntersecting);\r\n    useEffect(() => {\r\n        const refCopy = ref;\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                // Update our state when observer callback fires\r\n                if (updateOnlyIfIntersecting) {\r\n                    if (entry.isIntersecting)\r\n                        setIntersecting((value) => Number(value) + 1);\r\n                } else {\r\n                    setIntersecting(entry.isIntersecting);\r\n                }\r\n            },\r\n            {\r\n                rootMargin,\r\n            }\r\n        );\r\n\r\n        if (refCopy.current) {\r\n            observer.observe(refCopy.current);\r\n        }\r\n        return () => {\r\n            console.log('--- Unmount', refCopy.current)\r\n            if (refCopy.current)\r\n                observer.unobserve(refCopy.current);\r\n        };\r\n    }, [ref, updateOnlyIfIntersecting, rootMargin]); // Empty array ensures that effect is only run on mount and unmount\r\n    return isIntersecting;\r\n};\r\n\r\nexport default useVisible;\r\n","import * as PropTypes from \"prop-types\";\r\n\r\n\r\nexport const PageTitle = ({title}) => (\r\n    <h1 className={'absolute right-4 top-36 opacity-75 max-w-3/4 text-right leading-none lowercase'}>{title}</h1>\r\n);\r\n\r\nPageTitle.propTypes = {title: PropTypes.string};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport useVisible from \"../hooks/useVisible\";\r\nimport PropTypes from \"prop-types\";\r\nimport {BasicCard} from \"./basicCard\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {PageTitle} from \"./pageTitle\";\r\n\r\n\r\nconst CategoryPage = ({title = '', stateSlice, getDataAction, ...rest}) => {\r\n    const pageTitle = title !== '' ? title : stateSlice;\r\n    const items = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const loadMore = useRef(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const isVisible = useVisible(loadMore, true, true)\r\n\r\n\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            setLoading(true)\r\n            dispatch(getDataAction()).finally(\r\n                setLoading(false)\r\n            );\r\n        }\r\n\r\n    }, [isVisible, dispatch, getDataAction])\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title={pageTitle}/>\r\n            <div className={'container mx-auto'}>\r\n                <div className='flex flex-wrap justify-center gap-8 relative'>\r\n                    {items.size > 0 && [...items.values()].map((item) => (\r\n                        <div className={'animate-appear'}>\r\n                        <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                        </div>\r\n                    ))}\r\n                    <div ref={loadMore} className='bg-red-500 p-0 w-0 h-5 '/>\r\n                </div>\r\n                {loading && <Loader/>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nCategoryPage.propTypes = {\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default CategoryPage;\r\n","const Page404 = () => {\r\n    return (\r\n        <>\r\n            <div className={'container mx-auto text-center pt-64'}>\r\n                <span className={'text-9xl font-sans font-extrabold text-red-600'}>404</span>\r\n                <span className={'font-star-wars text-4xl'}>This planet not exists!</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Page404;\r\n","import classes from \"./crawl.module.css\";\r\nconst Crawl = ({children}) => {\r\n    return (\r\n        <div className={classes.body}>\r\n           <div className={classes.fade}></div>\r\n            <section className={classes.starWars}>\r\n                <div className={classes.crawl}>\r\n                    {children}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Crawl;\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {extractSWAPIId} from \"../utils/swapi\";\r\nimport {useEffect} from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function DataBox({title, items, stateSlice, getDataAction}) {\r\n    const loadedItems = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const itemsIds = items ? items.map(item => {\r\n        return extractSWAPIId(item);\r\n    }) : undefined;\r\n\r\n    useEffect(() => {\r\n        if (itemsIds) {\r\n            const neededIds = itemsIds.filter(id => !loadedItems.has(id))\r\n            dispatch(getDataAction(neededIds));\r\n        }\r\n    }, [dispatch, itemsIds, loadedItems, getDataAction])\r\n\r\n    const foundItems = itemsIds ? itemsIds.filter(id => loadedItems.has(id)).map(id => loadedItems.get(id)) : undefined;\r\n    if (!foundItems) return null;\r\n\r\n    return (\r\n        <div>\r\n            <p className={'font-star-wars text-3xl my-2 lowercase'}>{title}</p>\r\n            <div className={'flex flex-wrap gap-4'}>\r\n                {foundItems.map(item => {\r\n                    return (\r\n                        <Link key={item.id} to={`/${stateSlice}/${item.id}`}>\r\n                            <div className={'border-2 p-2 rounded-lg bg-gray-900 border-gray-400'}>\r\n                                {item.name ? item.name : item.title}\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDataBox.propTypes = {\r\n    stateSlice: PropTypes.string,\r\n    title: PropTypes.string,\r\n    data: PropTypes.array,\r\n    getDataAction: PropTypes.func,\r\n};\r\n","import {PageTitle} from \"../pageTitle\";\r\nimport {useParams} from \"react-router\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getFilms} from \"../../store/actions/films-actions\";\r\nimport {CloudImage} from \"../cloudImage\";\r\nimport Crawl from \"../crawl\";\r\nimport {formatSWAPIDataTable} from \"../../utils/swapi\";\r\nimport {Loader} from \"../UI/loader/loader\";\r\nimport {getCharacters} from \"../../store/actions/characters-actions\";\r\nimport {DataBox} from \"../dataBox\";\r\nimport {getStarships} from \"../../store/actions/starships-actions\";\r\nimport {getVehicles} from \"../../store/actions/vehicles-actions\";\r\nimport {getPlanets} from \"../../store/actions/planets-actions\";\r\nimport {getSpecies} from \"../../store/actions/species-actions\";\r\n\r\n\r\n\r\nconst FilmPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    const film = useSelector(state => state.films.items.get(id));\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getFilms([id]))\r\n    }, [id, dispatch]);\r\n\r\n    if (!film) return <Loader/>\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle title={film.title}/>\r\n            <div className={'bg-black bg-opacity-75 py-8'}>\r\n                <div className={'flex h-96 container mx-auto'}>\r\n                    <CloudImage\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/films/${film.id}.jpg`}\r\n                        title={film.title}\r\n                    />\r\n                    {film.opening_crawl && <Crawl>\r\n                        <div>{film.opening_crawl}</div>\r\n                    </Crawl>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={'container mx-auto bg-black'}>\r\n                {formatSWAPIDataTable(film, undefined, true, ['opening_crawl'])}\r\n            </div>\r\n            <div className={'container mx-auto'}>\r\n                <DataBox title={'characters'} stateSlice={'characters'} items={film.characters} getDataAction={getCharacters}/>\r\n                <DataBox title={'starships'} stateSlice={'starships'} items={film.starships} getDataAction={getStarships}/>\r\n                <DataBox title={'vehicles'} stateSlice={'vehicles'} items={film.vehicles} getDataAction={getVehicles}/>\r\n                <DataBox title={'planets'} stateSlice={'planets'} items={film.planets} getDataAction={getPlanets}/>\r\n                <DataBox title={'species'} stateSlice={'species'} items={film.species} getDataAction={getSpecies}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilmPage;\r\n","export default __webpack_public_path__ + \"static/media/star_wars_logo.e3b54fcc.svg\";","import {Link, NavLink} from \"react-router-dom\";\r\nimport classes from \"./header.module.scss\";\r\nimport React from \"react\";\r\nimport logo from '../../assets/images/star_wars_logo.svg'\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={'flex container mx-auto'}>\r\n                <div className={'w-48 text-center'}>\r\n                    <Link to={'/'} className={''}>\r\n                        <img src={logo} className={classes.logo} alt={'StarWars Fandom'}/>\r\n                        <div className={classes.logoTitle}>Fandom</div>\r\n                    </Link>\r\n                </div>\r\n                <div className={' flex-grow'}/>\r\n                <nav>\r\n                    <NavLink to={'/'}>Home</NavLink>\r\n                    <NavLink to={'/films'}>Films</NavLink>\r\n                    <NavLink to={'/characters'}>Characters</NavLink>\r\n                    <NavLink to={'/starships'}>Starships </NavLink>\r\n                    <NavLink to={'/vehicles'}>Vehicles </NavLink>\r\n                    <NavLink to={'/planets'}>Planets</NavLink>\r\n                    <NavLink to={'/species'}>Species </NavLink>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getCharacters} from \"../store/actions/characters-actions\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {PageTitle} from \"./pageTitle\";\r\nimport {CloudImage} from \"./cloudImage\";\r\nimport {formatSWAPIDataTable} from \"../utils/swapi\";\r\nimport {DataBox} from \"./dataBox\";\r\nimport {getFilms} from \"../store/actions/films-actions\";\r\nimport {getStarships} from \"../store/actions/starships-actions\";\r\nimport {getVehicles} from \"../store/actions/vehicles-actions\";\r\nimport {getPlanets} from \"../store/actions/planets-actions\";\r\nimport {getSpecies} from \"../store/actions/species-actions\";\r\n\r\nconst dataLoader = {\r\n    films: getFilms,\r\n    characters: getCharacters,\r\n    planets: getPlanets,\r\n    species: getSpecies,\r\n    starships: getStarships,\r\n    vehicles: getVehicles,\r\n}\r\n\r\nexport function LandingPage({id, stateSlice}) {\r\n    const pageTarget = useSelector(state => state[stateSlice].items.get(id));\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(dataLoader[stateSlice]([id]))\r\n    }, [id, dispatch, stateSlice]);\r\n\r\n    if (!pageTarget) return <Loader/>\r\n    console.log(pageTarget)\r\n\r\n    const caption = pageTarget.title ? pageTarget.title : pageTarget.name;\r\n    return (\r\n        <div>\r\n            <PageTitle title={caption}/>\r\n            <div className={'bg-black bg-opacity-75 py-8'}>\r\n                <div className={'flex h-96 container mx-auto'}>\r\n                    <CloudImage\r\n                        className={'w-1/4 bg-red-500'}\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/${stateSlice}/${pageTarget.id}.jpg`}\r\n                        title={caption}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <div className={'container mx-auto bg-black'}>\r\n                {formatSWAPIDataTable(pageTarget, undefined, true, ['opening_crawl'])}\r\n            </div>\r\n            <div className={'container mx-auto'}>\r\n                <DataBox title={'films'} stateSlice={'films'} items={pageTarget.films} getDataAction={getFilms}/>\r\n                <DataBox title={'people'} stateSlice={'characters'} items={pageTarget.people}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'pilots'} stateSlice={'characters'} items={pageTarget.pilots}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'residents'} stateSlice={'characters'} items={pageTarget.residents}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'starships'} stateSlice={'starships'} items={pageTarget.starships}\r\n                         getDataAction={getStarships}/>\r\n                <DataBox title={'vehicles'} stateSlice={'vehicles'} items={pageTarget.vehicles}\r\n                         getDataAction={getVehicles}/>\r\n                <DataBox title={'planets'} stateSlice={'planets'} items={pageTarget.planets}\r\n                         getDataAction={getPlanets}/>\r\n                <DataBox title={'species'} stateSlice={'species'} items={pageTarget.species}\r\n                         getDataAction={getSpecies}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\nconst CharacterPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'characters'}/>;\r\n};\r\n\r\nexport default CharacterPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst PlanetPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'planets'}/>;\r\n};\r\n\r\nexport default PlanetPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst StarshipPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'starships'}/>;\r\n};\r\n\r\nexport default StarshipPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst SpeciesPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'species'}/>;\r\n};\r\n\r\nexport default SpeciesPage;\r\n","const Footer = () => {\r\n    return (\r\n        <footer className={'p-4 mt-24 bg-black text-center text-gray-400 opacity-75'}>\r\n            <p>(C) 2021 by Michael Zdolski</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst VehiclePage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'vehicles'}/>;\r\n};\r\n\r\nexport default VehiclePage;\r\n","import StarParallax from \"./components/UI/starParallax/starParallax\";\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\nimport {Toasts} from \"./components/UI/toasts\";\r\nimport {Home} from \"./components/Home/home\";\r\nimport CategoryPage from \"./components/categoryPage\";\r\nimport {getVehiclePage} from \"./store/actions/vehicles-actions\";\r\nimport {getFilmPage} from \"./store/actions/films-actions\";\r\nimport {getCharacterPage} from \"./store/actions/characters-actions\";\r\nimport {getPlanetPage} from \"./store/actions/planets-actions\";\r\nimport {getStarshipPage} from \"./store/actions/starships-actions\";\r\nimport {getSpeciesPage} from \"./store/actions/species-actions\";\r\nimport Page404 from \"./components/page404\";\r\nimport FilmPage from \"./components/Films/filmPage\";\r\nimport Header from \"./components/header/header\";\r\nimport CharacterPage from \"./components/Characters/characterPage\";\r\nimport PlanetPage from \"./components/Planets/planetPage\";\r\nimport StarshipPage from \"./components/Starships/starshipPage\";\r\nimport SpeciesPage from \"./components/Species/speciesPage\";\r\nimport Footer from \"./components/footer\";\r\nimport VehiclePage from \"./components/Vehicles/vehiclePage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <StarParallax/>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Header/>\r\n                <Routes>\r\n                    <Route path={'/'} element={<Home/>} exact/>\r\n                    <Route path={'/films'} element={<CategoryPage stateSlice={'films'} getDataAction={getFilmPage}/>} />\r\n                    <Route path={'/films/:id'} element={<FilmPage/>} />\r\n                    <Route path={'/characters'} element={<CategoryPage stateSlice={'characters'} getDataAction={getCharacterPage}/>} />\r\n                    <Route path={'/characters/:id'} element={<CharacterPage/>} />\r\n                    <Route path={'/planets'} element={<CategoryPage stateSlice={'planets'} getDataAction={getPlanetPage}/>} />\r\n                    <Route path={'/planets/:id'} element={<PlanetPage/>} />\r\n                    <Route path={'/starships'} element={<CategoryPage stateSlice={'starships'} getDataAction={getStarshipPage}/>} />\r\n                    <Route path={'/starships/:id'} element={<StarshipPage/>} />\r\n                    <Route path={'/vehicles'} element={<CategoryPage stateSlice={'vehicles'} getDataAction={getVehiclePage}/>} />\r\n                    <Route path={'/vehicles/:id'} element={<VehiclePage/>} />\r\n                    <Route path={'/species'} element={<CategoryPage stateSlice={'species'} getDataAction={getSpeciesPage}/>} />\r\n                    <Route path={'/species/:id'} element={<SpeciesPage/>} />\r\n                    <Route path={'*'} element={<Page404/>}/>} />\r\n                </Routes>\r\n            </Router>\r\n            <Footer/>\r\n            <Toasts/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport StoreProvider from \"./store/StoreProvider\";\nimport App from \"./app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider>\n            <App/>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}