{"version":3,"sources":["components/UI/starParallax/starsParallax.module.scss","components/crawl.module.css","components/header/header.module.scss","components/UI/loader/loader.module.scss","components/neonButon.module.scss","components/UI/flipCard/flipCard.module.scss","reportWebVitals.js","store/actions/types.js","store/reducers/characters-reducer.js","store/reducers/toasts-reducer.js","store/reducers/starships-reducer.js","store/reducers/films-reducer.js","store/reducers/vehicles-reducer.js","store/reducers/species-reducer.js","store/reducers/planets-reducer.js","store/reducers/index.js","store/index.js","store/StoreProvider.js","components/UI/starParallax/starParallax.js","store/actions/toast-actions.js","components/UI/toasts.js","components/UI/loader/loader.js","utils/swapi.js","components/UI/flipCard/flipCard.js","assets/images/jedi.svg","components/cloudImage.js","components/neonButton.js","components/basicCard.js","components/featuredBox.js","api/api.js","store/actions/common.js","store/actions/films-actions.js","store/actions/characters-actions.js","store/actions/planets-actions.js","store/actions/starships-actions.js","store/actions/vehicles-actions.js","store/actions/species-actions.js","components/layout.js","components/Home/home.js","hooks/useVisible.js","components/pageTitle.js","components/categoryPage.js","components/page404.js","components/crawl.js","components/dataBox.js","components/Films/filmPage.js","assets/images/star_wars_logo.svg","components/header/header.js","components/landingPage.js","components/Characters/characterPage.js","components/Planets/planetPage.js","components/Starships/starshipPage.js","components/Species/speciesPage.js","components/footer.js","components/Vehicles/vehiclePage.js","app.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_CHARACTER_PAGE","GET_CHARACTERS","GET_STARSHIP_PAGE","GET_STARSHIPS","GET_VEHICLE_PAGE","GET_VEHICLES","GET_SPECIES_PAGE","GET_SPECIES","GET_PLANET_PAGE","GET_PLANETS","GET_FILM_PAGE","GET_FILMS","GLOBAL_SUCCESS","GLOBAL_ERROR","CLEAR_TOAST","INIT_STATE","dataEnd","next","items","Map","error","success","msg","rootReducer","combineReducers","films","state","action","type","payload","characters","planets","species","starships","toasts","vehicles","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","StoreProvider","children","StarParallax","className","classes","sky","stars","stars2","stars3","globalError","clearToast","dispatch","Toasts","useSelector","useDispatch","useEffect","showToast","toast","position","POSITION","BOTTOM_RIGHT","theme","Loader","loader","content","starWarsAPIModel","average_height","String","label","suffix","average_lifespan","birth_year","cargo_capacity","classification","Array","consumables","cost_in_credits","climate","crew","designation","diameter","director","episode_id","eye_color","eye_colors","gender","gravity","hair_color","hair_colors","height","homeworld","link","hyperdrive_rating","language","length","max_atmosphering_speed","manufacturer","mass","MGLT","model","opening_crawl","orbital_period","passengers","people","pilots","population","producer","release_date","residents","rotation_period","skin_color","skin_colors","surface_water","starship_class","terrain","vehicle_class","formatSWAPIDataTable","data","maxRows","skipArrays","skipFields","rows","key","undefined","push","skipProp","includes","toString","e","console","log","FlipCard","flipCard","CloudImage","src","title","style","onError","target","jediLogo","NeonButton","clsx","container","button","BasicCard","category","item","itemDataTable","name","id","to","FeaturedBox","stateSlice","getDataAction","itemsMap","useState","loading","setLoading","finally","maxWidth","size","values","slice","map","minWidth","FIREBASE_API_URL","process","apiGetDataPage","resource","a","limit","offset","query","axios","get","response","lastId","set","dbId","stateSliceToSWAPIResource","apiGetDataItem","getNextDataPage","options","oldState","resourceType","dataPage","combinedItems","actionType","message","getSWAPIResourceSelectedItems","newItemIds","selectedItems","filter","has","newItems","newItemId","newItemData","getNextFilmDataPage","getState","getFilms","filmIds","getNextCharacterDataPage","getCharacters","charactersIds","getNextPlanetDataPage","getPlanets","planetIds","getNextStarshipDataPage","getStarships","starshipIds","getNextVehicleDataPage","getVehicles","vehicleIds","getNextSpeciesDataPage","getSpecies","speciesIds","Layout","Home","useVisible","ref","defIntersecting","updateOnlyIfIntersecting","rootMargin","isIntersecting","setIntersecting","refCopy","observer","IntersectionObserver","entry","value","Number","current","observe","unobserve","PageTitle","CategoryPage","pageTitle","loadMore","useRef","isVisible","Page404","Crawl","body","fade","starWars","crawl","DataBox","loadedItems","itemsIds","path","url","substring","lastIndexOf","extractSWAPIId","neededIds","foundItems","FilmPage","parseInt","useParams","film","Header","header","logo","alt","logoTitle","React","memo","dataLoader","LandingPage","pageTarget","caption","CharacterPage","PlanetPage","StarshipPage","SpeciesPage","Footer","VehiclePage","App","basename","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e515cebb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sky\":\"starsParallax_sky__3quaq\",\"stars\":\"starsParallax_stars__2-gdl\",\"animStar\":\"starsParallax_animStar__l6nJ-\",\"stars2\":\"starsParallax_stars2__2X1lL\",\"stars3\":\"starsParallax_stars3__JVEtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"crawl_body__39vlD\",\"fade\":\"crawl_fade__3NjnM\",\"starWars\":\"crawl_starWars__3_hR6\",\"crawl\":\"crawl_crawl__2FyMY\",\"title\":\"crawl_title__3ASW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-star-wars\":\"header_font-star-wars__2uq16\",\"font-sans\":\"header_font-sans__2B_rw\",\"text-shadow\":\"header_text-shadow___czMq\",\"header\":\"header_header__3STq7\",\"earthSpin\":\"header_earthSpin__2LPis\",\"logo\":\"header_logo__2JJrf\",\"logoTitle\":\"header_logoTitle__2SNkV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2MnQR\",\"AnimationName\":\"loader_AnimationName__1AQ4v\",\"content\":\"loader_content__m6zY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"neonButon_container__19pph\",\"button\":\"neonButon_button__VvAEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flipCard\":\"flipCard_flipCard__3vLUo\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GET_CHARACTER_PAGE = 'GET_CHARACTER_PAGE'\r\nexport const GET_CHARACTERS = 'GET_CHARACTERS'\r\n\r\n\r\nexport const GET_STARSHIP_PAGE = 'GET_STARSHIP_PAGE'\r\nexport const GET_STARSHIPS = 'GET_STARSHIPS'\r\n\r\n\r\nexport const GET_VEHICLE_PAGE = 'GET_VEHICLE_PAGE'\r\nexport const GET_VEHICLES = 'GET_VEHICLES'\r\n\r\n\r\nexport const GET_SPECIES_PAGE = 'GET_SPECIES_PAGE'\r\nexport const GET_SPECIES = 'GET_SPECIES'\r\n\r\n\r\nexport const GET_PLANET_PAGE = 'GET_PLANET_PAGE'\r\nexport const GET_PLANETS = 'GET_PLANETS'\r\n\r\n\r\nexport const GET_FILM_PAGE = 'GET_FILM_PAGE'\r\nexport const GET_FILMS = 'GET_FILMS'\r\n\r\nexport const GLOBAL_SUCCESS = 'GLOBAL_SUCCESS'\r\nexport const GLOBAL_ERROR = 'GLOBAL_ERROR'\r\nexport const CLEAR_TOAST = 'CLEAR_TOAST'\r\n","import {GET_CHARACTER_PAGE, GET_CHARACTERS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function charactersReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_CHARACTER_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_CHARACTERS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {CLEAR_TOAST, GLOBAL_ERROR, GLOBAL_SUCCESS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    error: false,\r\n    success: false,\r\n    msg: '',\r\n}\r\n\r\nexport default function toastsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GLOBAL_ERROR:\r\n            return {...state, error: true, msg: action.payload}\r\n        case GLOBAL_SUCCESS:\r\n            return {...state, success: true, msg: action.payload}\r\n        case CLEAR_TOAST:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {GET_STARSHIP_PAGE, GET_STARSHIPS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function starshipsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_STARSHIP_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_STARSHIPS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_FILM_PAGE, GET_FILMS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function filmsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_FILM_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_FILMS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_VEHICLE_PAGE, GET_VEHICLES} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function vehiclesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_VEHICLE_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_VEHICLES:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_SPECIES, GET_SPECIES_PAGE} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function speciesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_SPECIES_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_SPECIES:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_PLANET_PAGE, GET_PLANETS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function planetsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_PLANET_PAGE:\r\n            return {...state, ...action.payload}\r\n        case GET_PLANETS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport charactersReducer from \"./characters-reducer\";\r\nimport toastsReducer from \"./toasts-reducer\";\r\nimport starshipsReducer from \"./starships-reducer\";\r\nimport filmsReducer from \"./films-reducer\";\r\nimport vehiclesReducer from \"./vehicles-reducer\";\r\nimport speciesReducer from \"./species-reducer\";\r\nimport planetsReducer from \"./planets-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    films: filmsReducer,\r\n    characters: charactersReducer,\r\n    planets: planetsReducer,\r\n    species: speciesReducer,\r\n    starships: starshipsReducer,\r\n    toasts: toastsReducer,\r\n    vehicles: vehiclesReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n\r\n","import {Provider} from \"react-redux\";\r\nimport store from \"./index\";\r\n\r\nconst StoreProvider = ({children}) => (\r\n    <Provider store={store}>\r\n        {children}\r\n    </Provider>\r\n);\r\n\r\nexport default StoreProvider;\r\n","import classes from \"./starsParallax.module.scss\";\r\nconst StarParallax = () => {\r\n    return (\r\n        <div className={classes.sky}>\r\n            <div className={classes.stars}/>\r\n            <div className={classes.stars2}/>\r\n            <div className={classes.stars3}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StarParallax;\r\n","import {CLEAR_TOAST, GLOBAL_ERROR, GLOBAL_SUCCESS} from \"./types\";\r\n\r\nexport const globalError = (msg) => ({\r\n    type: GLOBAL_ERROR,\r\n    payload: msg\r\n});\r\n\r\nexport const globalSuccess = (msg) => ({\r\n    type: GLOBAL_SUCCESS,\r\n    payload: msg\r\n});\r\n\r\nexport const clearToast = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CLEAR_TOAST\r\n        })\r\n    }\r\n}\r\n","import {toast, ToastContainer} from \"react-toastify\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearToast} from \"../../store/actions/toast-actions\";\r\nimport {useEffect} from \"react\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport function Toasts() {\r\n    const toasts = useSelector(state => state.toasts)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        function showToast(type, msg) {\r\n            switch(type){\r\n                case 'SUCCESS':\r\n                    toast.success(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                case 'ERROR':\r\n                    toast.error(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                default:\r\n                    return false\r\n            }\r\n        }\r\n\r\n        if (toasts && toasts.error) {\r\n            const msg = toasts.msg ? toasts.msg : 'Error';\r\n            showToast('ERROR', msg);\r\n            dispatch(clearToast())\r\n        }\r\n        if (toasts && toasts.success) {\r\n            const msg = toasts.msg ? toasts.msg : 'OK!';\r\n            showToast('SUCCESS', msg);\r\n            dispatch(clearToast())\r\n        }\r\n    }, [toasts, dispatch])\r\n    return (\r\n        <ToastContainer/>\r\n    )\r\n}\r\n","import classes from \"./loader.module.scss\";\r\nexport function Loader() {\r\n    return (\r\n        <div className={classes.loader}>\r\n            <div className={classes.content}>\r\n            Loading...\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nLoader.propTypes = {};\r\n\r\n","import React from \"react\";\r\n\r\nconst starWarsAPIModel = {\r\n    average_height: {\r\n        type: String,\r\n        label: 'Average height',\r\n        suffix: 'cm',\r\n    },\r\n    average_lifespan: {\r\n        type: String,\r\n        label: 'Average lifespan',\r\n        suffix: 'y',\r\n    },\r\n    birth_year: {\r\n        type: String,\r\n        label: 'Birth year'\r\n    },\r\n    cargo_capacity: {\r\n        type: String,\r\n        label: \"Cargo capacity\",\r\n    },\r\n    classification: {\r\n        type: String,\r\n        label: \"Classification\",\r\n    },\r\n    characters: {\r\n        type: Array,\r\n        label: 'Characters'\r\n    },\r\n    consumables: {\r\n        type: String,\r\n        label: \"Consumables\",\r\n    },\r\n    cost_in_credits: {\r\n        type: String,\r\n        label: \"Cost in Credits\",\r\n    },\r\n    climate: {\r\n        type: String,\r\n        label: \"Climate\",\r\n    },\r\n    crew: {\r\n        type: String,\r\n        label: \"Crew\",\r\n    },\r\n    designation: {\r\n        type: String,\r\n        label: 'Designation'\r\n    },\r\n    diameter: {\r\n        type: String,\r\n        label: 'Diameter'\r\n    },\r\n    director: {\r\n        type: String,\r\n        label: 'Director'\r\n    },\r\n    episode_id: {\r\n        type: String,\r\n        label: 'Episode Id'\r\n    },\r\n    eye_color: {\r\n        type: String,\r\n        label: 'Eye color'\r\n    },\r\n    eye_colors: {\r\n        type: String,\r\n        label: 'Eye colors'\r\n    },\r\n    films: {\r\n        type: Array,\r\n        label: 'Films'\r\n    },\r\n    gender: {\r\n        type: String,\r\n        label: 'Gender'\r\n    },\r\n    gravity: {\r\n        type: String,\r\n        label: 'Gravity'\r\n    },\r\n    hair_color: {\r\n        type: String,\r\n        label: 'Hair color'\r\n    },\r\n    hair_colors: {\r\n        type: String,\r\n        label: 'Hair colors'\r\n    },\r\n    height: {\r\n        type: String,\r\n        label: 'Height',\r\n        suffix: \"cm\",\r\n    },\r\n    homeworld: {\r\n        type: String,\r\n        label: 'Home world',\r\n        link: true,\r\n    },\r\n    hyperdrive_rating: {\r\n        type: String,\r\n        label: 'Hyperdrive rating',\r\n    },\r\n    language: {\r\n        type: String,\r\n        label: 'Language',\r\n    },\r\n    length: {\r\n        type: String,\r\n        label: 'Length',\r\n    },\r\n    max_atmosphering_speed: {\r\n        type: String,\r\n        label: 'Max speed',\r\n    },\r\n    manufacturer: {\r\n        type: String,\r\n        label: 'Manufacturer',\r\n    },\r\n    mass: {\r\n        type: String,\r\n        label: 'Mass',\r\n        suffix: \"kg\",\r\n    },\r\n    MGLT: {\r\n        type: String,\r\n        label: 'MGLT',\r\n    },\r\n    model: {\r\n        type: String,\r\n        label: 'Model',\r\n    },\r\n    opening_crawl: {\r\n        type: String,\r\n        label: 'Opening Crawl'\r\n    },\r\n    orbital_period: {\r\n        type: String,\r\n        label: 'Orbital period'\r\n    },\r\n    passengers: {\r\n        type: String,\r\n        label: 'Passengers'\r\n    },\r\n    people: {\r\n        type: Array,\r\n        label: 'People'\r\n    },\r\n    pilots: {\r\n        type: Array,\r\n        label: 'Pilots'\r\n    },\r\n    planets: {\r\n        type: Array,\r\n        label: 'Planets'\r\n    },\r\n    population: {\r\n        type: String,\r\n        label: 'Population'\r\n    },\r\n    producer: {\r\n        type: String,\r\n        label: 'Producer'\r\n    },\r\n    release_date: {\r\n        type: String,\r\n        label: 'Release date'\r\n    },\r\n    residents: {\r\n        type: Array,\r\n        label: 'Residents'\r\n    },\r\n    rotation_period: {\r\n        type: String,\r\n        label: 'Rotation period',\r\n    },\r\n    skin_color: {\r\n        type: String,\r\n        label: 'Skin color',\r\n    },\r\n    skin_colors: {\r\n        type: String,\r\n        label: 'Skin colors',\r\n    },\r\n    species: {\r\n        type: Array,\r\n        label: 'Species'\r\n    },\r\n    surface_water: {\r\n        type: String,\r\n        label: 'Surface water',\r\n    },\r\n    starships: {\r\n        type: Array,\r\n        label: 'Starships'\r\n    },\r\n    starship_class: {\r\n        type: String,\r\n        label: 'Starship class',\r\n    },\r\n    terrain: {\r\n        type: String,\r\n        label: 'Terrain',\r\n    },\r\n    vehicle_class: {\r\n        type: String,\r\n        label: 'Vehicle class',\r\n    },\r\n    vehicles: {\r\n        type: Array,\r\n        label: 'Vehicles'\r\n    },\r\n\r\n}\r\n\r\n\r\n// <tr>\r\n//     <td>Characters</td>\r\n//     <td>{film.characters.length > 0 && film.characters.map(\r\n//         film => <p className={'max-w-lg'}>{film}</p>\r\n//     )}</td>\r\n// </tr>\r\n\r\n//returns table built on SWAPI data\r\nexport function formatSWAPIDataTable(data, maxRows = -1, skipArrays = false, skipFields = []) {\r\n\r\n    let rows = [];\r\n    for (const key in data) {\r\n        if (maxRows>=0 && rows.length === maxRows) break;\r\n        if (starWarsAPIModel[key] !== undefined) {\r\n            if (starWarsAPIModel[key].type === Array) {\r\n                if ((!skipArrays) && (data[key].length > 0)) {\r\n                    rows.push(\r\n                        <tr key={key}>\r\n                            <td>{starWarsAPIModel[key].label}</td>\r\n                            <td>Array</td>\r\n                        </tr>\r\n                    )\r\n                } else {\r\n                    if (!skipArrays) {\r\n                        rows.push(\r\n                            <tr key={key}>\r\n                                <td>{starWarsAPIModel[key].label}</td>\r\n                                <td>Array</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                }\r\n            } else {\r\n                const skipProp = ['n/a', 'unknown', 'N/A', null];\r\n                try {\r\n                    if (!(skipProp.includes(data[key]) || skipFields.includes(key))) {\r\n                        rows.push(\r\n                            <tr key={key}>\r\n                                <td className={'w-1/3'}>\r\n                                    <div className={'overflow-hidden h-6'}>{starWarsAPIModel[key].label}</div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className={'overflow-hidden h-6'}>\r\n                                        <p className={'overflow-ellipsis'}>{data[key].toString()}{starWarsAPIModel[key].suffix}</p>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                } catch (e) {\r\n                    console.log(key)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n            {rows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport function extractSWAPIId(path) {\r\n    const url = path.slice(0, -1);\r\n    return +url.substring(url.lastIndexOf('/') + 1);\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\nimport classes from \"./flipCard.module.scss\";\r\n\r\nexport const FlipCard = ({children}) => {\r\n\r\n    return (\r\n        <div className={classes.flipCard}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nFlipCard.propTypes = {children: PropTypes.node};\r\n","export default __webpack_public_path__ + \"static/media/jedi.d534cef7.svg\";","import jediLogo from '../assets/images/jedi.svg'\r\n\r\n\r\nexport function CloudImage({src, title, className}) {\r\n        //todo klasa zostaje ustawiona w onerror\r\n        return (\r\n            // <img src={jediLogo} className={'w-1/2 h-1/2 mx-auto'}/>\r\n            <img\r\n                className={className}\r\n                src={src}\r\n                style={{}}\r\n                onError={(e) => {\r\n                    e.target.src=jediLogo;\r\n                    //e.target.className = 'transform translate-x-1/2 translate-y-1/2 w-1/2 h-1/2';\r\n                }}\r\n            />)\r\n}\r\n","import classes from './neonButon.module.scss'\r\nimport clsx from \"clsx\";\r\n\r\nconst NeonButton = ({children, className = ''}) => {\r\n    return (\r\n        <div className={clsx([classes.container, className,'transform scale-50'])}>\r\n            <div className={classes.button}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NeonButton;\r\n","import * as PropTypes from \"prop-types\";\r\nimport {formatSWAPIDataTable} from \"../utils/swapi\";\r\nimport {FlipCard} from \"./UI/flipCard/flipCard\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CloudImage} from \"./cloudImage\";\r\nimport NeonButton from \"./neonButton\";\r\n\r\n\r\n// <img\r\n//     src={src}\r\n//     onError={(e) => {\r\n//         e.target.onerror = null;\r\n//         e.target.src = `https://robohash.org/${title}?size=310x310`\r\n//     }}\r\n// />\r\n\r\nexport const BasicCard = ({category, item}) => {\r\n    const itemDataTable = formatSWAPIDataTable(item, 5, true)\r\n    let title = item.name !== undefined ? item.name : item.title;\r\n    //console.log(`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`)\r\n    return (\r\n        <FlipCard>\r\n            <section>\r\n                <div className={'overflow-hidden flex-grow'}>\r\n                    <CloudImage\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}\r\n                        title={title}\r\n                    />\r\n                </div>\r\n                {/*<img src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}/>*/}\r\n                {/*<img alt={`${film.title}`} src={`https://robohash.org/${film.title}?size=240x240`}/>*/}\r\n                {/*https://res.cloudinary.com/di6qjuwyo/image/upload/v1636859976/starwars/heroes/1.jpg*/}\r\n                <div className={'text-2xl text-center py-4 bg-black'}>{title}</div>\r\n            </section>\r\n            <section>\r\n                <div className={'flex flex-col'}>\r\n                    <div className={'flex items-center p-2 gap-4'}>\r\n                        <CloudImage className={'w-24 h-24 rounded-full'} src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}>\r\n                        </CloudImage>\r\n                        <p className={'text-lg'}>{title}</p>\r\n                    </div>\r\n                    {itemDataTable}\r\n                    <Link to={`/${category}/${item.id}`}><NeonButton className={'font-bold h-9 -mt-5'}>more</NeonButton></Link>\r\n                </div>\r\n            </section>\r\n        </FlipCard>\r\n    )\r\n}\r\n\r\nBasicCard.propTypes = {\r\n    category: PropTypes.string,\r\n    item: PropTypes.object,\r\n};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {BasicCard} from \"./basicCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NeonButton from \"./neonButton\";\r\n\r\nconst FeaturedBox = ({title, stateSlice, getDataAction}) => {\r\n    const itemsMap = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataAction()).finally(\r\n            setLoading(false)\r\n        )\r\n    }, [dispatch, getDataAction])\r\n    return (\r\n        <>\r\n            <section className={'bg-black bg-opacity-75 my-24 w-full'}>\r\n                <div className={'container mx-auto'}>\r\n                    <h2>{title}</h2>\r\n                    <div className='flex gap-8 justify-center'>\r\n                        {loading && <Loader/>}\r\n                        <MediaQuery maxWidth={814}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 1).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth={1279} minWidth={815}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 2).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth={1549} minWidth={1280}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 3).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery minWidth={1550}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 4).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                    </div>\r\n                    <Link to={`/${stateSlice}`} className={'text-center bg-red-500'}>\r\n                        <NeonButton>more</NeonButton>\r\n                    </Link>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n};\r\n\r\nFeaturedBox.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeaturedBox;\r\n","import axios from \"axios\";\r\n\r\nconst FIREBASE_API_URL = process.env.REACT_APP_FIREBASE_API_URL;\r\n\r\nexport async function apiGetDataPage(resource, next, limit = 10) {\r\n    const offset = next !== '' ? `&startAt=${next + 1}` : '';\r\n    const query = `${FIREBASE_API_URL}${resource}.json/?orderBy=\"id\"${offset}&limitToFirst=${limit}`\r\n    const response = await axios.get(query)\r\n    const items = new Map();\r\n    let lastId = null;\r\n    for (let key in response.data) {\r\n        items.set(response.data[key].id, {...response.data[key], dbId: key})\r\n        lastId = response.data[key].id;\r\n    }\r\n    console.log(items)\r\n    return {\r\n        dataEnd: (items.size < limit),\r\n        next: lastId,\r\n        items\r\n    };\r\n}\r\n\r\nconst stateSliceToSWAPIResource = {\r\n    films: 'films',\r\n    characters: 'people',\r\n    planets: 'planets',\r\n    species: 'species',\r\n    starships: 'starships',\r\n    vehicles: 'vehicles',\r\n}\r\n\r\nexport async function apiGetDataItem(stateSlice, id) {\r\n    try {\r\n        const resource = stateSliceToSWAPIResource[stateSlice];\r\n        const query = `${FIREBASE_API_URL}${resource}.json/?orderBy=\"id\"&equalTo=${id}`\r\n        const response = await axios.get(query)\r\n        for (let key in response.data) {\r\n           return {...response.data[key], dbId: key}\r\n        }\r\n        return null;\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n","import {globalError} from \"./toast-actions\";\r\nimport {apiGetDataItem, apiGetDataPage} from \"../../api/api\";\r\n\r\nexport async function getNextDataPage(options) {\r\n    try {\r\n        const oldState = options.oldState;\r\n        if (!oldState.dataEnd) {\r\n            console.log(oldState)\r\n            const dataPage = await apiGetDataPage(options.resourceType, oldState.next)\r\n            const combinedItems = new Map([...oldState.items, ...dataPage.items])\r\n            const payload = {\r\n                dataEnd: dataPage.dataEnd,\r\n                next: dataPage.next,\r\n                items: combinedItems,\r\n            }\r\n            options.dispatch({type: options.actionType, payload})\r\n            return payload;\r\n        }\r\n    } catch (e) {\r\n        options.dispatch(globalError(e.message))\r\n    }\r\n}\r\n\r\nexport async function getSWAPIResourceSelectedItems(options) {\r\n    try {\r\n        const newItemIds = options.selectedItems.filter(\r\n            (id => !options.oldState.items.has(+id))\r\n        )\r\n        if (newItemIds.length > 0) {\r\n            const newItems = new Map();\r\n            for (let newItemId of newItemIds) {\r\n                const newItemData = await apiGetDataItem(options.resourceType, newItemId)\r\n                newItems.set(newItemData.id, newItemData);\r\n            }\r\n            const payload = new Map([...options.oldState.items, ...newItems])\r\n            console.log(payload)\r\n            options.dispatch({type: options.actionType, payload})\r\n            return payload;\r\n        }\r\n    } catch (e) {\r\n        options.dispatch(globalError(e.message))\r\n    }\r\n}\r\n","import {GET_FILM_PAGE, GET_FILMS} from \"./types\";\r\nimport {getNextDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getNextFilmDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            resourceType: 'films',\r\n            actionType: GET_FILM_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getFilms(filmIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            resourceType: 'films',\r\n            actionType: GET_FILMS,\r\n            selectedItems: filmIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_CHARACTER_PAGE, GET_CHARACTERS} from \"./types\";\r\nimport {getNextDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getNextCharacterDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().characters,\r\n            dispatch: dispatch,\r\n            resourceType: 'people',\r\n            actionType: GET_CHARACTER_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getCharacters(charactersIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().characters,\r\n            dispatch: dispatch,\r\n            resourceType: 'characters',\r\n            actionType: GET_CHARACTERS,\r\n            selectedItems: charactersIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {getNextDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\nimport {GET_PLANET_PAGE, GET_PLANETS} from \"./types\";\r\n\r\nexport function getNextPlanetDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().planets,\r\n            dispatch: dispatch,\r\n            resourceType: 'planets',\r\n            actionType: GET_PLANET_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getPlanets(planetIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().planets,\r\n            dispatch: dispatch,\r\n            resourceType: 'planets',\r\n            actionType: GET_PLANETS,\r\n            selectedItems: planetIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_STARSHIP_PAGE, GET_STARSHIPS} from \"./types\";\r\nimport {getNextDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getNextStarshipDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().starships,\r\n            dispatch: dispatch,\r\n            resourceType: 'starships',\r\n            actionType: GET_STARSHIP_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getStarships(starshipIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().starships,\r\n            dispatch: dispatch,\r\n            resourceType: 'starships',\r\n            actionType: GET_STARSHIPS,\r\n            selectedItems: starshipIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_VEHICLE_PAGE, GET_VEHICLES} from \"./types\";\r\nimport {getNextDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getNextVehicleDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().vehicles,\r\n            dispatch: dispatch,\r\n            resourceType: 'vehicles',\r\n            actionType: GET_VEHICLE_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getVehicles(vehicleIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().vehicles,\r\n            dispatch: dispatch,\r\n            resourceType: 'vehicles',\r\n            actionType: GET_VEHICLES,\r\n            selectedItems: vehicleIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import {GET_SPECIES, GET_SPECIES_PAGE} from \"./types\";\r\nimport {getNextDataPage, getSWAPIResourceSelectedItems} from \"./common\";\r\n\r\n\r\nexport function getNextSpeciesDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().species,\r\n            dispatch: dispatch,\r\n            resourceType: 'species',\r\n            actionType: GET_SPECIES_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getSpecies(speciesIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().species,\r\n            dispatch: dispatch,\r\n            resourceType: 'species',\r\n            actionType: GET_SPECIES,\r\n            selectedItems: speciesIds,\r\n\r\n        }\r\n        await getSWAPIResourceSelectedItems(options)\r\n    }\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\n\r\nexport const Layout = ({children}) => (\r\n    <main className={'flex flex-col items-center'}>\r\n        {children}\r\n    </main>\r\n)\r\n\r\nLayout.propTypes = {children: PropTypes.node};\r\n","import FeaturedBox from \"../featuredBox\";\r\nimport {getNextFilmDataPage} from \"../../store/actions/films-actions\";\r\nimport {getNextCharacterDataPage} from \"../../store/actions/characters-actions\";\r\nimport {getNextPlanetDataPage} from \"../../store/actions/planets-actions\";\r\nimport {getNextStarshipDataPage} from \"../../store/actions/starships-actions\";\r\nimport {getNextVehicleDataPage} from \"../../store/actions/vehicles-actions\";\r\nimport {getNextSpeciesDataPage} from \"../../store/actions/species-actions\";\r\nimport {Layout} from \"../layout\";\r\n\r\n\r\n\r\n\r\nexport function Home() {\r\n    return (\r\n        <>\r\n\r\n        <Layout>\r\n            <FeaturedBox title={'films'} stateSlice={'films'} getDataAction={getNextFilmDataPage}/>\r\n            <FeaturedBox title={'characters'} stateSlice={'characters'} getDataAction={getNextCharacterDataPage}/>\r\n            <FeaturedBox title={'planets'} stateSlice={'planets'} getDataAction={getNextPlanetDataPage}/>\r\n            <FeaturedBox title={'starships'} stateSlice={'starships'} getDataAction={getNextStarshipDataPage}/>\r\n            <FeaturedBox title={'vehicles'} stateSlice={'vehicles'} getDataAction={getNextVehicleDataPage}/>\r\n            <FeaturedBox title={'species'} stateSlice={'species'} getDataAction={getNextSpeciesDataPage}/>\r\n        </Layout></>)\r\n\r\n}\r\n","import {useEffect, useState} from \"react\";\r\n\r\n//updateOnlyIfIntersecting - better performance - update parent component only after ref appears on screen\r\n\r\nconst useVisible = (ref, defIntersecting = false, updateOnlyIfIntersecting = false, rootMargin = \"0px\") => {\r\n    // State and setter for storing whether element is visible\r\n    const [isIntersecting, setIntersecting] = useState(defIntersecting);\r\n    useEffect(() => {\r\n        const refCopy = ref;\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                // Update our state when observer callback fires\r\n                if (updateOnlyIfIntersecting) {\r\n                    if (entry.isIntersecting)\r\n                        setIntersecting((value) => Number(value) + 1);\r\n                } else {\r\n                    setIntersecting(entry.isIntersecting);\r\n                }\r\n            },\r\n            {\r\n                rootMargin,\r\n            }\r\n        );\r\n\r\n        if (refCopy.current) {\r\n            observer.observe(refCopy.current);\r\n        }\r\n        return () => {\r\n            console.log('--- Unmount', refCopy.current)\r\n            if (refCopy.current)\r\n                observer.unobserve(refCopy.current);\r\n        };\r\n    }, [ref, updateOnlyIfIntersecting, rootMargin]); // Empty array ensures that effect is only run on mount and unmount\r\n    return isIntersecting;\r\n};\r\n\r\nexport default useVisible;\r\n","import * as PropTypes from \"prop-types\";\r\n\r\n\r\nexport const PageTitle = ({title}) => (\r\n    <h1 className={'absolute right-4 top-36 opacity-75 max-w-3/4 text-right leading-none lowercase'}>{title}</h1>\r\n);\r\n\r\nPageTitle.propTypes = {title: PropTypes.string};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport useVisible from \"../hooks/useVisible\";\r\nimport PropTypes from \"prop-types\";\r\nimport {BasicCard} from \"./basicCard\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {PageTitle} from \"./pageTitle\";\r\n\r\n\r\nconst CategoryPage = ({title = '', stateSlice, getDataAction, ...rest}) => {\r\n    const pageTitle = title !== '' ? title : stateSlice;\r\n    const items = useSelector(state => state[stateSlice].items)\r\n\r\n    const dispatch = useDispatch();\r\n    const loadMore = useRef(null);\r\n    //const [loading, setLoading] = useState(true);\r\n    const isVisible = useVisible(loadMore, false, true)\r\n\r\n    console.log(isVisible)\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            console.log('loading x')\r\n      //      setLoading(true)\r\n            dispatch(getDataAction()).finally(\r\n        //        setLoading(false)\r\n            );\r\n        }\r\n\r\n    }, [isVisible, dispatch, getDataAction])\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title={pageTitle}/>\r\n            <div className={'container mx-auto'}>\r\n                <div className='flex flex-wrap justify-center gap-8 relative'>\r\n                    {items.size > 0 && [...items.values()].map((item) => {\r\n                        return (\r\n                            // <div className={'animate-appear'}>\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            // </div>\r\n                        )\r\n                    })}\r\n                    <div ref={loadMore} className='absolute bg-red-500 p-0 w-5 h-5 '/>\r\n                </div>\r\n                {/*{loading && <Loader/>}*/}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nCategoryPage.propTypes = {\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default CategoryPage;\r\n","const Page404 = () => {\r\n    return (\r\n        <>\r\n            <div className={'container mx-auto text-center pt-64'}>\r\n                <span className={'text-9xl font-sans font-extrabold text-red-600'}>404</span>\r\n                <span className={'font-star-wars text-4xl'}>This planet not exists!</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Page404;\r\n","import classes from \"./crawl.module.css\";\r\nconst Crawl = ({children}) => {\r\n    return (\r\n        <div className={classes.body}>\r\n           <div className={classes.fade}></div>\r\n            <section className={classes.starWars}>\r\n                <div className={classes.crawl}>\r\n                    {children}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Crawl;\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {extractSWAPIId} from \"../utils/swapi\";\r\nimport {useEffect} from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function DataBox({title, items, stateSlice, getDataAction}) {\r\n    const loadedItems = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const itemsIds = items ? items.map(item => {\r\n        return extractSWAPIId(item);\r\n    }) : undefined;\r\n\r\n    useEffect(() => {\r\n        if (itemsIds) {\r\n            const neededIds = itemsIds.filter(id => !loadedItems.has(id))\r\n            dispatch(getDataAction(neededIds));\r\n        }\r\n    }, [dispatch, itemsIds, loadedItems, getDataAction])\r\n\r\n    const foundItems = itemsIds ? itemsIds.filter(id => loadedItems.has(id)).map(id => loadedItems.get(id)) : undefined;\r\n    if (!foundItems) return null;\r\n\r\n    return (\r\n        <div>\r\n            <p className={'font-star-wars text-3xl my-2 lowercase'}>{title}</p>\r\n            <div className={'flex flex-wrap gap-4'}>\r\n                {foundItems.map(item => {\r\n                    return (\r\n                        <Link key={item.id} to={`/${stateSlice}/${item.id}`}>\r\n                            <div className={'border-2 p-2 rounded-lg bg-gray-900 border-gray-400'}>\r\n                                {item.name ? item.name : item.title}\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDataBox.propTypes = {\r\n    stateSlice: PropTypes.string,\r\n    title: PropTypes.string,\r\n    data: PropTypes.array,\r\n    getDataAction: PropTypes.func,\r\n};\r\n","import {PageTitle} from \"../pageTitle\";\r\nimport {useParams} from \"react-router\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getFilms} from \"../../store/actions/films-actions\";\r\nimport {CloudImage} from \"../cloudImage\";\r\nimport Crawl from \"../crawl\";\r\nimport {formatSWAPIDataTable} from \"../../utils/swapi\";\r\nimport {Loader} from \"../UI/loader/loader\";\r\nimport {getCharacters} from \"../../store/actions/characters-actions\";\r\nimport {DataBox} from \"../dataBox\";\r\nimport {getStarships} from \"../../store/actions/starships-actions\";\r\nimport {getVehicles} from \"../../store/actions/vehicles-actions\";\r\nimport {getPlanets} from \"../../store/actions/planets-actions\";\r\nimport {getSpecies} from \"../../store/actions/species-actions\";\r\n\r\n\r\n\r\nconst FilmPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    const film = useSelector(state => state.films.items.get(id));\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getFilms([id]))\r\n    }, [id, dispatch]);\r\n\r\n    if (!film) return <Loader/>\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle title={film.title}/>\r\n            <div className={'bg-black bg-opacity-75 py-8'}>\r\n                <div className={'flex h-96 container mx-auto'}>\r\n                    <CloudImage\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/films/${film.id}.jpg`}\r\n                        title={film.title}\r\n                    />\r\n                    {film.opening_crawl && <Crawl>\r\n                        <div>{film.opening_crawl}</div>\r\n                    </Crawl>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={'container mx-auto bg-black'}>\r\n                {formatSWAPIDataTable(film, undefined, true, ['opening_crawl'])}\r\n            </div>\r\n            <div className={'container mx-auto'}>\r\n                <DataBox title={'characters'} stateSlice={'characters'} items={film.characters} getDataAction={getCharacters}/>\r\n                <DataBox title={'starships'} stateSlice={'starships'} items={film.starships} getDataAction={getStarships}/>\r\n                <DataBox title={'vehicles'} stateSlice={'vehicles'} items={film.vehicles} getDataAction={getVehicles}/>\r\n                <DataBox title={'planets'} stateSlice={'planets'} items={film.planets} getDataAction={getPlanets}/>\r\n                <DataBox title={'species'} stateSlice={'species'} items={film.species} getDataAction={getSpecies}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilmPage;\r\n","export default __webpack_public_path__ + \"static/media/star_wars_logo.e3b54fcc.svg\";","import {Link, NavLink} from \"react-router-dom\";\r\nimport classes from \"./header.module.scss\";\r\nimport React from \"react\";\r\nimport logo from '../../assets/images/star_wars_logo.svg'\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={'flex container mx-auto'}>\r\n                <div className={'w-48 text-center'}>\r\n                    <Link to={'/'} className={''}>\r\n                        <img src={logo} className={classes.logo} alt={'StarWars Fandom'}/>\r\n                        <div className={classes.logoTitle}>Fandom</div>\r\n                    </Link>\r\n                </div>\r\n                <div className={' flex-grow'}/>\r\n                <nav>\r\n                    <NavLink to={'/'}>Home</NavLink>\r\n                    <NavLink to={'/films'}>Films</NavLink>\r\n                    <NavLink to={'/characters'}>Characters</NavLink>\r\n                    <NavLink to={'/starships'}>Starships </NavLink>\r\n                    <NavLink to={'/vehicles'}>Vehicles </NavLink>\r\n                    <NavLink to={'/planets'}>Planets</NavLink>\r\n                    <NavLink to={'/species'}>Species </NavLink>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getCharacters} from \"../store/actions/characters-actions\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {PageTitle} from \"./pageTitle\";\r\nimport {CloudImage} from \"./cloudImage\";\r\nimport {formatSWAPIDataTable} from \"../utils/swapi\";\r\nimport {DataBox} from \"./dataBox\";\r\nimport {getFilms} from \"../store/actions/films-actions\";\r\nimport {getStarships} from \"../store/actions/starships-actions\";\r\nimport {getVehicles} from \"../store/actions/vehicles-actions\";\r\nimport {getPlanets} from \"../store/actions/planets-actions\";\r\nimport {getSpecies} from \"../store/actions/species-actions\";\r\n\r\nconst dataLoader = {\r\n    films: getFilms,\r\n    characters: getCharacters,\r\n    planets: getPlanets,\r\n    species: getSpecies,\r\n    starships: getStarships,\r\n    vehicles: getVehicles,\r\n}\r\n\r\nexport function LandingPage({id, stateSlice}) {\r\n    const pageTarget = useSelector(state => state[stateSlice].items.get(id));\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(dataLoader[stateSlice]([id]))\r\n    }, [id, dispatch, stateSlice]);\r\n\r\n    if (!pageTarget) return <Loader/>\r\n    console.log(pageTarget)\r\n\r\n    const caption = pageTarget.title ? pageTarget.title : pageTarget.name;\r\n    return (\r\n        <div>\r\n            <PageTitle title={caption}/>\r\n            <div className={'bg-black bg-opacity-75 py-8'}>\r\n                <div className={'flex h-96 container mx-auto'}>\r\n                    <CloudImage\r\n                        className={'w-1/4 bg-red-500'}\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/${stateSlice}/${pageTarget.id}.jpg`}\r\n                        title={caption}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <div className={'container mx-auto bg-black'}>\r\n                {formatSWAPIDataTable(pageTarget, undefined, true, ['opening_crawl'])}\r\n            </div>\r\n            <div className={'container mx-auto'}>\r\n                <DataBox title={'films'} stateSlice={'films'} items={pageTarget.films} getDataAction={getFilms}/>\r\n                <DataBox title={'people'} stateSlice={'characters'} items={pageTarget.people}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'pilots'} stateSlice={'characters'} items={pageTarget.pilots}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'residents'} stateSlice={'characters'} items={pageTarget.residents}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'starships'} stateSlice={'starships'} items={pageTarget.starships}\r\n                         getDataAction={getStarships}/>\r\n                <DataBox title={'vehicles'} stateSlice={'vehicles'} items={pageTarget.vehicles}\r\n                         getDataAction={getVehicles}/>\r\n                <DataBox title={'planets'} stateSlice={'planets'} items={pageTarget.planets}\r\n                         getDataAction={getPlanets}/>\r\n                <DataBox title={'species'} stateSlice={'species'} items={pageTarget.species}\r\n                         getDataAction={getSpecies}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\nconst CharacterPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'characters'}/>;\r\n};\r\n\r\nexport default CharacterPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst PlanetPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'planets'}/>;\r\n};\r\n\r\nexport default PlanetPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst StarshipPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'starships'}/>;\r\n};\r\n\r\nexport default StarshipPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst SpeciesPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'species'}/>;\r\n};\r\n\r\nexport default SpeciesPage;\r\n","const Footer = () => {\r\n    return (\r\n        <footer className={'p-4 mt-24 bg-black text-center text-gray-400 opacity-75'}>\r\n            <p>(C) 2021 by Michael Zdolski</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../landingPage\";\r\n\r\n\r\n\r\nconst VehiclePage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'vehicles'}/>;\r\n};\r\n\r\nexport default VehiclePage;\r\n","import StarParallax from \"./components/UI/starParallax/starParallax\";\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\nimport {Toasts} from \"./components/UI/toasts\";\r\nimport {Home} from \"./components/Home/home\";\r\nimport CategoryPage from \"./components/categoryPage\";\r\nimport {getNextVehicleDataPage} from \"./store/actions/vehicles-actions\";\r\nimport {getNextFilmDataPage} from \"./store/actions/films-actions\";\r\nimport {getNextCharacterDataPage} from \"./store/actions/characters-actions\";\r\nimport {getNextPlanetDataPage} from \"./store/actions/planets-actions\";\r\nimport {getNextStarshipDataPage} from \"./store/actions/starships-actions\";\r\nimport {getNextSpeciesDataPage} from \"./store/actions/species-actions\";\r\nimport Page404 from \"./components/page404\";\r\nimport FilmPage from \"./components/Films/filmPage\";\r\nimport Header from \"./components/header/header\";\r\nimport CharacterPage from \"./components/Characters/characterPage\";\r\nimport PlanetPage from \"./components/Planets/planetPage\";\r\nimport StarshipPage from \"./components/Starships/starshipPage\";\r\nimport SpeciesPage from \"./components/Species/speciesPage\";\r\nimport Footer from \"./components/footer\";\r\nimport VehiclePage from \"./components/Vehicles/vehiclePage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <StarParallax/>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Header/>\r\n                <Routes>\r\n                    <Route path={'/'} element={<Home/>} exact/>\r\n                    <Route path={'/films'} element={<CategoryPage stateSlice={'films'} getDataAction={getNextFilmDataPage}/>} />\r\n                    <Route path={'/films/:id'} element={<FilmPage/>} />\r\n                    <Route path={'/characters'} element={<CategoryPage stateSlice={'characters'} getDataAction={getNextCharacterDataPage}/>} />\r\n                    <Route path={'/characters/:id'} element={<CharacterPage/>} />\r\n                    <Route path={'/planets'} element={<CategoryPage stateSlice={'planets'} getDataAction={getNextPlanetDataPage}/>} />\r\n                    <Route path={'/planets/:id'} element={<PlanetPage/>} />\r\n                    <Route path={'/starships'} element={<CategoryPage stateSlice={'starships'} getDataAction={getNextStarshipDataPage}/>} />\r\n                    <Route path={'/starships/:id'} element={<StarshipPage/>} />\r\n                    <Route path={'/vehicles'} element={<CategoryPage stateSlice={'vehicles'} getDataAction={getNextVehicleDataPage}/>} />\r\n                    <Route path={'/vehicles/:id'} element={<VehiclePage/>} />\r\n                    <Route path={'/species'} element={<CategoryPage stateSlice={'species'} getDataAction={getNextSpeciesDataPage}/>} />\r\n                    <Route path={'/species/:id'} element={<SpeciesPage/>} />\r\n                    <Route path={'*'} element={<Page404/>}/>} />\r\n                </Routes>\r\n            </Router>\r\n            <Footer/>\r\n            <Toasts/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport StoreProvider from \"./store/StoreProvider\";\nimport App from \"./app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider>\n            <App/>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}