{"version":3,"sources":["components/UI/starParallax/starsParallax.module.scss","components/crawl.module.css","components/UI/loader/loader.module.scss","components/header/header.module.scss","components/UI/flipCard/flipCard.module.scss","reportWebVitals.js","store/actions/types.js","store/reducers/characters-reducer.js","store/reducers/toasts-reducer.js","store/reducers/starships-reducer.js","store/reducers/films-reducer.js","store/reducers/vehicles-reducer.js","store/reducers/species-reducer.js","store/reducers/planets-reducer.js","store/reducers/index.js","store/index.js","store/StoreProvider.js","components/UI/starParallax/starParallax.js","store/actions/toast-actions.js","components/UI/toasts.js","components/UI/loader/loader.js","utils/swapi.js","components/UI/flipCard/flipCard.js","components/cloudImage.js","components/basicCard.js","components/featuredBox.js","api/swAPI.js","store/actions/common.js","store/actions/films-actions.js","store/actions/characters-actions.js","store/actions/planets-actions.js","store/actions/starships-actions.js","store/actions/vehicles-actions.js","store/actions/species-actions.js","components/layout.js","components/Home/home.js","hooks/useVisible.js","components/pageTitle.js","components/categoryPage.js","components/page404.js","components/crawl.js","components/Films/filmPage.js","components/header/header.js","app.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HERO_DATA_LOADING","GET_CHARACTERS","STARSHIP_DATA_LOADING","GET_STARSHIPS","VEHICLE_DATA_LOADING","GET_VEHICLES","SPECIES_DATA_LOADING","GET_SPECIES","PLANET_DATA_LOADING","GET_PLANETS","FILM_DATA_LOADING","GET_FILMS","GLOBAL_SUCCESS","GLOBAL_ERROR","CLEAR_TOAST","INIT_STATE","total","next","items","Map","loading","error","success","msg","rootReducer","combineReducers","films","state","action","type","payload","characters","planets","species","starships","toasts","vehicles","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","StoreProvider","children","StarParallax","className","classes","sky","stars","stars2","stars3","globalError","clearToast","dispatch","Toasts","useSelector","useDispatch","useEffect","showToast","toast","position","POSITION","BOTTOM_RIGHT","theme","Loader","loader","content","starWarsAPIModel","birth_year","String","label","cargo_capacity","Array","consumables","cost_in_credits","climate","crew","diameter","director","episode_id","eye_color","gender","gravity","hair_color","height","suffix","hyperdrive_rating","length","max_atmosphering_speed","manufacturer","mass","MGLT","model","opening_crawl","orbital_period","passengers","pilots","population","producer","release_date","residents","rotation_period","skin_color","surface_water","starship_class","terrain","vehicle_class","FlipCard","flipCard","CloudImage","src","title","onError","e","target","onerror","BasicCard","category","item","itemDataTable","data","rows","key","undefined","push","includes","toString","formatSWAPIDataTable","name","id","to","FeaturedBox","stateSlice","getDataAction","itemsMap","useState","setLoading","finally","maxWidth","size","values","slice","map","minWidth","getSWAPIData","url","a","axios","get","response","results","forEach","substring","lastIndexOf","set","count","getSWAPIResourceData","options","defaultURL","resourceType","oldState","newState","newItems","actionType","message","setFilmLoading","getFilms","getState","setHeroLoading","getCharacters","setPlanetLoading","getPlanets","setStarshipLoading","getStarships","setVehicleLoading","getVehicles","setSpeciesLoading","getSpecies","Layout","Home","useVisible","ref","defIntersecting","updateOnlyIfIntersecting","rootMargin","isIntersecting","setIntersecting","refCopy","observer","IntersectionObserver","entry","value","Number","current","observe","console","log","unobserve","PageTitle","CategoryPage","rest","pageTitle","loadMore","useRef","isVisible","Page404","Crawl","body","fade","starWars","crawl","FilmPage","parseInt","useParams","film","crawlText","Header","header","alt","logoTitle","React","memo","App","basename","process","path","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,IAAM,2BAA2B,MAAQ,6BAA6B,SAAW,gCAAgC,OAAS,8BAA8B,OAAS,gC,mBCAnLD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,SAAW,wBAAwB,MAAQ,qBAAqB,MAAQ,uB,mBCAhJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,QAAU,0B,mBCA1GD,EAAOC,QAAU,CAAC,iBAAiB,+BAA+B,YAAY,0BAA0B,cAAc,4BAA4B,OAAS,uBAAuB,UAAY,0BAA0B,UAAY,4B,mBCApOD,EAAOC,QAAU,CAAC,SAAW,6B,iGCWdC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCPDQ,EAAoB,oBACpBC,EAAiB,iBAGjBC,EAAwB,wBACxBC,EAAgB,gBAGhBC,EAAuB,uBACvBC,EAAe,eAGfC,EAAuB,uBACvBC,EAAc,cAGdC,EAAsB,sBACtBC,EAAc,cAGdC,EAAoB,oBACpBC,EAAY,YAGZC,EAAiB,iBACjBC,EAAe,eACfC,EAAc,cCxBrBC,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,IACXC,SAAS,GCJb,IAAML,EAAa,CACfM,OAAO,EACPC,SAAS,EACTC,IAAK,ICHT,IAAMR,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,IACXC,SAAS,GCJb,IAAML,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,IACXC,SAAS,GCJb,IAAML,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,IACXC,SAAS,GCJb,IAAML,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,IACXC,SAAS,GCJb,IAAML,EAAa,CACfC,MAAO,EACPC,KAAM,GACNC,MAAO,IAAIC,IACXC,SAAS,GCGb,IAAMI,EAAcC,0BAAgB,CAChCC,MJDW,WAAmD,IAA7BC,EAA4B,uDAApBZ,EAAYa,EAAQ,uCAC7D,OAAQA,EAAOC,MACX,KAAKlB,EACD,OAAO,2BAAIgB,GAAUC,EAAOE,SAChC,KAAKpB,EAAmB,OAAO,2BAAIiB,GAAX,IAAkBP,QAASQ,EAAOE,UAC1D,QACI,OAAOH,IIJfI,WPFW,WAAwD,IAA7BJ,EAA4B,uDAApBZ,EAAYa,EAAQ,uCAClE,OAAQA,EAAOC,MACX,KAAK5B,EACD,OAAO,2BAAI0B,GAAUC,EAAOE,SAChC,KAAK9B,EAAmB,OAAO,2BAAI2B,GAAX,IAAkBP,QAASQ,EAAOE,UAC1D,QACI,OAAOH,IOHfK,QDHW,WAAqD,IAA7BL,EAA4B,uDAApBZ,EAAYa,EAAQ,uCAC/D,OAAQA,EAAOC,MACX,KAAKpB,EACD,OAAO,2BAAIkB,GAAUC,EAAOE,SAChC,KAAKtB,EAAqB,OAAO,2BAAImB,GAAX,IAAkBP,QAASQ,EAAOE,UAC5D,QACI,OAAOH,ICFfM,QFJW,WAAqD,IAA7BN,EAA4B,uDAApBZ,EAAYa,EAAQ,uCAC/D,OAAQA,EAAOC,MACX,KAAKtB,EACD,OAAO,2BAAIoB,GAAUC,EAAOE,SAChC,KAAKxB,EAAsB,OAAO,2BAAIqB,GAAX,IAAkBP,QAASQ,EAAOE,UAC7D,QACI,OAAOH,IEDfO,ULLW,WAAuD,IAA7BP,EAA4B,uDAApBZ,EAAYa,EAAQ,uCACjE,OAAQA,EAAOC,MACX,KAAK1B,EACD,OAAO,2BAAIwB,GAAUC,EAAOE,SAChC,KAAK5B,EAAuB,OAAO,2BAAIyB,GAAX,IAAkBP,QAASQ,EAAOE,UAC9D,QACI,OAAOH,IKAfQ,ONPW,WAAoD,IAA7BR,EAA4B,uDAApBZ,EAAYa,EAAQ,uCAC9D,OAAQA,EAAOC,MACX,KAAKhB,EACD,OAAO,2BAAIc,GAAX,IAAkBN,OAAO,EAAME,IAAKK,EAAOE,UAC/C,KAAKlB,EACD,OAAO,2BAAIe,GAAX,IAAkBL,SAAS,EAAMC,IAAKK,EAAOE,UACjD,KAAKhB,EACD,MAAO,GACX,QACI,OAAOa,IMDfS,SHPW,WAAsD,IAA7BT,EAA4B,uDAApBZ,EAAYa,EAAQ,uCAChE,OAAQA,EAAOC,MACX,KAAKxB,EACD,OAAO,2BAAIsB,GAAUC,EAAOE,SAChC,KAAK1B,EAAsB,OAAO,2BAAIuB,GAAX,IAAkBP,QAASQ,EAAOE,UAC7D,QACI,OAAOH,MGIJH,I,gBCdTa,EAAmBC,8BAAoBC,0BAAgBC,MAG9CC,EAFDC,sBAAYlB,EAAaa,G,OCGxBM,EANO,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OAClB,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACKG,K,iBCMMC,EAVM,WACjB,OACI,sBAAKC,UAAWC,IAAQC,IAAxB,UACI,qBAAKF,UAAWC,IAAQE,QACxB,qBAAKH,UAAWC,IAAQG,SACxB,qBAAKJ,UAAWC,IAAQI,a,sBCJvBC,EAAc,SAAC7B,GAAD,MAAU,CACjCM,KAAMhB,EACNiB,QAASP,IAQA8B,EAAa,WACtB,OAAO,SAACC,GACJA,EAAS,CACLzB,KAAMf,M,MCTX,SAASyC,IACZ,IAAMpB,EAASqB,aAAY,SAAA7B,GAAK,OAAIA,EAAMQ,UACpCmB,EAAWG,cAkCjB,OA/BAC,qBAAU,WACN,SAASC,EAAU9B,EAAMN,GACrB,OAAOM,GACH,IAAK,UACD+B,IAAMtC,QAAQC,EAAI,CACdsC,SAAUD,IAAME,SAASC,aACzBC,MAAO,SAEX,MACJ,IAAK,QACDJ,IAAMvC,MAAME,EAAI,CACZsC,SAAUD,IAAME,SAASC,aACzBC,MAAO,SAEX,MACJ,QACI,OAAO,GAIf7B,GAAUA,EAAOd,QAEjBsC,EAAU,QADExB,EAAOZ,IAAMY,EAAOZ,IAAM,SAEtC+B,EAASD,MAETlB,GAAUA,EAAOb,UAEjBqC,EAAU,UADExB,EAAOZ,IAAMY,EAAOZ,IAAM,OAEtC+B,EAASD,QAEd,CAAClB,EAAQmB,IAER,cAAC,IAAD,I,qCC1CD,SAASW,KACZ,OACI,qBAAKnB,UAAWC,IAAQmB,OAAxB,SACI,qBAAKpB,UAAWC,IAAQoB,QAAxB,0BCFZ,IAAMC,GAAmB,CACrBC,WAAY,CACRxC,KAAMyC,OACNC,MAAO,cAEXC,eAAe,CACX3C,KAAMyC,OACNC,MAAO,kBAEXxC,WAAY,CACRF,KAAM4C,MACNF,MAAO,cAEXG,YAAY,CACR7C,KAAMyC,OACNC,MAAO,eAEXI,gBAAgB,CACZ9C,KAAMyC,OACNC,MAAO,mBAEXK,QAAS,CACL/C,KAAMyC,OACNC,MAAO,WAEXM,KAAM,CACFhD,KAAMyC,OACNC,MAAO,QAEXO,SAAU,CACNjD,KAAMyC,OACNC,MAAO,YAEXQ,SAAU,CACNlD,KAAMyC,OACNC,MAAO,YAEXS,WAAY,CACRnD,KAAMyC,OACNC,MAAO,cAEXU,UAAW,CACPpD,KAAMyC,OACNC,MAAO,aAEX7C,MAAO,CACHG,KAAM4C,MACNF,MAAO,SAEXW,OAAQ,CACJrD,KAAMyC,OACNC,MAAO,UAEXY,QAAS,CACLtD,KAAMyC,OACNC,MAAO,WAEXa,WAAY,CACRvD,KAAMyC,OACNC,MAAO,cAEXc,OAAQ,CACJxD,KAAMyC,OACNC,MAAO,SACPe,OAAQ,MAEZC,kBAAmB,CACf1D,KAAMyC,OACNC,MAAO,qBAEXiB,OAAQ,CACJ3D,KAAMyC,OACNC,MAAO,UAEXkB,uBAAwB,CACpB5D,KAAMyC,OACNC,MAAO,aAEXmB,aAAc,CACV7D,KAAMyC,OACNC,MAAO,gBAEXoB,KAAM,CACF9D,KAAMyC,OACNC,MAAO,OACPe,OAAQ,MAEZM,KAAK,CACD/D,KAAMyC,OACNC,MAAO,QAEXsB,MAAO,CACHhE,KAAMyC,OACNC,MAAO,SAEXuB,cAAe,CACXjE,KAAMyC,OACNC,MAAO,iBAEXwB,eAAgB,CACZlE,KAAMyC,OACNC,MAAO,kBAEXyB,WAAY,CACRnE,KAAMyC,OACNC,MAAO,cAEX0B,OAAQ,CACJpE,KAAM4C,MACNF,MAAO,UAEXvC,QAAS,CACLH,KAAM4C,MACNF,MAAO,WAEX2B,WAAY,CACRrE,KAAMyC,OACNC,MAAO,cAEX4B,SAAU,CACNtE,KAAMyC,OACNC,MAAO,YAEX6B,aAAc,CACVvE,KAAMyC,OACNC,MAAO,gBAEX8B,UAAW,CACPxE,KAAM4C,MACNF,MAAO,aAEX+B,gBAAiB,CACbzE,KAAMyC,OACNC,MAAO,mBAEXgC,WAAY,CACR1E,KAAMyC,OACNC,MAAO,cAEXtC,QAAS,CACLJ,KAAM4C,MACNF,MAAO,WAEXiC,cAAe,CACX3E,KAAMyC,OACNC,MAAO,iBAEXrC,UAAW,CACPL,KAAM4C,MACNF,MAAO,aAEXkC,eAAgB,CACZ5E,KAAMyC,OACNC,MAAO,kBAEXmC,QAAS,CACL7E,KAAMyC,OACNC,MAAO,WAEXoC,cAAe,CACX9E,KAAMyC,OACNC,MAAO,iBAEXnC,SAAU,CACNP,KAAM4C,MACNF,MAAO,a,wBCpKFqC,GAAW,SAAC,GAAgB,IAAfhE,EAAc,EAAdA,SAEtB,OACI,qBAAKE,UAAWC,KAAQ8D,SAAxB,SACKjE,KCPN,SAASkE,GAAT,GAAmC,IAAdC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,MAC7B,OACI,qBACID,IAAKA,EACLE,QAAS,SAACC,GACNA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOJ,IAAT,+BAAuCC,EAAvC,oBCST,IAAMK,GAAY,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KAC3BC,EHqKH,SAA8BC,GAEjC,IAAIC,EAAO,GACX,IAAK,IAAMC,KAAOF,OACgBG,IAA1BxD,GAAiBuD,KACbvD,GAAiBuD,GAAK9F,OAAS4C,MAC3BgD,EAAKE,GAAKnC,OAAS,GACnBkC,EAAKG,KACD,+BACI,6BAAKzD,GAAiBuD,GAAKpD,QAC3B,yCAFKoD,IAOA,CAAC,MAAO,UAAW,OACtBG,SAASL,EAAKE,KACxBD,EAAKG,KACD,+BACI,oBAAI/E,UAAW,QAAf,SACI,qBAAKA,UAAW,sBAAhB,SAAwCsB,GAAiBuD,GAAKpD,UAElE,6BACI,qBAAKzB,UAAW,sBAAhB,SACI,oBAAGA,UAAW,oBAAd,UAAoC2E,EAAKE,GAAKI,WAAY3D,GAAiBuD,GAAKrC,gBANnFqC,KAiB7B,OACI,gCACI,gCACCD,MG3MaM,CAAqBT,GACvCP,OAAsBY,IAAdL,EAAKU,KAAqBV,EAAKU,KAAOV,EAAKP,MAEvD,OACI,eAAC,GAAD,WACI,oCACI,qBAAKlE,UAAW,4BAAhB,SACI,cAACgE,GAAD,CACIC,IAAG,wDAAmDO,EAAnD,YAA+DC,EAAKW,GAApE,QACHlB,MAAOA,MAMf,qBAAKlE,UAAW,qCAAhB,SAAuDkE,OAE3D,oCACKQ,EACD,cAAC,IAAD,CAAMW,GAAE,WAAMb,EAAN,YAAkBC,EAAKW,IAA/B,4B,oBC0BDE,GArDK,SAAC,GAAwC,IAAvCpB,EAAsC,EAAtCA,MAAOqB,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAC/BC,EAAW/E,aAAY,SAAA7B,GAAK,OAAIA,EAAM0G,GAAYnH,SAClDoC,EAAWG,cACjB,EAA8B+E,oBAAS,GAAvC,mBAAOpH,EAAP,KAAgBqH,EAAhB,KAOA,OALA/E,qBAAU,WACNJ,EAASgF,KAAiBI,QACtBD,GAAW,MAEhB,CAACnF,EAAUgF,IAEV,mCACI,yBAASxF,UAAW,sCAApB,SACI,sBAAKA,UAAW,oBAAhB,UACI,6BAAKkE,IACL,sBAAKlE,UAAU,4BAAf,UACK1B,GAAW,cAAC6C,GAAD,IACZ,cAAC,KAAD,CAAY0E,SAAU,IAAtB,SACKJ,EAASK,KAAO,GAAK,YAAIL,EAASM,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACxB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUe,GAA/Bd,EAAKW,SAG7B,cAAC,KAAD,CAAYS,SAAU,KAAMK,SAAU,IAAtC,SACKT,EAASK,KAAO,GAAK,YAAIL,EAASM,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACxB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUe,GAA/Bd,EAAKW,SAG7B,cAAC,KAAD,CAAYS,SAAU,KAAMK,SAAU,KAAtC,SACKT,EAASK,KAAO,GAAK,YAAIL,EAASM,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACxB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUe,GAA/Bd,EAAKW,SAG7B,cAAC,KAAD,CAAYc,SAAU,KAAtB,SACKT,EAASK,KAAO,GAAK,YAAIL,EAASM,UAAUC,MAAM,EAAG,GAAGC,KAAI,SAACxB,GAAD,OACzD,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUe,GAA/Bd,EAAKW,YAIjC,cAAC,IAAD,CAAMC,GAAE,WAAME,GAAcvF,UAAW,2BAAvC,6B,+CC3Cb,SAAemG,GAAtB,mC,gDAAO,WAA4BC,GAA5B,kBAAAC,EAAA,sEAEOjI,EAAQ,IAAIC,IAFnB,SAGwBiI,KAAMC,IAAIH,GAHlC,cAGOI,EAHP,QAIU7B,KAAK8B,QAAQC,SAAQ,SAAAjC,GAC1B,IAAM2B,EAAM3B,EAAK2B,IAAIJ,MAAM,GAAI,GACzBnB,EAAMuB,EAAIO,UAAUP,EAAIQ,YAAY,KAAO,GACjDnC,EAAKW,IAAMP,EACXzG,EAAMyI,KAAKhC,EAAKJ,MARrB,kBAUQ,CACHvG,MAAOsI,EAAS7B,KAAKmC,MACrB3I,KAAMqI,EAAS7B,KAAKxG,KACpBC,MAAOA,IAbZ,qG,sBCAA,SAAe2I,GAAtB,mC,gDAAO,WAAoCC,GAApC,wBAAAX,EAAA,kEAEOY,EAFP,gCAE6CD,EAAQE,aAFrD,OAI6B,KADtBC,EAAWH,EAAQG,UACZ/I,MAAM0H,MAAcqB,EAAS/I,MAAM0H,KAAOqB,EAASjJ,OAJjE,wBAKK8I,EAAQxG,SAASwG,EAAQrB,YAAW,IALzC,SAM4BQ,GAA+B,KAAlBgB,EAAShJ,KAAcgJ,EAAShJ,KAAO8I,GANhF,cAMWG,EANX,OAOWC,EAAW,IAAIhJ,IAAJ,sBAAY8I,EAAS/I,OAArB,YAA+BgJ,EAAShJ,SACnDY,EAAU,CACZd,MAAOkJ,EAASlJ,MAChBC,KAAMiJ,EAASjJ,KACfC,MAAOiJ,GAEXL,EAAQxG,SAAS,CAACzB,KAAMiI,EAAQM,WAAYtI,YAC5CgI,EAAQxG,SAASwG,EAAQrB,YAAW,IAdzC,kBAeY3G,GAfZ,0DAkBCgI,EAAQxG,SAASwG,EAAQrB,YAAW,IACpCqB,EAAQxG,SAASF,EAAY,KAAEiH,UAnBhC,2D,sBCAP,SAASC,GAAelJ,GACpB,MAAO,CAACS,KAAMnB,EAAmBoB,QAASV,GAGvC,SAASmJ,KACZ,gDAAO,WAAOjH,EAAUkH,GAAjB,gBAAArB,EAAA,6DACGW,EAAU,CACZG,SAAUO,IAAW9I,MACrB4B,SAAUA,EACVmF,WAAY6B,GACZN,aAAc,QACdI,WAAYzJ,GANb,SAQGkJ,GAAqBC,GARxB,2CAAP,wDCLJ,SAASW,GAAerJ,GACpB,MAAO,CAACS,KAAM7B,EAAmB8B,QAASV,GAGvC,SAASsJ,KACZ,gDAAO,WAAOpH,EAAUkH,GAAjB,gBAAArB,EAAA,6DACGW,EAAU,CACZG,SAAUO,IAAWzI,WACrBuB,SAAUA,EACVmF,WAAYgC,GACZT,aAAc,SACdI,WAAYnK,GANb,SAQG4J,GAAqBC,GARxB,2CAAP,wDCLJ,SAASa,GAAiBvJ,GACtB,MAAO,CAACS,KAAMrB,EAAqBsB,QAASV,GAGzC,SAASwJ,KACZ,gDAAO,WAAOtH,EAAUkH,GAAjB,gBAAArB,EAAA,6DACGW,EAAU,CACZG,SAAUO,IAAWxI,QACrBsB,SAAUA,EACVmF,WAAYkC,GACZX,aAAc,UACdI,WAAY3J,GANb,SAQGoJ,GAAqBC,GARxB,2CAAP,wDCLJ,SAASe,GAAmBzJ,GACxB,MAAO,CAACS,KAAM3B,EAAuB4B,QAASV,GAG3C,SAAS0J,KACZ,gDAAO,WAAOxH,EAAUkH,GAAjB,gBAAArB,EAAA,6DACGW,EAAU,CACZG,SAAUO,IAAWtI,UACrBoB,SAAUA,EACVmF,WAAYoC,GACZb,aAAc,YACdI,WAAYjK,GANb,SAQG0J,GAAqBC,GARxB,2CAAP,wDCLJ,SAASiB,GAAkB3J,GACvB,MAAO,CAACS,KAAMzB,EAAsB0B,QAASV,GAG1C,SAAS4J,KACZ,gDAAO,WAAO1H,EAAUkH,GAAjB,gBAAArB,EAAA,6DACGW,EAAU,CACZG,SAAUO,IAAWpI,SACrBkB,SAAUA,EACVmF,WAAYsC,GACZf,aAAc,WACdI,WAAY/J,GANb,SAQGwJ,GAAqBC,GARxB,2CAAP,wDCLJ,SAASmB,GAAkB7J,GACvB,MAAO,CAACS,KAAMvB,EAAsBwB,QAASV,GAG1C,SAAS8J,KACZ,gDAAO,WAAO5H,EAAUkH,GAAjB,gBAAArB,EAAA,6DACGW,EAAU,CACZG,SAAUO,IAAWvI,QACrBqB,SAAUA,EACVmF,WAAYwC,GACZjB,aAAc,UACdI,WAAY7J,GANb,SAQGsJ,GAAqBC,GARxB,2CAAP,wDCNG,IAAMqB,GAAS,SAAC,GAAD,IAAEvI,EAAF,EAAEA,SAAF,OAClB,sBAAME,UAAW,6BAAjB,SACKF,KCQF,SAASwI,KACZ,OACI,mCAEA,eAAC,GAAD,WACI,cAAC,GAAD,CAAapE,MAAO,QAASqB,WAAY,QAASC,cAAeiC,KACjE,cAAC,GAAD,CAAavD,MAAO,aAAcqB,WAAY,aAAcC,cAAeoC,KAC3E,cAAC,GAAD,CAAa1D,MAAO,UAAWqB,WAAY,UAAWC,cAAesC,KACrE,cAAC,GAAD,CAAa5D,MAAO,YAAaqB,WAAY,YAAaC,cAAewC,KACzE,cAAC,GAAD,CAAa9D,MAAO,WAAYqB,WAAY,WAAYC,cAAe0C,KACvE,cAAC,GAAD,CAAahE,MAAO,UAAWqB,WAAY,UAAWC,cAAe4C,U,aCclEG,GAhCI,SAACC,GAAwF,IAAnFC,EAAkF,wDAAzDC,EAAyD,wDAAvBC,EAAuB,uDAAV,MAE7F,EAA0CjD,mBAAS+C,GAAnD,mBAAOG,EAAP,KAAuBC,EAAvB,KA2BA,OA1BAjI,qBAAU,WACN,IAAMkI,EAAUN,EACVO,EAAW,IAAIC,sBACjB,YAAc,IAAZC,EAAW,oBAELP,EACIO,EAAML,gBACNC,GAAgB,SAACK,GAAD,OAAWC,OAAOD,GAAS,KAE/CL,EAAgBI,EAAML,kBAG9B,CACID,eAOR,OAHIG,EAAQM,SACRL,EAASM,QAAQP,EAAQM,SAEtB,WACHE,QAAQC,IAAI,cAAeT,EAAQM,SAC/BN,EAAQM,SACRL,EAASS,UAAUV,EAAQM,YAEpC,CAACZ,EAAKE,EAA0BC,IAC5BC,GC9BEa,GAAY,SAAC,GAAD,IAAEvF,EAAF,EAAEA,MAAF,OACrB,oBAAIlE,UAAW,uEAAf,SAAwFkE,K,0CC8C7EwF,GAzCM,SAAC,GAAsD,IAAD,IAApDxF,aAAoD,MAA5C,GAA4C,EAAxCqB,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,cAAkBmE,EAAU,mBACjEC,EAAsB,KAAV1F,EAAeA,EAAQqB,EACnCnH,EAAQsC,aAAY,SAAA7B,GAAK,OAAIA,EAAM0G,GAAYnH,SAC/CoC,EAAWG,cACXkJ,EAAWC,iBAAO,MACxB,EAA8BpE,oBAAS,GAAvC,mBAAOpH,EAAP,KAAgBqH,EAAhB,KACMoE,EAAYxB,GAAWsB,GAAU,GAAM,GAa7C,OAXAP,QAAQC,IAAI,SAAUQ,EAAWzL,EAASqL,GAC1C/I,qBAAU,WACFmJ,IACApE,GAAW,GACXnF,EAASgF,KAAiBI,QACtBD,GAAW,OAIpB,CAACoE,EAAWvJ,EAAUgF,IAGrB,qCACI,cAAC,GAAD,CAAWtB,MAAO0F,IAClB,sBAAK5J,UAAW,oBAAhB,UACI,sBAAKA,UAAU,+CAAf,UACK5B,EAAM0H,KAAO,GAAK,YAAI1H,EAAM2H,UAAUE,KAAI,SAACxB,GAAD,OACvC,cAAC,GAAD,CAAyBA,KAAMA,EAAMD,SAAUe,GAA/Bd,EAAKW,OAEzB,qBAAKoD,IAAKqB,EAAU7J,UAAU,+BAEjC1B,GAAW,cAAC6C,GAAD,WC3Bb6I,GAXC,WACZ,OACI,mCACI,sBAAKhK,UAAW,sCAAhB,UACI,sBAAMA,UAAW,iDAAjB,iBACA,sBAAMA,UAAW,0BAAjB,2C,oBCSDiK,GAbD,SAAC,GAAgB,IAAfnK,EAAc,EAAdA,SACZ,OACI,sBAAKE,UAAWC,KAAQiK,KAAxB,UACG,qBAAKlK,UAAWC,KAAQkK,OACvB,yBAASnK,UAAWC,KAAQmK,SAA5B,SACI,qBAAKpK,UAAWC,KAAQoK,MAAxB,SACKvK,UCiCNwK,GA/BE,WACb,IAAMlF,EAAKmF,SAASC,cAAYpF,IAC1BqF,EAAO/J,aAAY,SAAA7B,GAAK,OAAIA,EAAMD,MAAMR,MAAMmI,IAAInB,MAClD5E,EAAWG,cACX+J,EAAS,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAMzH,cAQxB,OAPAsG,QAAQC,IAAInE,GACZkE,QAAQC,IAAImB,GAEZ9J,qBAAU,WACNJ,EbGJ,yCAAO,WAAOA,EAAUkH,GAAjB,gBAAArB,EAAA,6DACGW,EAAU,CACZG,SAAUO,IAAW9I,MACrB4B,SAAUA,EACVmF,WAAY6B,GACZN,aAAc,QACdI,WAAYzJ,GANb,SAQGkJ,GAAqBC,GARxB,2CAAP,2DaFG,CAAC5B,EAAI5E,IAGJ,gCACI,cAAC,GAAD,CAAW0D,MAAK,OAAEuG,QAAF,IAAEA,OAAF,EAAEA,EAAMvG,QACxB,qBAAKlE,UAAW,8BAAhB,SACI,sBAAKA,UAAW,8BAAhB,UACI,cAACgE,GAAD,CACIC,IAAG,qEAAyDwG,QAAzD,IAAyDA,OAAzD,EAAyDA,EAAMrF,GAA/D,QACHlB,MAAK,OAAEuG,QAAF,IAAEA,OAAF,EAAEA,EAAMvG,QAEhBwG,GAAa,cAAC,GAAD,UACV,8BAAMA,e,oBC5B9B,SAASC,KACL,OACI,wBAAQ3K,UAAWC,KAAQ2K,OAA3B,SACI,sBAAK5K,UAAW,yBAAhB,UACI,qBAAKA,UAAW,mBAAhB,SACI,eAAC,IAAD,CAAMqF,GAAI,IAAV,UACI,qBAAKpB,IAAK,yEACLjE,UAAW,OAAQ6K,IAAK,oBAC7B,qBAAK7K,UAAWC,KAAQ6K,UAAxB,yBAGR,qBAAK9K,UAAW,eAChB,gCACI,cAAC,IAAD,CAASqF,GAAI,IAAb,kBACA,cAAC,IAAD,CAASA,GAAI,SAAb,mBACA,cAAC,IAAD,CAASA,GAAI,cAAb,wBACA,cAAC,IAAD,CAASA,GAAI,aAAb,wBACA,cAAC,IAAD,CAASA,GAAI,YAAb,uBACA,cAAC,IAAD,CAASA,GAAI,WAAb,qBACA,cAAC,IAAD,CAASA,GAAI,WAAb,8BAOL0F,WAAMC,KAAKL,ICeXM,GA5BH,WACR,OACI,qCACI,cAAC,EAAD,IACA,eAAC,IAAD,CAAQC,SAAUC,+CAAlB,UACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC/C,GAAD,IAASgD,OAAK,IACzC,cAAC,IAAD,CAAOF,KAAM,SAAUC,QAAS,cAAC,GAAD,CAAc9F,WAAY,QAASC,cAAeiC,OAClF,cAAC,IAAD,CAAO2D,KAAM,aAAcC,QAAS,cAAC,GAAD,MACpC,cAAC,IAAD,CAAOD,KAAM,cAAeC,QAAS,cAAC,GAAD,CAAc9F,WAAY,aAAcC,cAAeoC,OAC5F,cAAC,IAAD,CAAOwD,KAAM,kBAAmBC,QAAS,cAAC,GAAD,CAAc9F,WAAY,aAAcC,cAAeoC,OAChG,cAAC,IAAD,CAAOwD,KAAM,WAAYC,QAAS,cAAC,GAAD,CAAc9F,WAAY,UAAWC,cAAesC,OACtF,cAAC,IAAD,CAAOsD,KAAM,eAAgBC,QAAS,cAAC,GAAD,CAAc9F,WAAY,UAAWC,cAAesC,OAC1F,cAAC,IAAD,CAAOsD,KAAM,aAAcC,QAAS,cAAC,GAAD,CAAc9F,WAAY,YAAaC,cAAewC,OAC1F,cAAC,IAAD,CAAOoD,KAAM,iBAAkBC,QAAS,cAAC,GAAD,CAAc9F,WAAY,YAAaC,cAAewC,OAC9F,cAAC,IAAD,CAAOoD,KAAM,YAAaC,QAAS,cAAC,GAAD,CAAc9F,WAAY,WAAYC,cAAe0C,OACxF,cAAC,IAAD,CAAOkD,KAAM,gBAAiBC,QAAS,cAAC,GAAD,CAAc9F,WAAY,WAAYC,cAAe0C,OAC5F,cAAC,IAAD,CAAOkD,KAAM,WAAYC,QAAS,cAAC,GAAD,CAAc9F,WAAY,UAAWC,cAAe4C,OACtF,cAAC,IAAD,CAAOgD,KAAM,eAAgBC,QAAS,cAAC,GAAD,CAAc9F,WAAY,UAAWC,cAAe4C,OAC1F,cAAC,IAAD,CAAOgD,KAAM,IAAKC,QAAS,cAAC,GAAD,MAd/B,aAiBJ,cAAC5K,EAAD,QChCZ8K,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGRC,SAASC,eAAe,SAM5BlP,M","file":"static/js/main.c907a294.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sky\":\"starsParallax_sky__3quaq\",\"stars\":\"starsParallax_stars__2-gdl\",\"animStar\":\"starsParallax_animStar__l6nJ-\",\"stars2\":\"starsParallax_stars2__2X1lL\",\"stars3\":\"starsParallax_stars3__JVEtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"crawl_body__39vlD\",\"fade\":\"crawl_fade__3NjnM\",\"starWars\":\"crawl_starWars__3_hR6\",\"crawl\":\"crawl_crawl__2FyMY\",\"title\":\"crawl_title__3ASW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2MnQR\",\"AnimationName\":\"loader_AnimationName__1AQ4v\",\"content\":\"loader_content__m6zY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-star-wars\":\"header_font-star-wars__2uq16\",\"font-sans\":\"header_font-sans__2B_rw\",\"text-shadow\":\"header_text-shadow___czMq\",\"header\":\"header_header__3STq7\",\"earthSpin\":\"header_earthSpin__2LPis\",\"logoTitle\":\"header_logoTitle__2SNkV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flipCard\":\"flipCard_flipCard__3vLUo\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const HERO_DATA_LOADING = 'HERO_DATA_LOADING'\r\nexport const GET_CHARACTERS = 'GET_CHARACTERS'\r\nexport const GET_CHARACTER = 'GET_CHARACTER'\r\n\r\nexport const STARSHIP_DATA_LOADING = 'STARSHIP_DATA_LOADING'\r\nexport const GET_STARSHIPS = 'GET_STARSHIPS'\r\nexport const GET_STARSHIP = 'GET_STARSHIP'\r\n\r\nexport const VEHICLE_DATA_LOADING = 'VEHICLE_DATA_LOADING'\r\nexport const GET_VEHICLES = 'GET_VEHICLES'\r\nexport const GET_VEHICLE = 'GET_VEHICLE'\r\n\r\nexport const SPECIES_DATA_LOADING = 'SPECIES_DATA_LOADING'\r\nexport const GET_SPECIES = 'GET_SPECIES'\r\nexport const GET_SPECIES_ITEM = 'GET_SPECIES_ITEM'\r\n\r\nexport const PLANET_DATA_LOADING = 'PLANET_DATA_LOADING'\r\nexport const GET_PLANETS = 'GET_PLANETS'\r\nexport const GET_PLANET = 'GET_PLANET'\r\n\r\nexport const FILM_DATA_LOADING = 'FILM_DATA_LOADING'\r\nexport const GET_FILMS = 'GET_FILMS'\r\nexport const GET_FILM = 'GET_FILM'\r\n\r\nexport const GLOBAL_SUCCESS = 'GLOBAL_SUCCESS'\r\nexport const GLOBAL_ERROR = 'GLOBAL_ERROR'\r\nexport const CLEAR_TOAST = 'CLEAR_TOAST'\r\n","import { GET_CHARACTERS, HERO_DATA_LOADING} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n    loading: false,\r\n}\r\n\r\nexport default function charactersReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_CHARACTERS:\r\n            return {...state, ...action.payload}\r\n        case HERO_DATA_LOADING: return {...state, loading: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {CLEAR_TOAST, GLOBAL_ERROR, GLOBAL_SUCCESS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    error: false,\r\n    success: false,\r\n    msg: '',\r\n}\r\n\r\nexport default function toastsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GLOBAL_ERROR:\r\n            return {...state, error: true, msg: action.payload}\r\n        case GLOBAL_SUCCESS:\r\n            return {...state, success: true, msg: action.payload}\r\n        case CLEAR_TOAST:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {GET_STARSHIPS, STARSHIP_DATA_LOADING} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n    loading: false,\r\n}\r\n\r\nexport default function starshipsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_STARSHIPS:\r\n            return {...state, ...action.payload}\r\n        case STARSHIP_DATA_LOADING: return {...state, loading: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {FILM_DATA_LOADING, GET_FILMS} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n    loading: false,\r\n}\r\n\r\nexport default function filmsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {...state, ...action.payload}\r\n        case FILM_DATA_LOADING: return {...state, loading: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_VEHICLES, VEHICLE_DATA_LOADING} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n    loading: false,\r\n}\r\n\r\nexport default function vehiclesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_VEHICLES:\r\n            return {...state, ...action.payload}\r\n        case VEHICLE_DATA_LOADING: return {...state, loading: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_SPECIES, SPECIES_DATA_LOADING} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n    loading: false,\r\n}\r\n\r\nexport default function speciesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_SPECIES:\r\n            return {...state, ...action.payload}\r\n        case SPECIES_DATA_LOADING: return {...state, loading: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_PLANETS, PLANET_DATA_LOADING} from \"../actions/types\";\r\n\r\nconst INIT_STATE = {\r\n    total: 0,\r\n    next: '',\r\n    items: new Map(),\r\n    loading: false,\r\n}\r\n\r\nexport default function planetsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case GET_PLANETS:\r\n            return {...state, ...action.payload}\r\n        case PLANET_DATA_LOADING: return {...state, loading: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport charactersReducer from \"./characters-reducer\";\r\nimport toastsReducer from \"./toasts-reducer\";\r\nimport starshipsReducer from \"./starships-reducer\";\r\nimport filmsReducer from \"./films-reducer\";\r\nimport vehiclesReducer from \"./vehicles-reducer\";\r\nimport speciesReducer from \"./species-reducer\";\r\nimport planetsReducer from \"./planets-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    films: filmsReducer,\r\n    characters: charactersReducer,\r\n    planets: planetsReducer,\r\n    species: speciesReducer,\r\n    starships: starshipsReducer,\r\n    toasts: toastsReducer,\r\n    vehicles: vehiclesReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n\r\n","import {Provider} from \"react-redux\";\r\nimport store from \"./index\";\r\n\r\nconst StoreProvider = ({children}) => (\r\n    <Provider store={store}>\r\n        {children}\r\n    </Provider>\r\n);\r\n\r\nexport default StoreProvider;\r\n","import classes from \"./starsParallax.module.scss\";\r\nconst StarParallax = () => {\r\n    return (\r\n        <div className={classes.sky}>\r\n            <div className={classes.stars}/>\r\n            <div className={classes.stars2}/>\r\n            <div className={classes.stars3}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StarParallax;\r\n","import {CLEAR_TOAST, GLOBAL_ERROR, GLOBAL_SUCCESS} from \"./types\";\r\n\r\nexport const globalError = (msg) => ({\r\n    type: GLOBAL_ERROR,\r\n    payload: msg\r\n});\r\n\r\nexport const globalSuccess = (msg) => ({\r\n    type: GLOBAL_SUCCESS,\r\n    payload: msg\r\n});\r\n\r\nexport const clearToast = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CLEAR_TOAST\r\n        })\r\n    }\r\n}\r\n","import {toast, ToastContainer} from \"react-toastify\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearToast} from \"../../store/actions/toast-actions\";\r\nimport {useEffect} from \"react\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport function Toasts() {\r\n    const toasts = useSelector(state => state.toasts)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        function showToast(type, msg) {\r\n            switch(type){\r\n                case 'SUCCESS':\r\n                    toast.success(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                case 'ERROR':\r\n                    toast.error(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                default:\r\n                    return false\r\n            }\r\n        }\r\n\r\n        if (toasts && toasts.error) {\r\n            const msg = toasts.msg ? toasts.msg : 'Error';\r\n            showToast('ERROR', msg);\r\n            dispatch(clearToast())\r\n        }\r\n        if (toasts && toasts.success) {\r\n            const msg = toasts.msg ? toasts.msg : 'OK!';\r\n            showToast('SUCCESS', msg);\r\n            dispatch(clearToast())\r\n        }\r\n    }, [toasts, dispatch])\r\n    return (\r\n        <ToastContainer/>\r\n    )\r\n}\r\n","import classes from \"./loader.module.scss\";\r\nexport function Loader() {\r\n    return (\r\n        <div className={classes.loader}>\r\n            <div className={classes.content}>\r\n            Loading...\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nLoader.propTypes = {};\r\n\r\n","import React from \"react\";\r\n\r\nconst starWarsAPIModel = {\r\n    birth_year: {\r\n        type: String,\r\n        label: 'Birth year'\r\n    },\r\n    cargo_capacity:{\r\n        type: String,\r\n        label: \"Cargo capacity\",\r\n    },\r\n    characters: {\r\n        type: Array,\r\n        label: 'Characters'\r\n    },\r\n    consumables:{\r\n        type: String,\r\n        label: \"Consumables\",\r\n    },\r\n    cost_in_credits:{\r\n        type: String,\r\n        label: \"Cost in Credits\",\r\n    },\r\n    climate: {\r\n        type: String,\r\n        label: \"Climate\",\r\n    },\r\n    crew: {\r\n        type: String,\r\n        label: \"Crew\",\r\n    },\r\n    diameter: {\r\n        type: String,\r\n        label: 'Diameter'\r\n    },\r\n    director: {\r\n        type: String,\r\n        label: 'Director'\r\n    },\r\n    episode_id: {\r\n        type: String,\r\n        label: 'Episode Id'\r\n    },\r\n    eye_color: {\r\n        type: String,\r\n        label: 'Eye color'\r\n    },\r\n    films: {\r\n        type: Array,\r\n        label: 'Films'\r\n    },\r\n    gender: {\r\n        type: String,\r\n        label: 'Gender'\r\n    },\r\n    gravity: {\r\n        type: String,\r\n        label: 'Gravity'\r\n    },\r\n    hair_color: {\r\n        type: String,\r\n        label: 'Hair color'\r\n    },\r\n    height: {\r\n        type: String,\r\n        label: 'Height',\r\n        suffix: \"cm\",\r\n    },\r\n    hyperdrive_rating: {\r\n        type: String,\r\n        label: 'Hyperdrive rating',\r\n    },\r\n    length: {\r\n        type: String,\r\n        label: 'Length',\r\n    },\r\n    max_atmosphering_speed: {\r\n        type: String,\r\n        label: 'Max speed',\r\n    },\r\n    manufacturer: {\r\n        type: String,\r\n        label: 'Manufacturer',\r\n    },\r\n    mass: {\r\n        type: String,\r\n        label: 'Mass',\r\n        suffix: \"kg\",\r\n    },\r\n    MGLT:{\r\n        type: String,\r\n        label: 'MGLT',\r\n    },\r\n    model: {\r\n        type: String,\r\n        label: 'Model',\r\n    },\r\n    opening_crawl: {\r\n        type: String,\r\n        label: 'Opening Crawl'\r\n    },\r\n    orbital_period: {\r\n        type: String,\r\n        label: 'Orbital period'\r\n    },\r\n    passengers: {\r\n        type: String,\r\n        label: 'Passengers'\r\n    },\r\n    pilots: {\r\n        type: Array,\r\n        label: 'Pilots'\r\n    },\r\n    planets: {\r\n        type: Array,\r\n        label: 'Planets'\r\n    },\r\n    population: {\r\n        type: String,\r\n        label: 'Population'\r\n    },\r\n    producer: {\r\n        type: String,\r\n        label: 'Producer'\r\n    },\r\n    release_date: {\r\n        type: String,\r\n        label: 'Release date'\r\n    },\r\n    residents: {\r\n        type: Array,\r\n        label: 'Residents'\r\n    },\r\n    rotation_period: {\r\n        type: String,\r\n        label: 'Rotation period',\r\n    },\r\n    skin_color: {\r\n        type: String,\r\n        label: 'Skin color',\r\n    },\r\n    species: {\r\n        type: Array,\r\n        label: 'Species'\r\n    },\r\n    surface_water: {\r\n        type: String,\r\n        label: 'Surface water',\r\n    },\r\n    starships: {\r\n        type: Array,\r\n        label: 'Starships'\r\n    },\r\n    starship_class: {\r\n        type: String,\r\n        label: 'Starship class',\r\n    },\r\n    terrain: {\r\n        type: String,\r\n        label: 'Terrain',\r\n    },\r\n    vehicle_class: {\r\n        type: String,\r\n        label: 'Vehicle class',\r\n    },\r\n    vehicles: {\r\n        type: Array,\r\n        label: 'Vehicles'\r\n    },\r\n\r\n}\r\n\r\n\r\n// <tr>\r\n//     <td>Characters</td>\r\n//     <td>{film.characters.length > 0 && film.characters.map(\r\n//         film => <p className={'max-w-lg'}>{film}</p>\r\n//     )}</td>\r\n// </tr>\r\n\r\n//returns table built on SWAPI data\r\nexport function formatSWAPIDataTable(data) {\r\n\r\n    let rows = [];\r\n    for (const key in data) {\r\n        if (starWarsAPIModel[key] !== undefined) {\r\n            if (starWarsAPIModel[key].type === Array) {\r\n                if (data[key].length > 0) {\r\n                    rows.push(\r\n                        <tr key={key}>\r\n                            <td>{starWarsAPIModel[key].label}</td>\r\n                            <td>Array</td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            } else {\r\n                const skipProp = ['n/a', 'unknown', 'N/A'];\r\n                if (!skipProp.includes(data[key])) {\r\n                    rows.push(\r\n                        <tr key={key}>\r\n                            <td className={'w-1/3'}>\r\n                                <div className={'overflow-hidden h-6'}>{starWarsAPIModel[key].label}</div>\r\n                            </td>\r\n                            <td>\r\n                                <div className={'overflow-hidden h-6'}>\r\n                                    <p className={'overflow-ellipsis'}>{data[key].toString()}{starWarsAPIModel[key].suffix}</p>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n            {rows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\nimport classes from \"./flipCard.module.scss\";\r\n\r\nexport const FlipCard = ({children}) => {\r\n\r\n    return (\r\n        <div className={classes.flipCard}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nFlipCard.propTypes = {children: PropTypes.node};\r\n","export function CloudImage({src, title}) {\r\n    return (\r\n        <img\r\n            src={src}\r\n            onError={(e) => {\r\n                e.target.onerror = null;\r\n                e.target.src = `https://robohash.org/${title}?size=310x310`\r\n            }}\r\n        />\r\n//         <img\r\n//             alt={''}\r\n//             src={`https://robohash.org/${title}?size=310x310`}\r\n//         />\r\n    )\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\nimport {formatSWAPIDataTable} from \"../utils/swapi\";\r\nimport {FlipCard} from \"./UI/flipCard/flipCard\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CloudImage} from \"./cloudImage\";\r\n\r\n\r\n// <img\r\n//     src={src}\r\n//     onError={(e) => {\r\n//         e.target.onerror = null;\r\n//         e.target.src = `https://robohash.org/${title}?size=310x310`\r\n//     }}\r\n// />\r\n\r\nexport const BasicCard = ({category, item}) => {\r\n    const itemDataTable = formatSWAPIDataTable(item)\r\n    let title = item.name !== undefined ? item.name : item.title;\r\n    //console.log(`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`)\r\n    return (\r\n        <FlipCard>\r\n            <section>\r\n                <div className={'overflow-hidden flex-grow'}>\r\n                    <CloudImage\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}\r\n                        title={title}\r\n                    />\r\n                </div>\r\n                {/*<img src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}/>*/}\r\n                {/*<img alt={`${film.title}`} src={`https://robohash.org/${film.title}?size=240x240`}/>*/}\r\n                {/*https://res.cloudinary.com/di6qjuwyo/image/upload/v1636859976/starwars/heroes/1.jpg*/}\r\n                <div className={'text-2xl text-center py-4 bg-black'}>{title}</div>\r\n            </section>\r\n            <section>\r\n                {itemDataTable}\r\n                <Link to={`/${category}/${item.id}`}>more...</Link>\r\n            </section>\r\n        </FlipCard>\r\n    )\r\n}\r\n\r\nBasicCard.propTypes = {\r\n    category: PropTypes.string,\r\n    item: PropTypes.object,\r\n};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {BasicCard} from \"./basicCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FeaturedBox = ({title, stateSlice, getDataAction}) => {\r\n    const itemsMap = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataAction()).finally(\r\n            setLoading(false)\r\n        )\r\n    }, [dispatch, getDataAction])\r\n    return (\r\n        <>\r\n            <section className={'bg-black bg-opacity-75 my-24 w-full'}>\r\n                <div className={'container mx-auto'}>\r\n                    <h2>{title}</h2>\r\n                    <div className='flex gap-8 justify-center'>\r\n                        {loading && <Loader/>}\r\n                        <MediaQuery maxWidth={814}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 1).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth={1279} minWidth={815}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 2).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth={1549} minWidth={1280}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 3).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                        <MediaQuery minWidth={1550}>\r\n                            {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 4).map((item) => (\r\n                                <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                            ))}\r\n                        </MediaQuery>\r\n                    </div>\r\n                    <Link to={`/${stateSlice}`} className={'text-center text-lg z-50'}>More...</Link>\r\n                </div>\r\n\r\n            </section>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nFeaturedBox.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeaturedBox;\r\n","import axios from \"axios\";\r\n\r\n//return object with items or string with error message\r\nexport async function getSWAPIData(url) {\r\n    try {\r\n        const items = new Map();\r\n        const response = await axios.get(url);\r\n        response.data.results.forEach(item => {\r\n            const url = item.url.slice(0, -1);\r\n            const key = url.substring(url.lastIndexOf('/') + 1);\r\n            item.id = +key;\r\n            items.set(+key, item);\r\n        });\r\n        return {\r\n            total: response.data.count,\r\n            next: response.data.next,\r\n            items: items,\r\n        };\r\n    }  catch(e)    {\r\n        throw e;\r\n    }\r\n}\r\n","import {getSWAPIData} from \"../../api/swAPI\";\r\nimport {globalError} from \"./toast-actions\";\r\n\r\nexport async function getSWAPIResourceData(options) {\r\n    try {\r\n        const defaultURL = `https://swapi.dev/api/${options.resourceType}/`;\r\n        const oldState = options.oldState;\r\n        if (oldState.items.size === 0 || oldState.items.size < oldState.total) {\r\n            options.dispatch(options.setLoading(true))\r\n            const newState = await getSWAPIData(oldState.next !== '' ? oldState.next : defaultURL)\r\n            const newItems = new Map([...oldState.items, ...newState.items])\r\n            const payload = {\r\n                total: newState.total,\r\n                next: newState.next,\r\n                items: newItems,\r\n            }\r\n            options.dispatch({type: options.actionType, payload})\r\n            options.dispatch(options.setLoading(false))\r\n            return payload;\r\n        }\r\n    } catch (e) {\r\n        options.dispatch(options.setLoading(false))\r\n        options.dispatch(globalError(e.message))\r\n    }\r\n}\r\n","import {FILM_DATA_LOADING, GET_FILMS} from \"./types\";\r\nimport {getSWAPIResourceData} from \"./common\";\r\n\r\nfunction setFilmLoading(loading) {\r\n    return {type: FILM_DATA_LOADING, payload: loading};\r\n}\r\n\r\nexport function getFilms() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            setLoading: setFilmLoading,\r\n            resourceType: 'films',\r\n            actionType: GET_FILMS\r\n        }\r\n        await getSWAPIResourceData(options)\r\n    }\r\n}\r\n\r\nexport function getFilm() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            setLoading: setFilmLoading,\r\n            resourceType: 'films',\r\n            actionType: GET_FILMS\r\n        }\r\n        await getSWAPIResourceData(options)\r\n    }\r\n}\r\n","import {GET_CHARACTERS, HERO_DATA_LOADING} from \"./types\";\r\nimport {getSWAPIResourceData} from \"./common\";\r\n\r\nfunction setHeroLoading(loading) {\r\n    return {type: HERO_DATA_LOADING, payload: loading};\r\n}\r\n\r\nexport function getCharacters() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().characters,\r\n            dispatch: dispatch,\r\n            setLoading: setHeroLoading,\r\n            resourceType: 'people',\r\n            actionType: GET_CHARACTERS\r\n        }\r\n        await getSWAPIResourceData(options)\r\n    }\r\n}\r\n","import {getSWAPIResourceData} from \"./common\";\r\nimport {GET_PLANETS, PLANET_DATA_LOADING} from \"./types\";\r\n\r\nfunction setPlanetLoading(loading) {\r\n    return {type: PLANET_DATA_LOADING, payload: loading};\r\n}\r\n\r\nexport function getPlanets() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().planets,\r\n            dispatch: dispatch,\r\n            setLoading: setPlanetLoading,\r\n            resourceType: 'planets',\r\n            actionType: GET_PLANETS\r\n        }\r\n        await getSWAPIResourceData(options)\r\n        // /console.log(state)\r\n    }\r\n}\r\n","import {GET_STARSHIPS, STARSHIP_DATA_LOADING} from \"./types\";\r\nimport {getSWAPIResourceData} from \"./common\";\r\n\r\nfunction setStarshipLoading(loading) {\r\n    return {type: STARSHIP_DATA_LOADING, payload: loading};\r\n}\r\n\r\nexport function getStarships() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().starships,\r\n            dispatch: dispatch,\r\n            setLoading: setStarshipLoading,\r\n            resourceType: 'starships',\r\n            actionType: GET_STARSHIPS\r\n        }\r\n        await getSWAPIResourceData(options)\r\n    }\r\n}\r\n","import {GET_VEHICLES, VEHICLE_DATA_LOADING} from \"./types\";\r\nimport {getSWAPIResourceData} from \"./common\";\r\n\r\nfunction setVehicleLoading(loading) {\r\n    return {type: VEHICLE_DATA_LOADING, payload: loading};\r\n}\r\n\r\nexport function getVehicles() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().vehicles,\r\n            dispatch: dispatch,\r\n            setLoading: setVehicleLoading,\r\n            resourceType: 'vehicles',\r\n            actionType: GET_VEHICLES\r\n        }\r\n        await getSWAPIResourceData(options)\r\n    }\r\n}\r\n","import {GET_SPECIES, SPECIES_DATA_LOADING} from \"./types\";\r\nimport {getSWAPIResourceData} from \"./common\";\r\n\r\nfunction setSpeciesLoading(loading) {\r\n    return {type: SPECIES_DATA_LOADING, payload: loading};\r\n}\r\n\r\nexport function getSpecies() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().species,\r\n            dispatch: dispatch,\r\n            setLoading: setSpeciesLoading,\r\n            resourceType: 'species',\r\n            actionType: GET_SPECIES\r\n        }\r\n        await getSWAPIResourceData(options)\r\n    }\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\n\r\nexport const Layout = ({children}) => (\r\n    <main className={'flex flex-col items-center'}>\r\n        {children}\r\n    </main>\r\n)\r\n\r\nLayout.propTypes = {children: PropTypes.node};\r\n","import FeaturedBox from \"../featuredBox\";\r\nimport {getFilms} from \"../../store/actions/films-actions\";\r\nimport {getCharacters} from \"../../store/actions/characters-actions\";\r\nimport {getPlanets} from \"../../store/actions/planets-actions\";\r\nimport {getStarships} from \"../../store/actions/starships-actions\";\r\nimport {getVehicles} from \"../../store/actions/vehicles-actions\";\r\nimport {getSpecies} from \"../../store/actions/species-actions\";\r\nimport {Layout} from \"../layout\";\r\n\r\n\r\n\r\n\r\nexport function Home() {\r\n    return (\r\n        <>\r\n\r\n        <Layout>\r\n            <FeaturedBox title={'films'} stateSlice={'films'} getDataAction={getFilms}/>\r\n            <FeaturedBox title={'characters'} stateSlice={'characters'} getDataAction={getCharacters}/>\r\n            <FeaturedBox title={'planets'} stateSlice={'planets'} getDataAction={getPlanets}/>\r\n            <FeaturedBox title={'starships'} stateSlice={'starships'} getDataAction={getStarships}/>\r\n            <FeaturedBox title={'vehicles'} stateSlice={'vehicles'} getDataAction={getVehicles}/>\r\n            <FeaturedBox title={'species'} stateSlice={'species'} getDataAction={getSpecies}/>\r\n        </Layout></>)\r\n\r\n}\r\n","import {useEffect, useState} from \"react\";\r\n\r\n//updateOnlyIfIntersecting - better performance - update parent component only after ref appears on screen\r\n\r\nconst useVisible = (ref, defIntersecting = false, updateOnlyIfIntersecting = false, rootMargin = \"0px\") => {\r\n    // State and setter for storing whether element is visible\r\n    const [isIntersecting, setIntersecting] = useState(defIntersecting);\r\n    useEffect(() => {\r\n        const refCopy = ref;\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                // Update our state when observer callback fires\r\n                if (updateOnlyIfIntersecting) {\r\n                    if (entry.isIntersecting)\r\n                        setIntersecting((value) => Number(value) + 1);\r\n                } else {\r\n                    setIntersecting(entry.isIntersecting);\r\n                }\r\n            },\r\n            {\r\n                rootMargin,\r\n            }\r\n        );\r\n\r\n        if (refCopy.current) {\r\n            observer.observe(refCopy.current);\r\n        }\r\n        return () => {\r\n            console.log('--- Unmount', refCopy.current)\r\n            if (refCopy.current)\r\n                observer.unobserve(refCopy.current);\r\n        };\r\n    }, [ref, updateOnlyIfIntersecting, rootMargin]); // Empty array ensures that effect is only run on mount and unmount\r\n    return isIntersecting;\r\n};\r\n\r\nexport default useVisible;\r\n","import * as PropTypes from \"prop-types\";\r\n\r\n\r\nexport const PageTitle = ({title}) => (\r\n    <h1 className={'absolute right-4 top-36 opacity-75 max-w-3/4 text-right leading-none'}>{title}</h1>\r\n);\r\n\r\nPageTitle.propTypes = {title: PropTypes.string};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport useVisible from \"../hooks/useVisible\";\r\nimport PropTypes from \"prop-types\";\r\nimport {BasicCard} from \"./basicCard\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {PageTitle} from \"./pageTitle\";\r\n\r\n\r\nconst CategoryPage = ({title = '', stateSlice, getDataAction, ...rest}) => {\r\n    const pageTitle = title !== '' ? title : stateSlice;\r\n    const items = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const loadMore = useRef(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const isVisible = useVisible(loadMore, true, true)\r\n\r\n    console.log('Redraw', isVisible, loading, rest)\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            setLoading(true)\r\n            dispatch(getDataAction()).finally(\r\n                setLoading(false)\r\n            );\r\n        }\r\n\r\n    }, [isVisible, dispatch, getDataAction])\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title={pageTitle}/>\r\n            <div className={'container mx-auto'}>\r\n                <div className='flex flex-wrap justify-center gap-8 relative'>\r\n                    {items.size > 0 && [...items.values()].map((item) => (\r\n                        <BasicCard key={item.id} item={item} category={stateSlice}/>\r\n                    ))}\r\n                    <div ref={loadMore} className='bg-red-500 p-0 w-0 h-5 '/>\r\n                </div>\r\n                {loading && <Loader/>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nCategoryPage.propTypes = {\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default CategoryPage;\r\n","const Page404 = () => {\r\n    return (\r\n        <>\r\n            <div className={'container mx-auto text-center pt-64'}>\r\n                <span className={'text-9xl font-sans font-extrabold text-red-600'}>404</span>\r\n                <span className={'font-star-wars text-4xl'}>This planet not exists!</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Page404;\r\n","import classes from \"./crawl.module.css\";\r\nconst Crawl = ({children}) => {\r\n    return (\r\n        <div className={classes.body}>\r\n           <div className={classes.fade}></div>\r\n            <section className={classes.starWars}>\r\n                <div className={classes.crawl}>\r\n                    {children}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Crawl;\r\n","import {PageTitle} from \"../pageTitle\";\r\nimport {useParams} from \"react-router\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getFilm} from \"../../store/actions/films-actions\";\r\nimport {CloudImage} from \"../cloudImage\";\r\nimport Crawl from \"../crawl\";\r\n\r\n\r\nconst FilmPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    const film = useSelector(state => state.films.items.get(id));\r\n    const dispatch = useDispatch();\r\n    const crawlText = film?.opening_crawl;\r\n    console.log(id)\r\n    console.log(crawlText)\r\n\r\n    useEffect(() => {\r\n        dispatch(getFilm(id))\r\n    }, [id, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle title={film?.title}/>\r\n            <div className={'bg-black bg-opacity-75 py-8'}>\r\n                <div className={'flex h-96 container mx-auto'}>\r\n                    <CloudImage\r\n                        src={`https://res.cloudinary.com/di6qjuwyo/starwars/films/${film?.id}.jpg`}\r\n                        title={film?.title}\r\n                    />\r\n                    {crawlText && <Crawl>\r\n                        <div>{crawlText}</div>\r\n                    </Crawl>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilmPage;\r\n","import {Link, NavLink} from \"react-router-dom\";\r\nimport classes from \"./header.module.scss\";\r\nimport React from \"react\";\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={'flex container mx-auto'}>\r\n                <div className={'w-48 text-center'}>\r\n                    <Link to={'/'}>\r\n                        <img src={'https://upload.wikimedia.org/wikipedia/commons/6/6c/Star_Wars_Logo.svg'}\r\n                             className={'w-64'} alt={'StarWars Fandom'}/>\r\n                        <div className={classes.logoTitle}>Fandom</div>\r\n                    </Link>\r\n                </div>\r\n                <div className={' flex-grow'}/>\r\n                <nav>\r\n                    <NavLink to={'/'}>Home</NavLink>\r\n                    <NavLink to={'/films'}>Films</NavLink>\r\n                    <NavLink to={'/characters'}>Characters</NavLink>\r\n                    <NavLink to={'/starships'}>Starships </NavLink>\r\n                    <NavLink to={'/vehicles'}>Vehicles </NavLink>\r\n                    <NavLink to={'/planets'}>Planets</NavLink>\r\n                    <NavLink to={'/species'}>Species </NavLink>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import StarParallax from \"./components/UI/starParallax/starParallax\";\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\nimport {Toasts} from \"./components/UI/toasts\";\r\nimport {Home} from \"./components/Home/home\";\r\nimport CategoryPage from \"./components/categoryPage\";\r\nimport {getVehicles} from \"./store/actions/vehicles-actions\";\r\nimport {getFilms} from \"./store/actions/films-actions\";\r\nimport {getCharacters} from \"./store/actions/characters-actions\";\r\nimport {getPlanets} from \"./store/actions/planets-actions\";\r\nimport {getStarships} from \"./store/actions/starships-actions\";\r\nimport {getSpecies} from \"./store/actions/species-actions\";\r\nimport Page404 from \"./components/page404\";\r\nimport FilmPage from \"./components/Films/filmPage\";\r\nimport Header from \"./components/header/header\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <StarParallax/>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Header/>\r\n                <Routes>\r\n                    <Route path={'/'} element={<Home/>} exact/>\r\n                    <Route path={'/films'} element={<CategoryPage stateSlice={'films'} getDataAction={getFilms}/>} />\r\n                    <Route path={'/films/:id'} element={<FilmPage/>} />\r\n                    <Route path={'/characters'} element={<CategoryPage stateSlice={'characters'} getDataAction={getCharacters}/>} />\r\n                    <Route path={'/characters/:id'} element={<CategoryPage stateSlice={'characters'} getDataAction={getCharacters}/>} />\r\n                    <Route path={'/planets'} element={<CategoryPage stateSlice={'planets'} getDataAction={getPlanets}/>} />\r\n                    <Route path={'/planets/:id'} element={<CategoryPage stateSlice={'planets'} getDataAction={getPlanets}/>} />\r\n                    <Route path={'/starships'} element={<CategoryPage stateSlice={'starships'} getDataAction={getStarships}/>} />\r\n                    <Route path={'/starships/:id'} element={<CategoryPage stateSlice={'starships'} getDataAction={getStarships}/>} />\r\n                    <Route path={'/vehicles'} element={<CategoryPage stateSlice={'vehicles'} getDataAction={getVehicles}/>} />\r\n                    <Route path={'/vehicles/:id'} element={<CategoryPage stateSlice={'vehicles'} getDataAction={getVehicles}/>} />\r\n                    <Route path={'/species'} element={<CategoryPage stateSlice={'species'} getDataAction={getSpecies}/>} />\r\n                    <Route path={'/species/:id'} element={<CategoryPage stateSlice={'species'} getDataAction={getSpecies}/>} />\r\n                    <Route path={'*'} element={<Page404/>}/>} />\r\n                </Routes>\r\n            </Router>\r\n            <Toasts/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport StoreProvider from \"./store/StoreProvider\";\nimport App from \"./app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider>\n            <App/>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}