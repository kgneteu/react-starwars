{"version":3,"sources":["components/UI/mobileMenu/mobileMenu.module.scss","components/UI/starParallax/starsParallax.module.scss","components/crawl/crawl.module.css","components/UI/neonButton/neonButton.module.scss","components/layout/header/header.module.scss","components/UI/flipCard/flipCard.module.scss","reportWebVitals.js","store/characters/character.types.js","store/characters/characters.reducer.js","store/toasts/toasts.types.js","store/toasts/toasts.reducer.js","store/starships/starships.types.js","store/starships/starships.reducer.js","store/films/films.types.js","store/films/films.reducer.js","store/vehicles/vehicles.types.js","store/vehicles/vehicles.reducer.js","store/species/species.types.js","store/species/species.reducer.js","store/planets/planets.types.js","store/planets/planets.reducer.js","store/reducers/index.js","store/index.js","store/storeProvider.js","components/UI/starParallax/starParallax.js","store/toasts/toasts.actions.js","components/UI/toasts/toasts.js","assets/images/loader.png","components/UI/loader/loader.js","utils/swapi.js","components/UI/flipCard/flipCard.js","assets/images/jedi.svg","components/UI/cloudImage/cloudImage.tsx","components/UI/neonButton/neonButton.tsx","components/articleCard/articleCard.tsx","components/featuredBox.js","api/api.js","store/utils/api-actions.js","store/films/films.actions.js","store/characters/characters.actions.js","store/planets/planets.actions.js","store/starships/starships.actions.js","store/vehicles/vehicles.actions.js","store/species/species.actions.js","components/main.js","components/pages/home/home.js","hooks/useVisible.js","components/pageTitle.js","components/categoryPage.js","components/pages/page404/page404.js","components/crawl/crawl.js","components/dataBox.js","components/pages/films/filmPage.js","assets/images/star_wars_logo.svg","components/UI/mobileMenu/mobileMenu.js","components/layout/header/header.tsx","components/landingPage.js","components/pages/characters/characterPage.js","components/pages/planets/planetPage.js","components/pages/starships/starshipPage.js","components/pages/species/speciesPage.js","components/layout/footer/footer.js","components/pages/vehicles/vehiclePage.js","components/scrollToTop/scrollToTop.js","app.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CharactersAction","INIT_STATE","dataEnd","next","items","Map","ToastsAction","error","success","msg","StarshipsAction","FilmsAction","VehiclesAction","SpeciesAction","PlanetsAction","rootReducer","combineReducers","films","state","action","type","payload","characters","planets","species","starships","toasts","vehicles","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","StoreProvider","children","StarParallax","className","classes","sky","stars","stars2","stars3","globalError","clearToast","dispatch","Toasts","useSelector","useDispatch","useEffect","showToast","toast","position","POSITION","BOTTOM_RIGHT","theme","Loader","src","loaderImage","alt","starWarsAPIModel","average_height","String","label","suffix","average_lifespan","birth_year","cargo_capacity","classification","Array","consumables","cost_in_credits","climate","crew","designation","diameter","director","episode_id","eye_color","eye_colors","gender","gravity","hair_color","hair_colors","height","homeworld","link","hyperdrive_rating","language","length","max_atmosphering_speed","manufacturer","mass","MGLT","model","opening_crawl","orbital_period","passengers","people","pilots","population","producer","release_date","residents","rotation_period","skin_color","skin_colors","surface_water","starship_class","terrain","vehicle_class","formatSWAPIDataTable","data","maxRows","skipArrays","skipFields","rows","key","undefined","push","skipProp","includes","toString","e","console","log","FlipCard","flipCard","CloudImage","transform","category","preset","imgId","title","process","style","onError","currentTarget","jediLogo","NeonButton","small","clsx","container","smallButton","button","defaultProps","ArticleCard","item","itemDataTable","name","id","to","FeaturedBox","stateSlice","getDataAction","itemsMap","useState","loading","setLoading","finally","maxWidth","size","values","slice","map","minWidth","FIREBASE_API_URL","apiGetDataPage","resource","a","limit","offset","query","axios","get","response","lastId","set","dbId","stateSliceToSWAPIResource","apiGetDataItem","Object","keys","entries","value","getNextDataPage","options","oldState","resourceType","dataPage","combinedItems","actionType","message","getDataItems","newItemIds","selectedItems","filter","has","newItems","newItemId","newItem","getNextFilmDataPage","getState","getFilms","filmIds","getNextCharacterDataPage","getCharacters","charactersIds","getNextPlanetDataPage","getPlanets","planetIds","getNextStarshipDataPage","getStarships","starshipIds","getNextVehicleDataPage","getVehicles","vehicleIds","getNextSpeciesDataPage","getSpecies","speciesIds","Main","Home","useVisible","ref","defIntersecting","updateOnlyIfIntersecting","rootMargin","isIntersecting","setIntersecting","refCopy","observer","IntersectionObserver","entry","Number","current","observe","unobserve","PageTitle","CategoryPage","pageTitle","loadMore","useRef","isVisible","Date","getMilliseconds","Page404","Crawl","body","fade","starWars","crawl","DataBox","loadedItems","itemsIds","path","url","substring","lastIndexOf","extractSWAPIId","neededIds","foundItems","FilmPage","parseInt","useParams","film","HeaderLink","onClose","mobileMenu__item","mobileMenu__link","onClick","MobileMenu","links","menuCheckRef","mobileMenu","menuCheckbox","htmlFor","menuButton","menuIcon","background","mobileMenu__nav","mobileMenu__list","index","click","Header","isSmallScreen","useMediaQuery","header","logo","logoTitle","React","memo","dataLoader","LandingPage","pageTarget","caption","CharacterPage","PlanetPage","StarshipPage","SpeciesPage","Footer","VehiclePage","ScrollToTop","pathname","useLocation","window","scrollTo","App","basename","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b513c6bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobileMenu\":\"mobileMenu_mobileMenu__2GWri\",\"menuCheckbox\":\"mobileMenu_menuCheckbox__3iEkh\",\"menuButton\":\"mobileMenu_menuButton__2VqWe\",\"background\":\"mobileMenu_background__26uKo\",\"mobileMenu__nav\":\"mobileMenu_mobileMenu__nav__3gRJV\",\"mobileMenu__list\":\"mobileMenu_mobileMenu__list__2BitI\",\"mobileMenu__item\":\"mobileMenu_mobileMenu__item__191V7\",\"mobileMenu__link\":\"mobileMenu_mobileMenu__link__1xw0_\",\"menuIcon\":\"mobileMenu_menuIcon__2UBoW\",\"header\":\"mobileMenu_header__6aVDV\",\"header__logo_box\":\"mobileMenu_header__logo_box__2xYMC\",\"header__logo\":\"mobileMenu_header__logo__3MR-V\",\"header__text_box\":\"mobileMenu_header__text_box__2lTRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sky\":\"starsParallax_sky__3quaq\",\"stars\":\"starsParallax_stars__2-gdl\",\"animStar\":\"starsParallax_animStar__l6nJ-\",\"stars2\":\"starsParallax_stars2__2X1lL\",\"stars3\":\"starsParallax_stars3__JVEtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"crawl_body__s-ZWE\",\"fade\":\"crawl_fade__3plzW\",\"starWars\":\"crawl_starWars__1j9YL\",\"crawl\":\"crawl_crawl__1d6em\",\"title\":\"crawl_title__35cCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"neonButton_container__L4WnV\",\"button\":\"neonButton_button__3aacq\",\"smallButton\":\"neonButton_smallButton__M82gj\",\"small\":\"neonButton_small__1XTt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-star-wars\":\"header_font-star-wars__kvvYJ\",\"font-sans\":\"header_font-sans__2KJM0\",\"text-shadow\":\"header_text-shadow__GSpnd\",\"header\":\"header_header__3MbuP\",\"earthSpin\":\"header_earthSpin__272Rx\",\"logo\":\"header_logo__3-9wg\",\"logoTitle\":\"header_logoTitle__2N4k2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flipCard\":\"flipCard_flipCard__3vLUo\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CharactersAction = {\r\n    GET_CHARACTER_PAGE: 'GET_CHARACTER_PAGE',\r\n    GET_CHARACTERS: 'GET_CHARACTERS'\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {CharactersAction} from \"./character.types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function charactersReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case CharactersAction.GET_CHARACTER_PAGE:\r\n            return {...state, ...action.payload}\r\n        case CharactersAction.GET_CHARACTERS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const ToastsAction = {\r\n    GLOBAL_SUCCESS: 'GLOBAL_SUCCESS',\r\n    GLOBAL_ERROR: 'GLOBAL_ERROR',\r\n    CLEAR_TOAST: 'CLEAR_TOAST',\r\n}\r\n","import {ToastsAction} from \"./toasts.types\";\r\n\r\nconst INIT_STATE = {\r\n    error: false,\r\n    success: false,\r\n    msg: '',\r\n}\r\n\r\nexport default function toastsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case ToastsAction.GLOBAL_ERROR:\r\n            return {...state, error: true, msg: action.payload}\r\n        case ToastsAction.GLOBAL_SUCCESS:\r\n            return {...state, success: true, msg: action.payload}\r\n        case ToastsAction.CLEAR_TOAST:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const StarshipsAction = {\r\n    GET_STARSHIP_PAGE: 'GET_STARSHIP_PAGE',\r\n    GET_STARSHIPS : 'GET_STARSHIPS'\r\n}\r\n\r\n\r\n\r\n","import {StarshipsAction} from \"./starships.types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function starshipsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case StarshipsAction.GET_STARSHIP_PAGE:\r\n            return {...state, ...action.payload}\r\n        case StarshipsAction.GET_STARSHIPS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const FilmsAction = {\r\n    GET_FILM_PAGE: 'GET_FILM_PAGE',\r\n    GET_FILMS: 'GET_FILMS'\r\n\r\n}\r\n\r\n\r\n","import {FilmsAction} from \"./films.types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function filmsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case FilmsAction.GET_FILM_PAGE:\r\n            return {...state, ...action.payload}\r\n        case FilmsAction.GET_FILMS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const VehiclesAction ={\r\n    GET_VEHICLE_PAGE : 'GET_VEHICLE_PAGE',\r\n    GET_VEHICLES : 'GET_VEHICLES'\r\n\r\n}\r\n\r\n","import {VehiclesAction} from \"./vehicles.types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function vehiclesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case VehiclesAction.GET_VEHICLE_PAGE:\r\n            return {...state, ...action.payload}\r\n        case VehiclesAction.GET_VEHICLES:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const SpeciesAction = {\r\n    GET_SPECIES_PAGE: 'GET_SPECIES_PAGE',\r\n    GET_SPECIES: 'GET_SPECIES'\r\n}\r\n\r\n","import {SpeciesAction} from \"./species.types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function speciesReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case SpeciesAction.GET_SPECIES_PAGE:\r\n            return {...state, ...action.payload}\r\n        case SpeciesAction.GET_SPECIES:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const PlanetsAction = {\r\n    GET_PLANET_PAGE: 'GET_PLANET_PAGE',\r\n    GET_PLANETS: 'GET_PLANETS'\r\n}\r\n\r\n","import {PlanetsAction} from \"./planets.types\";\r\n\r\nconst INIT_STATE = {\r\n    dataEnd: false,\r\n    next: '',\r\n    items: new Map(),\r\n}\r\n\r\nexport default function planetsReducer(state = INIT_STATE, action) {\r\n    switch (action.type) {\r\n        case PlanetsAction.GET_PLANET_PAGE:\r\n            return {...state, ...action.payload}\r\n        case PlanetsAction.GET_PLANETS:\r\n            return {...state, items: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport charactersReducer from \"../characters/characters.reducer\";\r\nimport toastsReducer from \"../toasts/toasts.reducer\";\r\nimport starshipsReducer from \"../starships/starships.reducer\";\r\nimport filmsReducer from \"../films/films.reducer\";\r\nimport vehiclesReducer from \"../vehicles/vehicles.reducer\";\r\nimport speciesReducer from \"../species/species.reducer\";\r\nimport planetsReducer from \"../planets/planets.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    films: filmsReducer,\r\n    characters: charactersReducer,\r\n    planets: planetsReducer,\r\n    species: speciesReducer,\r\n    starships: starshipsReducer,\r\n    toasts: toastsReducer,\r\n    vehicles: vehiclesReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n\r\n","import {Provider} from \"react-redux\";\r\nimport store from \"./index\";\r\n\r\nconst StoreProvider = ({children}) => (\r\n    <Provider store={store}>\r\n        {children}\r\n    </Provider>\r\n);\r\n\r\nexport default StoreProvider;\r\n","import classes from \"./starsParallax.module.scss\";\r\nconst StarParallax = () => {\r\n    return (\r\n        <div className={classes.sky}>\r\n            <div className={classes.stars}/>\r\n            <div className={classes.stars2}/>\r\n            <div className={classes.stars3}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nStarParallax.propTypes = {};\r\n\r\nexport default StarParallax;\r\n","import {ToastsAction} from \"./toasts.types\";\r\n\r\nexport const globalError = (msg) => ({\r\n    type: ToastsAction.GLOBAL_ERROR,\r\n    payload: msg\r\n});\r\n\r\nexport const globalSuccess = (msg) => ({\r\n    type: ToastsAction.GLOBAL_SUCCESS,\r\n    payload: msg\r\n});\r\n\r\nexport const clearToast = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: ToastsAction.CLEAR_TOAST\r\n        })\r\n    }\r\n}\r\n","import {toast, ToastContainer} from \"react-toastify\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearToast} from \"../../../store/toasts/toasts.actions\";\r\nimport {useEffect} from \"react\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport function Toasts() {\r\n    const toasts = useSelector(state => state.toasts)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        function showToast(type, msg) {\r\n            switch(type){\r\n                case 'SUCCESS':\r\n                    toast.success(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                case 'ERROR':\r\n                    toast.error(msg,{\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        theme: 'dark',\r\n                    })\r\n                    break;\r\n                default:\r\n                    return false\r\n            }\r\n        }\r\n\r\n        if (toasts && toasts.error) {\r\n            const msg = toasts.msg ? toasts.msg : 'Error';\r\n            showToast('ERROR', msg);\r\n            dispatch(clearToast())\r\n        }\r\n        if (toasts && toasts.success) {\r\n            const msg = toasts.msg ? toasts.msg : 'OK!';\r\n            showToast('SUCCESS', msg);\r\n            dispatch(clearToast())\r\n        }\r\n    }, [toasts, dispatch])\r\n    return (\r\n        <ToastContainer/>\r\n    )\r\n}\r\n\r\nToasts.propTypes = {};\r\n","export default __webpack_public_path__ + \"static/media/loader.c44865d4.png\";","import loaderImage from './../../../assets/images/loader.png'\r\n\r\nexport function Loader() {\r\n    return (\r\n        <div className={'text-center w-auto opacity-0 animate-delay-appear'}>\r\n            <div className={'w-auto inline-block overflow-hidden'}>\r\n                <img src={loaderImage} className={'animate-spin-slow inline w-24'} alt={'Loading...'}/>\r\n                <p className={'inline uppercase animate-pulse-slow'}>Loading...</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nLoader.propTypes = {};\r\n\r\n","import React from \"react\";\r\n\r\nconst starWarsAPIModel = {\r\n    average_height: {\r\n        type: String,\r\n        label: 'Average height',\r\n        suffix: 'cm',\r\n    },\r\n    average_lifespan: {\r\n        type: String,\r\n        label: 'Average lifespan',\r\n        suffix: 'y',\r\n    },\r\n    birth_year: {\r\n        type: String,\r\n        label: 'Birth year'\r\n    },\r\n    cargo_capacity: {\r\n        type: String,\r\n        label: \"Cargo capacity\",\r\n    },\r\n    classification: {\r\n        type: String,\r\n        label: \"Classification\",\r\n    },\r\n    characters: {\r\n        type: Array,\r\n        label: 'characters'\r\n    },\r\n    consumables: {\r\n        type: String,\r\n        label: \"Consumables\",\r\n    },\r\n    cost_in_credits: {\r\n        type: String,\r\n        label: \"Cost in Credits\",\r\n    },\r\n    climate: {\r\n        type: String,\r\n        label: \"Climate\",\r\n    },\r\n    crew: {\r\n        type: String,\r\n        label: \"Crew\",\r\n    },\r\n    designation: {\r\n        type: String,\r\n        label: 'Designation'\r\n    },\r\n    diameter: {\r\n        type: String,\r\n        label: 'Diameter'\r\n    },\r\n    director: {\r\n        type: String,\r\n        label: 'Director'\r\n    },\r\n    episode_id: {\r\n        type: String,\r\n        label: 'Episode Id'\r\n    },\r\n    eye_color: {\r\n        type: String,\r\n        label: 'Eye color'\r\n    },\r\n    eye_colors: {\r\n        type: String,\r\n        label: 'Eye colors'\r\n    },\r\n    films: {\r\n        type: Array,\r\n        label: 'films'\r\n    },\r\n    gender: {\r\n        type: String,\r\n        label: 'Gender'\r\n    },\r\n    gravity: {\r\n        type: String,\r\n        label: 'Gravity'\r\n    },\r\n    hair_color: {\r\n        type: String,\r\n        label: 'Hair color'\r\n    },\r\n    hair_colors: {\r\n        type: String,\r\n        label: 'Hair colors'\r\n    },\r\n    height: {\r\n        type: String,\r\n        label: 'Height',\r\n        suffix: \"cm\",\r\n    },\r\n    homeworld: {\r\n        type: String,\r\n        label: 'home world',\r\n        link: true,\r\n    },\r\n    hyperdrive_rating: {\r\n        type: String,\r\n        label: 'Hyperdrive rating',\r\n    },\r\n    language: {\r\n        type: String,\r\n        label: 'Language',\r\n    },\r\n    length: {\r\n        type: String,\r\n        label: 'Length',\r\n    },\r\n    max_atmosphering_speed: {\r\n        type: String,\r\n        label: 'Max speed',\r\n    },\r\n    manufacturer: {\r\n        type: String,\r\n        label: 'Manufacturer',\r\n    },\r\n    mass: {\r\n        type: String,\r\n        label: 'Mass',\r\n        suffix: \"kg\",\r\n    },\r\n    MGLT: {\r\n        type: String,\r\n        label: 'MGLT',\r\n    },\r\n    model: {\r\n        type: String,\r\n        label: 'Model',\r\n    },\r\n    opening_crawl: {\r\n        type: String,\r\n        label: 'Opening Crawl'\r\n    },\r\n    orbital_period: {\r\n        type: String,\r\n        label: 'Orbital period'\r\n    },\r\n    passengers: {\r\n        type: String,\r\n        label: 'Passengers'\r\n    },\r\n    people: {\r\n        type: Array,\r\n        label: 'People'\r\n    },\r\n    pilots: {\r\n        type: Array,\r\n        label: 'Pilots'\r\n    },\r\n    planets: {\r\n        type: Array,\r\n        label: 'planets'\r\n    },\r\n    population: {\r\n        type: String,\r\n        label: 'Population'\r\n    },\r\n    producer: {\r\n        type: String,\r\n        label: 'Producer'\r\n    },\r\n    release_date: {\r\n        type: String,\r\n        label: 'Release date'\r\n    },\r\n    residents: {\r\n        type: Array,\r\n        label: 'Residents'\r\n    },\r\n    rotation_period: {\r\n        type: String,\r\n        label: 'Rotation period',\r\n    },\r\n    skin_color: {\r\n        type: String,\r\n        label: 'Skin color',\r\n    },\r\n    skin_colors: {\r\n        type: String,\r\n        label: 'Skin colors',\r\n    },\r\n    species: {\r\n        type: Array,\r\n        label: 'species'\r\n    },\r\n    surface_water: {\r\n        type: String,\r\n        label: 'Surface water',\r\n    },\r\n    starships: {\r\n        type: Array,\r\n        label: 'starships'\r\n    },\r\n    starship_class: {\r\n        type: String,\r\n        label: 'Starship class',\r\n    },\r\n    terrain: {\r\n        type: String,\r\n        label: 'Terrain',\r\n    },\r\n    vehicle_class: {\r\n        type: String,\r\n        label: 'Vehicle class',\r\n    },\r\n    vehicles: {\r\n        type: Array,\r\n        label: 'vehicles'\r\n    },\r\n\r\n}\r\n\r\n\r\n// <tr>\r\n//     <td>characters</td>\r\n//     <td>{film.characters.length > 0 && film.characters.map(\r\n//         film => <p className={'max-w-lg'}>{film}</p>\r\n//     )}</td>\r\n// </tr>\r\n\r\n//returns table built on SWAPI data\r\nexport function formatSWAPIDataTable(data, maxRows = -1, skipArrays = false, skipFields = []) {\r\n\r\n    let rows = [];\r\n    for (const key in data) {\r\n        if (maxRows>=0 && rows.length === maxRows) break;\r\n        if (starWarsAPIModel[key] !== undefined) {\r\n            if (starWarsAPIModel[key].type === Array) {\r\n                if ((!skipArrays) && (data[key].length > 0)) {\r\n                    rows.push(\r\n                        <tr key={key}>\r\n                            <td>{starWarsAPIModel[key].label}</td>\r\n                            <td>Array</td>\r\n                        </tr>\r\n                    )\r\n                } else {\r\n                    if (!skipArrays) {\r\n                        rows.push(\r\n                            <tr key={key}>\r\n                                <td>{starWarsAPIModel[key].label}</td>\r\n                                <td>Array</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                }\r\n            } else {\r\n                const skipProp = ['n/a', 'unknown', 'N/A', null];\r\n                try {\r\n                    if (!(skipProp.includes(data[key]) || skipFields.includes(key))) {\r\n                        rows.push(\r\n                            <tr key={key}>\r\n                                <td className={'w-1/3'}>\r\n                                    <div className={'overflow-hidden h-6'}>{starWarsAPIModel[key].label}</div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className={'overflow-hidden h-6'}>\r\n                                        <p className={'overflow-ellipsis'}>{data[key].toString()}{starWarsAPIModel[key].suffix}</p>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                } catch (e) {\r\n                    console.log(\"Unknown key\", key)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n            {rows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport function extractSWAPIId(path) {\r\n    const url = path.slice(0, -1);\r\n    return +url.substring(url.lastIndexOf('/') + 1);\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\nimport classes from \"./flipCard.module.scss\";\r\n\r\nexport const FlipCard = ({children}) => {\r\n\r\n    return (\r\n        <article className={classes.flipCard}>\r\n            {children}\r\n        </article>\r\n    )\r\n}\r\n\r\nFlipCard.propTypes = {children: PropTypes.node};\r\n","export default __webpack_public_path__ + \"static/media/jedi.d534cef7.svg\";","import jediLogo from '../../../assets/images/jedi.svg'\r\nimport React from \"react\";\r\n\r\ntype CloudImageProps = {\r\n    category: string,\r\n    preset: string,\r\n    imgId: number,\r\n    title?: string,\r\n    className?: string\r\n}\r\n\r\nexport function CloudImage({category, preset, imgId, title, className}: CloudImageProps) {\r\n    //todo alt image\r\n    const errorHandler = (e: React.SyntheticEvent<HTMLImageElement>) => {\r\n        e.currentTarget.src = jediLogo;\r\n        //e.target.className = 'transform translate-x-1/2 translate-y-1/2 w-1/2 h-1/2';\r\n    };\r\n\r\n    let transform;\r\n    switch (preset) {\r\n        case 'circle':\r\n            transform = '/w_96,c_fill,ar_1:1,g_auto,r_max';\r\n            break;\r\n        case 'card':\r\n            transform = '/c_crop,c_fill,w_350,h_320,g_face';\r\n            break;\r\n        case 'page':\r\n            transform = '/c_crop,w_500,c_fill,h_350,g_face';\r\n            break;\r\n        default:\r\n            transform = '';\r\n    }\r\n    return (\r\n        <img\r\n            className={className}\r\n            title={title}\r\n            alt={title}\r\n            src={`${process.env.REACT_APP_CLOUDINARY_URL}${transform}/starwars/${category}/${imgId}.jpg`}\r\n            style={{}}\r\n            onError={errorHandler}\r\n        />)\r\n}\r\n","import classes from './neonButton.module.scss'\r\nimport clsx from \"clsx\";\r\nimport React, {ReactNode} from \"react\";\r\n\r\ntype Props = {\r\n    small: boolean,\r\n    className: string\r\n    children: ReactNode\r\n}\r\nconst NeonButton = ({small, className, children}: Props) => (\r\n    <div className={clsx([classes.container, className])}>\r\n        <div className={small ? classes.smallButton : classes.button}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nNeonButton.defaultProps = {className: ''}\r\n\r\nexport default NeonButton;\r\n","import {formatSWAPIDataTable} from \"../../utils/swapi\";\r\nimport {FlipCard} from \"../UI/flipCard/flipCard\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CloudImage} from \"../UI/cloudImage/cloudImage\";\r\nimport NeonButton from \"../UI/neonButton/neonButton\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n// <img\r\n//     src={src}\r\n//     onError={(e) => {\r\n//         e.target.onerror = null;\r\n//         e.target.src = `https://robohash.org/${title}?size=310x310`\r\n//     }}\r\n// />\r\n\r\ntype BasicCardProps = {\r\n    category: string,\r\n    item: {\r\n        name: string,\r\n        title: string,\r\n        id: number\r\n    }\r\n}\r\n\r\nexport function ArticleCard({category, item}:BasicCardProps) {\r\n    const itemDataTable = formatSWAPIDataTable(item, 5, true)\r\n    let title = item.name !== undefined ? item.name : item.title;\r\n    //console.log(`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`)\r\n    return (\r\n        <FlipCard>\r\n            <section>\r\n                <div className={'overflow-hidden flex-grow'}>\r\n                    <CloudImage\r\n                        category={category} imgId={item.id} preset={'card'}\r\n                        title={title}\r\n                    />\r\n                </div>\r\n                {/*<img src={`https://res.cloudinary.com/di6qjuwyo/starwars/${category}/${item.id}.jpg`}/>*/}\r\n                {/*<img alt={`${film.title}`} src={`https://robohash.org/${film.title}?size=240x240`}/>*/}\r\n                {/*https://res.cloudinary.com/di6qjuwyo/image/upload/v1636859976/starwars/heroes/1.jpg*/}\r\n                <div className={'text-2xl text-center py-4 bg-black'}>{title}</div>\r\n            </section>\r\n            <section>\r\n                <div className={'flex flex-col'}>\r\n                    <div className={'flex items-center p-2 gap-4'}>\r\n                        <CloudImage className={'w-24 h-24 rounded-full'} category={category} imgId={item.id}\r\n                                    preset={'circle'}/>\r\n                        <p className={'text-lg'}>{title}</p>\r\n                    </div>\r\n                    {itemDataTable}\r\n                    <div className={'text-center'}>\r\n                        <Link to={`/${category}/${item.id}`}>\r\n                            <NeonButton small={true}>more</NeonButton>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </FlipCard>\r\n    )\r\n}\r\n\r\nArticleCard.propTypes = {\r\n    category: PropTypes.string,\r\n    item: PropTypes.object,\r\n};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useRef, useState, Suspense} from \"react\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {ArticleCard} from \"./articleCard/articleCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NeonButton from \"./UI/neonButton/neonButton\";\r\n\r\nconst FeaturedBox = ({title, stateSlice, getDataAction}) => {\r\n    const itemsMap = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataAction()).finally(\r\n            setLoading(false)\r\n        )\r\n    }, [dispatch, getDataAction])\r\n\r\n    if (loading) return <Loader/>\r\n    return (\r\n        <section className={'bg-black bg-opacity-75 my-24 w-full animate-appear'}>\r\n            <div className={'container mx-auto'}>\r\n                <h2>{title}</h2>\r\n                <div className='flex gap-8 justify-center'>\r\n                    {loading && <Loader/>}\r\n                    <MediaQuery maxWidth={814}>\r\n                        {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 1).map((item) => (\r\n                            <ArticleCard key={item.id} item={item} category={stateSlice}/>\r\n                        ))}\r\n                    </MediaQuery>\r\n                    <MediaQuery maxWidth={1279} minWidth={815}>\r\n                        {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 2).map((item) => (\r\n                            <ArticleCard key={item.id} item={item} category={stateSlice}/>\r\n                        ))}\r\n                    </MediaQuery>\r\n                    <MediaQuery maxWidth={1549} minWidth={1280}>\r\n                        {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 3).map((item) => (\r\n                            <ArticleCard key={item.id} item={item} category={stateSlice}/>\r\n                        ))}\r\n                    </MediaQuery>\r\n                    <MediaQuery minWidth={1550}>\r\n                        {itemsMap.size > 0 && [...itemsMap.values()].slice(0, 4).map((item) => (\r\n                            <ArticleCard key={item.id} item={item} category={stateSlice}/>\r\n                        ))}\r\n                    </MediaQuery>\r\n                </div>\r\n                <div className={'text-center mt-1 py-4'}>\r\n                    <Link to={`/${stateSlice}`} className={'text-center'}>\r\n                        <NeonButton className={'w-60'}>more</NeonButton>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nFeaturedBox.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeaturedBox;\r\n","import axios from \"axios\";\r\n\r\nconst FIREBASE_API_URL = process.env.REACT_APP_FIREBASE_API_URL;\r\n\r\nexport async function apiGetDataPage(resource, next, limit = 10) {\r\n    const offset = next !== '' ? `&startAt=${next + 1}` : '';\r\n    const query = `${FIREBASE_API_URL}${resource}.json/?orderBy=\"id\"${offset}&limitToFirst=${limit}`\r\n    const response = await axios.get(query)\r\n    const items = new Map();\r\n    let lastId = null;\r\n    for (let key in response.data) {\r\n        items.set(response.data[key].id, {...response.data[key], dbId: key})\r\n        lastId = response.data[key].id;\r\n    }\r\n    console.log('Loading Page', items)\r\n    return {\r\n        dataEnd: (items.size < limit),\r\n        next: lastId,\r\n        items\r\n    };\r\n}\r\n\r\nconst stateSliceToSWAPIResource = {\r\n    films: 'films',\r\n    characters: 'people',\r\n    planets: 'planets',\r\n    species: 'species',\r\n    starships: 'starships',\r\n    vehicles: 'vehicles',\r\n}\r\n\r\nexport async function apiGetDataItem(stateSlice, id) {\r\n    try {\r\n        const resource = stateSliceToSWAPIResource[stateSlice];\r\n        const query = `${FIREBASE_API_URL}${resource}.json/?orderBy=\"id\"&equalTo=${id}`\r\n        const response = await axios.get(query)\r\n\r\n        if (Object.keys(response.data).length !==0) {\r\n            let [key, value] = Object.entries(response.data)[0];\r\n            return {\r\n                ...value, dbId: key\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n","import {globalError} from \"../toasts/toasts.actions\";\r\nimport {apiGetDataItem, apiGetDataPage} from \"../../api/api\";\r\n\r\nexport async function getNextDataPage(options) {\r\n    try {\r\n        const oldState = options.oldState;\r\n        if (!oldState.dataEnd) {\r\n            const dataPage = await apiGetDataPage(options.resourceType, oldState.next)\r\n            const combinedItems = new Map([...oldState.items, ...dataPage.items])\r\n            const payload = {\r\n                dataEnd: dataPage.dataEnd,\r\n                next: dataPage.next,\r\n                items: combinedItems,\r\n            }\r\n            options.dispatch({type: options.actionType, payload})\r\n            return payload;\r\n        }\r\n    } catch (e) {\r\n        options.dispatch(globalError(e.message))\r\n    }\r\n}\r\n\r\nexport async function getDataItems(options) {\r\n    try {\r\n        const newItemIds = options.selectedItems.filter(\r\n            (id => !options.oldState.items.has(+id))\r\n        )\r\n        if (newItemIds.length > 0) {\r\n            const newItems = new Map();\r\n            for (let newItemId of newItemIds) {\r\n                const newItem = await apiGetDataItem(options.resourceType, newItemId)\r\n                if (newItem) newItems.set(newItem.id, newItem);\r\n            }\r\n            const payload = new Map([...options.oldState.items, ...newItems])\r\n            options.dispatch({type: options.actionType, payload})\r\n            return payload;\r\n        }\r\n    } catch (e) {\r\n        console.error(e.message)\r\n        options.dispatch(globalError(e.message))\r\n    }\r\n}\r\n","import {getNextDataPage, getDataItems} from \"../utils/api-actions\";\r\nimport {FilmsAction} from \"./films.types\";\r\n\r\n\r\nexport function getNextFilmDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            resourceType: 'films',\r\n            actionType: FilmsAction.GET_FILM_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getFilms(filmIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().films,\r\n            dispatch: dispatch,\r\n            resourceType: 'films',\r\n            actionType: FilmsAction.GET_FILMS,\r\n            selectedItems: filmIds,\r\n\r\n        }\r\n        await getDataItems(options)\r\n    }\r\n}\r\n","import {getNextDataPage, getDataItems} from \"../utils/api-actions\";\r\nimport {CharactersAction} from \"./character.types\";\r\n\r\n\r\nexport function getNextCharacterDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().characters,\r\n            dispatch: dispatch,\r\n            resourceType: 'people',\r\n            actionType: CharactersAction.GET_CHARACTER_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getCharacters(charactersIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().characters,\r\n            dispatch: dispatch,\r\n            resourceType: 'characters',\r\n            actionType: CharactersAction.GET_CHARACTERS,\r\n            selectedItems: charactersIds,\r\n\r\n        }\r\n        await getDataItems(options)\r\n    }\r\n}\r\n","import {getNextDataPage, getDataItems} from \"../utils/api-actions\";\r\nimport {PlanetsAction} from \"./planets.types\";\r\n\r\nexport function getNextPlanetDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().planets,\r\n            dispatch: dispatch,\r\n            resourceType: 'planets',\r\n            actionType: PlanetsAction.GET_PLANET_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getPlanets(planetIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().planets,\r\n            dispatch: dispatch,\r\n            resourceType: 'planets',\r\n            actionType: PlanetsAction.GET_PLANETS,\r\n            selectedItems: planetIds,\r\n\r\n        }\r\n        await getDataItems(options)\r\n    }\r\n}\r\n","import {getNextDataPage, getDataItems} from \"../utils/api-actions\";\r\nimport {StarshipsAction} from \"./starships.types\";\r\n\r\n\r\nexport function getNextStarshipDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().starships,\r\n            dispatch: dispatch,\r\n            resourceType: 'starships',\r\n            actionType: StarshipsAction.GET_STARSHIP_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getStarships(starshipIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().starships,\r\n            dispatch: dispatch,\r\n            resourceType: 'starships',\r\n            actionType: StarshipsAction.GET_STARSHIPS,\r\n            selectedItems: starshipIds,\r\n\r\n        }\r\n        await getDataItems(options)\r\n    }\r\n}\r\n","import {getNextDataPage, getDataItems} from \"../utils/api-actions\";\r\nimport {VehiclesAction} from \"./vehicles.types\";\r\n\r\n\r\nexport function getNextVehicleDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().vehicles,\r\n            dispatch: dispatch,\r\n            resourceType: 'vehicles',\r\n            actionType: VehiclesAction.GET_VEHICLE_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\nexport function getVehicles(vehicleIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().vehicles,\r\n            dispatch: dispatch,\r\n            resourceType: 'vehicles',\r\n            actionType: VehiclesAction.GET_VEHICLES,\r\n            selectedItems: vehicleIds,\r\n\r\n        }\r\n        await getDataItems(options)\r\n    }\r\n}\r\n","import {getNextDataPage, getDataItems} from \"../utils/api-actions\";\r\nimport {SpeciesAction} from \"./species.types\";\r\n\r\n\r\nexport function getNextSpeciesDataPage() {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().species,\r\n            dispatch: dispatch,\r\n            resourceType: 'species',\r\n            actionType: SpeciesAction.GET_SPECIES_PAGE\r\n        }\r\n        await getNextDataPage(options)\r\n    }\r\n}\r\n\r\n\r\nexport function getSpecies(speciesIds) {\r\n    return async (dispatch, getState) => {\r\n        const options = {\r\n            oldState: getState().species,\r\n            dispatch: dispatch,\r\n            resourceType: 'species',\r\n            actionType: SpeciesAction.GET_SPECIES,\r\n            selectedItems: speciesIds,\r\n        }\r\n        await getDataItems(options)\r\n    }\r\n}\r\n","import * as PropTypes from \"prop-types\";\r\n\r\nexport const Main = ({children}) => (\r\n    <main className={'flex flex-col items-stretch'}>\r\n        {children}\r\n    </main>\r\n)\r\n\r\nMain.propTypes = {children: PropTypes.node};\r\n","import FeaturedBox from \"../../featuredBox\";\r\nimport {getNextFilmDataPage} from \"../../../store/films/films.actions\";\r\nimport {getNextCharacterDataPage} from \"../../../store/characters/characters.actions\";\r\nimport {getNextPlanetDataPage} from \"../../../store/planets/planets.actions\";\r\nimport {getNextStarshipDataPage} from \"../../../store/starships/starships.actions\";\r\nimport {getNextVehicleDataPage} from \"../../../store/vehicles/vehicles.actions\";\r\nimport {getNextSpeciesDataPage} from \"../../../store/species/species.actions\";\r\nimport {Main} from \"../../main\";\r\n\r\n\r\nexport function Home() {\r\n    return (\r\n        <Main>\r\n            <FeaturedBox title={'films'} stateSlice={'films'} getDataAction={getNextFilmDataPage}/>\r\n            <FeaturedBox title={'characters'} stateSlice={'characters'} getDataAction={getNextCharacterDataPage}/>\r\n            <FeaturedBox title={'starships'} stateSlice={'starships'} getDataAction={getNextStarshipDataPage}/>\r\n            <FeaturedBox title={'vehicles'} stateSlice={'vehicles'} getDataAction={getNextVehicleDataPage}/>\r\n            <FeaturedBox title={'planets'} stateSlice={'planets'} getDataAction={getNextPlanetDataPage}/>\r\n            <FeaturedBox title={'species'} stateSlice={'species'} getDataAction={getNextSpeciesDataPage}/>\r\n        </Main>)\r\n\r\n}\r\n","import {useEffect, useState} from \"react\";\r\n\r\n//updateOnlyIfIntersecting - better performance - update parent component only after ref appears on screen\r\n\r\nconst useVisible = (ref, defIntersecting = false, updateOnlyIfIntersecting = false, rootMargin = \"0px\") => {\r\n    // State and setter for storing whether element is visible\r\n    //todo more tests\r\n    const [isIntersecting, setIntersecting] = useState(defIntersecting);\r\n    useEffect(() => {\r\n        const refCopy = ref;\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                // Update our state when observer callback fires\r\n                if (updateOnlyIfIntersecting) {\r\n                    if (entry.isIntersecting)\r\n                        setIntersecting((value) => Number(value) + 1);\r\n                } else {\r\n                    setIntersecting(entry.isIntersecting);\r\n                }\r\n            },\r\n            {\r\n                rootMargin,\r\n            }\r\n        );\r\n\r\n        if (refCopy.current) {\r\n            observer.observe(refCopy.current);\r\n        }\r\n        return () => {\r\n            if (refCopy.current)\r\n                observer.unobserve(refCopy.current);\r\n        };\r\n    }, [ref, updateOnlyIfIntersecting, rootMargin]); // Empty array ensures that effect is only run on mount and unmount\r\n    return isIntersecting;\r\n};\r\n\r\nexport default useVisible;\r\n","import * as PropTypes from \"prop-types\";\r\n\r\n\r\nexport const PageTitle = ({title}) => (\r\n    <h1 className={'absolute right-4 top-36 opacity-75 max-w-3/4 text-right leading-none lowercase'}>{title}</h1>\r\n);\r\n\r\nPageTitle.propTypes = {title: PropTypes.string};\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport useVisible from \"../hooks/useVisible\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ArticleCard} from \"./articleCard/articleCard\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {PageTitle} from \"./pageTitle\";\r\n\r\n\r\nconst CategoryPage = ({title = '', stateSlice, getDataAction, ...rest}) => {\r\n    //todo optimization\r\n    const pageTitle = title !== '' ? title : stateSlice;\r\n    const items = useSelector(state => state[stateSlice].items)\r\n\r\n    const dispatch = useDispatch();\r\n    const loadMore = useRef(null);\r\n    //const [loading, setLoading] = useState(true);\r\n    const isVisible = useVisible(loadMore, false, true)\r\n\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n      //      setLoading(true)\r\n            dispatch(getDataAction()).finally(\r\n        //        setLoading(false)\r\n            );\r\n        }\r\n\r\n    }, [isVisible, dispatch, getDataAction])\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title={pageTitle}/>\r\n            <div className={'container mx-auto '}>\r\n                <div className='flex flex-wrap justify-center gap-8 relative'>\r\n                    {items.size > 0 && [...items.values()].map((item) => {\r\n                        return (\r\n                            // <div className={'animate-appear'}>\r\n                                <ArticleCard key={item.id+new Date().getMilliseconds()} item={item} category={stateSlice}/>\r\n                            // </div>\r\n                        )\r\n                    })}\r\n                    <div ref={loadMore} className='absolute w-0 h-0 bottom-96'/>\r\n                </div>\r\n                {/*{loading && <Loader/>}*/}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nCategoryPage.propTypes = {\r\n    stateSlice: PropTypes.string.isRequired,\r\n    getDataAction: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default CategoryPage;\r\n","const Page404 = () => {\r\n    return (\r\n        <>\r\n            <div className={'container mx-auto text-center pt-64'}>\r\n                <span className={'text-9xl font-sans font-extrabold text-red-600'}>404</span>\r\n                <span className={'font-star-wars text-4xl'}>This planet not exists!</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Page404;\r\n","import classes from \"./crawl.module.css\";\r\nconst Crawl = ({children}) => {\r\n    return (\r\n        <div className={classes.body}>\r\n           <div className={classes.fade}></div>\r\n            <section className={classes.starWars}>\r\n                <div className={classes.crawl}>\r\n                    {children}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Crawl;\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {extractSWAPIId} from \"../utils/swapi\";\r\nimport {useEffect} from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function DataBox({title, items, stateSlice, getDataAction}) {\r\n    const loadedItems = useSelector(state => state[stateSlice].items)\r\n    const dispatch = useDispatch();\r\n    const itemsIds = items ? items.map(item => {\r\n        return extractSWAPIId(item);\r\n    }) : undefined;\r\n\r\n    useEffect(() => {\r\n        if (itemsIds) {\r\n            const neededIds = itemsIds.filter(id => !loadedItems.has(id))\r\n            dispatch(getDataAction(neededIds));\r\n        }\r\n    }, [dispatch, itemsIds, loadedItems, getDataAction])\r\n\r\n    const foundItems = itemsIds ? itemsIds.filter(id => loadedItems.has(id)).map(id => loadedItems.get(id)) : undefined;\r\n    if (!foundItems) return null;\r\n\r\n    return (\r\n        <div>\r\n            <p className={'font-star-wars text-3xl my-2 lowercase'}>{title}</p>\r\n            <div className={'flex flex-wrap gap-4'}>\r\n                {foundItems.map(item => {\r\n                    return (\r\n                        <Link key={item.id} to={`/${stateSlice}/${item.id}`}>\r\n                            <div className={'border-2 p-2 rounded-lg bg-gray-900 border-gray-400'}>\r\n                                {item.name ? item.name : item.title}\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDataBox.propTypes = {\r\n    stateSlice: PropTypes.string,\r\n    title: PropTypes.string,\r\n    data: PropTypes.array,\r\n    getDataAction: PropTypes.func,\r\n};\r\n","import {PageTitle} from \"../../pageTitle\";\r\nimport {useParams} from \"react-router\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getFilms} from \"../../../store/films/films.actions\";\r\nimport {CloudImage} from \"../../UI/cloudImage/cloudImage\";\r\nimport Crawl from \"../../crawl/crawl\";\r\nimport {formatSWAPIDataTable} from \"../../../utils/swapi\";\r\nimport {Loader} from \"../../UI/loader/loader\";\r\nimport {getCharacters} from \"../../../store/characters/characters.actions\";\r\nimport {DataBox} from \"../../dataBox\";\r\nimport {getStarships} from \"../../../store/starships/starships.actions\";\r\nimport {getVehicles} from \"../../../store/vehicles/vehicles.actions\";\r\nimport {getPlanets} from \"../../../store/planets/planets.actions\";\r\nimport {getSpecies} from \"../../../store/species/species.actions\";\r\n\r\n\r\n\r\nconst FilmPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    const film = useSelector(state => state.films.items.get(id));\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getFilms([id]))\r\n    }, [id, dispatch]);\r\n\r\n    if (!film) return <Loader/>\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle title={film.title}/>\r\n            <div className={'bg-black bg-opacity-75 py-8'}>\r\n                <div className={'flex h-96 container mx-auto'}>\r\n                    <CloudImage\r\n                        className={'w-auto'}\r\n                        category='films' imgId={film.id} preset={'page'}\r\n                        title={film.title}\r\n                    />\r\n                    {film.opening_crawl && <Crawl>\r\n                        <div>{film.opening_crawl}</div>\r\n                    </Crawl>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={'container mx-auto bg-black'}>\r\n                {formatSWAPIDataTable(film, undefined, true, ['opening_crawl'])}\r\n            </div>\r\n            <div className={'container mx-auto'}>\r\n                <DataBox title={'characters'} stateSlice={'characters'} items={film.characters} getDataAction={getCharacters}/>\r\n                <DataBox title={'starships'} stateSlice={'starships'} items={film.starships} getDataAction={getStarships}/>\r\n                <DataBox title={'vehicles'} stateSlice={'vehicles'} items={film.vehicles} getDataAction={getVehicles}/>\r\n                <DataBox title={'planets'} stateSlice={'planets'} items={film.planets} getDataAction={getPlanets}/>\r\n                <DataBox title={'species'} stateSlice={'species'} items={film.species} getDataAction={getSpecies}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilmPage;\r\n","export default __webpack_public_path__ + \"static/media/star_wars_logo.e3b54fcc.svg\";","import classes from './mobileMenu.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useRef} from \"react\";\r\n\r\nfunction HeaderLink({id, title, link, onClose}) {\r\n    return (<li className={classes.mobileMenu__item}>\r\n        <NavLink to={link} className={classes.mobileMenu__link} onClick={onClose}>\r\n            {/*<span>{id}</span>*/}\r\n            {title}\r\n        </NavLink>\r\n    </li>);\r\n}\r\n\r\nconst MobileMenu = ({links}) => {\r\n    const menuCheckRef = useRef(null);\r\n\r\n    const onMenuClose = () => {\r\n        menuCheckRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.mobileMenu}>\r\n\r\n            <input ref={menuCheckRef} type=\"checkbox\" className={classes.menuCheckbox} id=\"navi-toggle\"/>\r\n            <label htmlFor=\"navi-toggle\" className={classes.menuButton}>\r\n                <span className={classes.menuIcon}>&nbsp;</span>\r\n            </label>\r\n            <div className={classes.background}>&nbsp;</div>\r\n            <nav className={classes.mobileMenu__nav}>\r\n                <ul className={classes.mobileMenu__list}>\r\n                    {links().map((link, index) =>\r\n                        <HeaderLink id={index} key={index} link={link.to} title={link.title}\r\n                                    onClose={() => onMenuClose()}/>\r\n                    )}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MobileMenu;\r\n","import {Link, NavLink} from \"react-router-dom\";\r\nimport classes from \"./header.module.scss\";\r\nimport React from \"react\";\r\nimport logo from '../../../assets/images/star_wars_logo.svg'\r\nimport MobileMenu from \"../../UI/mobileMenu/mobileMenu\";\r\nimport {useMediaQuery} from \"react-responsive\";\r\n\r\nfunction menuLinks() {\r\n    return [\r\n        {to: \"/\", title: \"Home\"},\r\n        {to: \"/films\", title: \"Films\"},\r\n        {to: \"/characters\", title: \"Characters\"},\r\n        {to: \"/starships\", title: \"Starships\"},\r\n        {to: \"/vehicles\", title: \"Vehicles\"},\r\n        {to: \"/planets\", title: \"Planets\"},\r\n        {to: \"/species\", title: \"Species\"},\r\n    ]\r\n}\r\n\r\nfunction Header() {\r\n    const isSmallScreen = useMediaQuery({query: '(max-width: 1024px)'})\r\n    return (\r\n            <header className={classes.header}>\r\n                <div className={'flex container mx-auto'}>\r\n                    <div className={'w-48 text-center'}>\r\n                        <Link to={'/'} className={''}>\r\n                            <img src={logo} className={classes.logo} alt={'StarWars Fandom'}/>\r\n                            <div className={classes.logoTitle}>Fandom</div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className={' flex-grow'}/>\r\n                    {!isSmallScreen &&\r\n                        <nav>\r\n                            {menuLinks().map((link, index) =>\r\n                                <NavLink key={index} to={link.to}>{link.title}</NavLink>\r\n                            )}\r\n                        </nav>}\r\n                    {isSmallScreen && <MobileMenu links={() => menuLinks()}/>}\r\n                </div>\r\n            </header>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {getCharacters} from \"../store/characters/characters.actions\";\r\nimport {Loader} from \"./UI/loader/loader\";\r\nimport {PageTitle} from \"./pageTitle\";\r\nimport {CloudImage} from \"./UI/cloudImage/cloudImage\";\r\nimport {formatSWAPIDataTable} from \"../utils/swapi\";\r\nimport {DataBox} from \"./dataBox\";\r\nimport {getFilms} from \"../store/films/films.actions\";\r\nimport {getStarships} from \"../store/starships/starships.actions\";\r\nimport {getVehicles} from \"../store/vehicles/vehicles.actions\";\r\nimport {getPlanets} from \"../store/planets/planets.actions\";\r\nimport {getSpecies} from \"../store/species/species.actions\";\r\n\r\nconst dataLoader = {\r\n    films: getFilms,\r\n    characters: getCharacters,\r\n    planets: getPlanets,\r\n    species: getSpecies,\r\n    starships: getStarships,\r\n    vehicles: getVehicles,\r\n}\r\n\r\nexport function LandingPage({id, stateSlice}) {\r\n    const pageTarget = useSelector(state => state[stateSlice].items.get(id));\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(dataLoader[stateSlice]([id]))\r\n    }, [id, dispatch, stateSlice]);\r\n\r\n    if (!pageTarget) return <Loader/>\r\n\r\n    const caption = pageTarget.title ? pageTarget.title : pageTarget.name;\r\n    return (\r\n        <div>\r\n            <PageTitle title={caption}/>\r\n            <div className={'bg-black bg-opacity-75 py-8'}>\r\n                <div className={'flex container mx-auto gap-x-8 flex-wrap'}>\r\n                    <CloudImage\r\n                        className={'object-cover'}\r\n                        category={stateSlice} imgId={pageTarget.id} preset={'page'}\r\n                        title={caption}\r\n                    />\r\n\r\n                <div className={'bg-red'}>\r\n                    {formatSWAPIDataTable(pageTarget, undefined, true, ['opening_crawl'])}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className={'container mx-auto'}>\r\n                <DataBox title={'films'} stateSlice={'films'} items={pageTarget.films} getDataAction={getFilms}/>\r\n                <DataBox title={'people'} stateSlice={'characters'} items={pageTarget.people}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'pilots'} stateSlice={'characters'} items={pageTarget.pilots}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'residents'} stateSlice={'characters'} items={pageTarget.residents}\r\n                         getDataAction={getCharacters}/>\r\n                <DataBox title={'starships'} stateSlice={'starships'} items={pageTarget.starships}\r\n                         getDataAction={getStarships}/>\r\n                <DataBox title={'vehicles'} stateSlice={'vehicles'} items={pageTarget.vehicles}\r\n                         getDataAction={getVehicles}/>\r\n                <DataBox title={'planets'} stateSlice={'planets'} items={pageTarget.planets}\r\n                         getDataAction={getPlanets}/>\r\n                <DataBox title={'species'} stateSlice={'species'} items={pageTarget.species}\r\n                         getDataAction={getSpecies}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../../landingPage\";\r\n\r\n\r\nconst CharacterPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'characters'}/>;\r\n};\r\n\r\nexport default CharacterPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../../landingPage\";\r\n\r\n\r\n\r\nconst PlanetPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'planets'}/>;\r\n};\r\n\r\nexport default PlanetPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../../landingPage\";\r\n\r\n\r\n\r\nconst StarshipPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'starships'}/>;\r\n};\r\n\r\nexport default StarshipPage;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../../landingPage\";\r\n\r\n\r\n\r\nconst SpeciesPage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'species'}/>;\r\n};\r\n\r\nexport default SpeciesPage;\r\n","const Footer = () => {\r\n    return (\r\n        <footer className={'p-4 mt-24 bg-black text-center text-gray-400 opacity-75'}>\r\n            <p>(C) 2021 by Michał Zdolski</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import {useParams} from \"react-router\";\r\nimport {LandingPage} from \"../../landingPage\";\r\n\r\n\r\n\r\nconst VehiclePage = () => {\r\n    const id = parseInt(useParams().id);\r\n    return <LandingPage id={id} stateSlice={'vehicles'}/>;\r\n};\r\n\r\nexport default VehiclePage;\r\n","import {useEffect} from \"react\";\r\nimport {useLocation} from \"react-router\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n","import StarParallax from \"./components/UI/starParallax/starParallax\";\r\nimport {HashRouter as Router, Route, Routes} from \"react-router-dom\";\r\nimport {Toasts} from \"./components/UI/toasts/toasts\";\r\nimport {Home} from \"./components/pages/home/home\";\r\nimport CategoryPage from \"./components/categoryPage\";\r\nimport {getNextVehicleDataPage} from \"./store/vehicles/vehicles.actions\";\r\nimport {getNextFilmDataPage} from \"./store/films/films.actions\";\r\nimport {getNextCharacterDataPage} from \"./store/characters/characters.actions\";\r\nimport {getNextPlanetDataPage} from \"./store/planets/planets.actions\";\r\nimport {getNextStarshipDataPage} from \"./store/starships/starships.actions\";\r\nimport {getNextSpeciesDataPage} from \"./store/species/species.actions\";\r\nimport Page404 from \"./components/pages/page404/page404\";\r\nimport FilmPage from \"./components/pages/films/filmPage\";\r\nimport Header from \"./components/layout/header/header\";\r\nimport CharacterPage from \"./components/pages/characters/characterPage\";\r\nimport PlanetPage from \"./components/pages/planets/planetPage\";\r\nimport StarshipPage from \"./components/pages/starships/starshipPage\";\r\nimport SpeciesPage from \"./components/pages/species/speciesPage\";\r\nimport Footer from \"./components/layout/footer/footer\";\r\nimport VehiclePage from \"./components/pages/vehicles/vehiclePage\";\r\nimport ScrollToTop from \"./components/scrollToTop/scrollToTop\";\r\nimport React from \"react\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <StarParallax/>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Header/>\r\n                <ScrollToTop/>\r\n                <Routes>\r\n                    <Route path={'/'} element={<Home/>}/>\r\n                    <Route path={'/films'} element={<CategoryPage stateSlice={'films'} getDataAction={getNextFilmDataPage}/>} />\r\n                    <Route path={'/films/:id'} element={<FilmPage/>} />\r\n                    <Route path={'/characters'} element={<CategoryPage stateSlice={'characters'} getDataAction={getNextCharacterDataPage}/>} />\r\n                    <Route path={'/characters/:id'} element={<CharacterPage/>} />\r\n                    <Route path={'/planets'} element={<CategoryPage stateSlice={'planets'} getDataAction={getNextPlanetDataPage}/>} />\r\n                    <Route path={'/planets/:id'} element={<PlanetPage/>} />\r\n                    <Route path={'/starships'} element={<CategoryPage stateSlice={'starships'} getDataAction={getNextStarshipDataPage}/>} />\r\n                    <Route path={'/starships/:id'} element={<StarshipPage/>} />\r\n                    <Route path={'/vehicles'} element={<CategoryPage stateSlice={'vehicles'} getDataAction={getNextVehicleDataPage}/>} />\r\n                    <Route path={'/vehicles/:id'} element={<VehiclePage/>} />\r\n                    <Route path={'/species'} element={<CategoryPage stateSlice={'species'} getDataAction={getNextSpeciesDataPage}/>} />\r\n                    <Route path={'/species/:id'} element={<SpeciesPage/>} />\r\n                    <Route path={'*'} element={<Page404/>} />\r\n                </Routes>\r\n            </Router>\r\n            <Footer/>\r\n            <Toasts/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport StoreProvider from \"./store/storeProvider\";\nimport App from \"./app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider>\n            <App/>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}